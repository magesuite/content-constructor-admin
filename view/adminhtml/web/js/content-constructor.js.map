{"version":3,"file":"content-constructor.js","sources":["../../src/components/_component-picker/component-picker.ts","../../src/utils/action-button/action-button.ts","../../src/utils/component-actions/component-actions.ts","../../src/utils/component-adder/component-adder.ts","../../src/utils/component-display-controller/component-display-controller.ts","../../src/utils/component-placeholder/component-placeholder.ts","../../src/components/brand-carousel/preview/brand-carousel.ts","../../src/components/button/preview/button.ts","../../src/components/category-links/preview/category-links.ts","../../src/components/cms-pages-teaser/preview/cms-pages-teaser.ts","../../src/components/custom-html/preview/custom-html.ts","../../src/components/daily-deal-teaser/preview/daily-deal-teaser.ts","../../src/components/headline/preview/headline.ts","../../src/components/hero-carousel/preview/hero-carousel.ts","../../src/components/image-teaser/preview/image-teaser.ts","../../src/components/magento-product-grid-teasers/preview/magento-product-grid-teasers.ts","../../src/components/paragraph/preview/paragraph.ts","../../src/components/product-carousel/preview/product-carousel.ts","../../src/components/product-finder/preview/product-finder.ts","../../src/components/products-grid/preview/products-grid.ts","../../src/components/separator/preview/separator.ts","../../src/components/static-block/preview/static-block.ts","../../src/components/_layout-builder/layout-builder.ts","../../src/components/_component-configurator/component-configurator.ts","../../src/components/button/configurator/button.ts","../../src/utils/category-picker/category-picker-templates.ts","../../src/utils/category-picker/category-picker.ts","../../src/components/category-links/configurator/category-links.ts","../../src/components/cms-pages-teaser/configurator/cms-pages-teaser.ts","../../src/components/custom-html/configurator/custom-html.ts","../../src/components/daily-deal-teaser/configurator/daily-deal-teaser.ts","../../src/components/headline/configurator/headline.ts","../../src/components/hero-carousel/configurator/hero-carousel.ts","../../src/components/image-teaser/configurator/image-teaser.ts","../../src/components/magento-product-grid-teasers/configurator/magento-product-grid-teasers.ts","../../src/components/paragraph/configurator/paragraph.ts","../../src/components/product-carousel/configurator/product-carousel.ts","../../src/components/product-finder/configurator/product-finder.ts","../../src/components/products-grid/configurator/products-grid.ts","../../src/components/static-block/configurator/static-block.ts","../../src/content-constructor.ts"],"sourcesContent":["/**\n * Single component information object.\n */\ninterface IComponentInformation {\n    type: string;\n    /**\n     * Name of the component (will be displayed in front).\n     * @type {string}\n     */\n    name: string;\n    description: string;\n}\n\n/**\n * Components information object that should be returned by AJAX call to API.\n */\ninterface IComponentsInformation {\n    components: IComponentInformation[];\n}\n\n/**\n * Componen picker.\n * Lists all types of components available in m2c in the grid/list mode\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst componentPicker: vuejs.ComponentOption = {\n    template: `<section class=\"cc-component-picker | {{ class }}\">\n        <ul class=\"cc-component-picker__list\" v-if=\"availableComponents.length\">\n            <li class=\"cc-component-picker__list-item cc-component-picker__list-item--{{component.type}}\" v-for=\"component in availableComponents\">\n                <a class=\"cc-component-picker__component-link\" href=\"#\" @click.prevent=\"onPickComponent( component.type )\">\n                    <span class=\"cc-component-picker__component-figure\">\n                        <svg class=\"cc-component-picker__component-icon\">\n                            <use v-bind=\"{ 'xlink:href': '#icon_component-' + component.type }\"></use>\n                        </svg>\n                    </span>\n                    <span class=\"cc-component-picker__component-name\">{{ component.name }}</span>\n                    <span class=\"cc-component-picker__component-description\">{{ component.description }}</span>\n                </a>\n            </li>\n        </ul>\n        <p class=\"cc-component-picker__no-components\" v-if=\"!availableComponents.length\">\n            No components available.\n        </p>\n    </section>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: String,\n            default: '',\n            coerce: (value: String): String => value.replace('cc-component-picker', ''),\n        },\n        /**\n         * Property containing callback triggered when user picks component.\n         */\n        pickComponent: {\n            type: Function,\n        },\n        /**\n         * JSON stringified array containing available components.\n         */\n        components: {\n            type: String,\n            default: '',\n        },\n        /**\n         * URL for API returning JSON stringified array containing available components.\n         */\n        componentsEndpoint: {\n            type: String,\n            default: '',\n        },\n        /**\n         * Assets src for icon\n         */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n    },\n    data(): any {\n        return {\n            availableComponents: [],\n        };\n    },\n    ready(): void {\n        // If inline JSON is provided then parse it.\n        if (this.components) {\n            this.availableComponents = JSON.parse(this.components);\n        } else if (this.componentsEndpoint) {\n            // Otherwise load from endpoint if URL provided.\n            this.$http.get(this.componentsEndpoint).then(function(response: vuejs.HttpResponse): void {\n                this.availableComponents = response.json();\n            });\n        }\n    },\n    methods: {\n        /**\n         * Component pick click handler.\n         * This handler triggers \"cc-component-picker__pick\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        onPickComponent(componentType: String): void {\n            this.$dispatch('component-picker__pick', componentType);\n\n            if (typeof this.pickComponent === 'function') {\n                this.pickComponent(componentType);\n            }\n        },\n    },\n};\n\nexport default componentPicker;\n","/**\n * Action button component version.\n * Small component that allows to set it's content.\n *\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst actionButton: vuejs.ComponentOption = {\n    template: `<button class=\"cc-action-button {{ class }}\" @click=\"_onClick\">\n        <slot></slot>\n    </button>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [String, Object, Array],\n            default: '',\n        },\n    },\n    methods: {\n        /**\n         * Button click handler.\n         * This handler triggers \"action-button__click\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        _onClick(event: Event): void {\n            this.$dispatch('action-button__click', event);\n        },\n    },\n};\n\nexport default actionButton;\n","/**\n * Component actions component.\n * This component is responsible for displaying and handling user interactions of\n * side utility navigation for each component that supports:\n * - Moving component up,\n * - Moving component down,\n * - Opening component settings,\n * - Deleting component.\n *\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst componentActions: vuejs.ComponentOption = {\n    template: `<aside class=\"cc-component-actions | {{ class }}\">\n        <div class=\"cc-component-actions__buttons\">\n            <slot name=\"cc-component-actions__buttons\"></slot>\n        </div>\n    </aside>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: String,\n            default: '',\n            coerce: (value: String): String => value.replace('cc-component-actions', ''),\n        },\n    },\n};\n\nexport default componentActions;\n","/**\n * Component controller component.\n * This component is responsible for displaying annd handling component adding button\n * @type {vuejs.ComponentOption} Vue component object.\n */\n\nconst componentAdder: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-adder {{ class }}\">\n        <div class=\"cc-component-adder__button-wrapper\" @click=\"onCreateComponent\">\n            <slot></slot>\n        </div>\n        <span class=\"cc-component-adder__dashline\"></span>\n    </div>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: String,\n            default: '',\n            coerce(value: string): string {\n                return value.replace('cc-component-adder', '');\n            },\n        },\n        /**\n         * Property containing callback triggered when user clicks \"add component\" button.\n         */\n        createComponent: {\n            type: Function,\n        },\n    },\n    methods: {\n        /**\n         * \"Add component\" button click handler.\n         * This handler triggers \"cc-component-adder__create-component\" event up the DOM chain when called.\n         * @param {Event} event Click event object.\n         */\n        onCreateComponent(event: Event): void {\n            this.$dispatch('component-adder__create-component', event);\n            if (typeof this.createComponent === 'function') {\n                this.createComponent(event);\n            }\n        },\n    },\n};\n\nexport default componentAdder;\n","/**\n * CC components display switcher.\n * This component is responsible for collecting input about display of given component on the FE side\n * it determines whether component should be shown on mobile, desktop, both or shouldn't be shown at all\n * @type {vuejs.ComponentOption} Vue component object.\n */\n\nconst componentDisplayController: vuejs.ComponentOption = {\n    template: `<div class=\"cc-component-display-controller {{ class }}\">\n        <div class=\"cc-component-display-controller__content\">\n            <slot></slot>\n        </div>\n    </div>`,\n};\n\nexport default componentDisplayController;\n","/**\n * Component placeholder component.\n */\nconst componentPlaceholder: any = {\n    template: `<div class=\"cc-component-placeholder\">\n        <div class=\"cc-component-placeholder__content\">\n            <slot></slot>\n        </div>\n    </div>`,\n};\n\nexport default componentPlaceholder;\n","import $ from 'jquery';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    category_id: string;\n};\n\n/**\n * Brand carousel preview component.\n * This component is responsible for displaying preview of brand carousel component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst brandCarouselPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-brand-carousel-preview\">\n        <svg class=\"cc-brand-carousel-preview__arrow cc-brand-carousel-preview__arrow--left\">\n            <use xlink:href=\"#icon_dashboard-arrow-left\"></use>\n        </svg>\n\n        <ul class=\"cc-brand-carousel-preview__list\">\n            <template v-for=\"item in 6\">\n                <li class=\"cc-brand-carousel-preview__list-item\">\n                    <div class=\"cc-brand-carousel-preview__brand-wrapper\">\n                        <svg class=\"cc-brand-carousel-preview__brand\">\n                            <use xlink:href=\"#icon_component-cc-brand-logo\"></use>\n                        </svg>\n                    </div>\n                </li>\n            </template>\n        </ul>\n\n        <svg class=\"cc-brand-carousel-preview__arrow cc-brand-carousel-preview__arrow--right\">\n            <use xlink:href=\"#icon_dashboard-arrow-right\"></use>\n        </svg>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [String, Object, Array],\n            default: '',\n        },\n        /**\n         * Assets (icons) source path.\n         */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n    },\n};\n\nexport default brandCarouselPreview;\n","/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    label: string;\n    target: string;\n}\n\n/**\n * Button preview component.\n * This component is responsible for displaying preview of button component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst buttonPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-button-preview\">\n        <button class=\"cc-button-preview__button\" type=\"button\">{{ configuration.label }}</button>\n    </div>`,\n    props: {\n        /**\n         * Single's component configuration \n         */\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [String, Object, Array],\n            default: '',\n        },\n    },\n};\n\nexport default buttonPreview;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    main_category_id: string;\n    main_category_labels: string;\n    sub_categories_ids: string;\n    sub_categories_labels: string;\n    shownumbers: boolean;\n};\n\n/**\n * Brand carousel preview component.\n * This component is responsible for displaying preview of brand carousel component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst categoryLinksPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-category-links-preview\">\n        <div class=\"cc-category-links-preview__wrapper\">\n            <h1 class=\"cc-category-links-preview__headline\">{{ configuration.main_category_labels[0] }}</h1>\n            <div class=\"cc-category-links-preview__content\">\n                <ul class=\"cc-category-links-preview__subcats\">\n                    <template v-for=\"(index, label) in configuration.sub_categories_labels\">\n                        <li class=\"cc-category-links-preview__subcat\" v-if=\"index < configuration.sub_categories_labels.length\">\n                            <span class=\"cc-category-links-preview__subcat-label\">{{ label }}</span>\n                        </li>\n                    </template>\n                </ul>\n\n                <div class=\"cc-category-links-preview__all-button\">\n                    <span class=\"cc-category-links-preview__all-button-text\">${ $t('All products') }</span>\n                </div>\n            </div>\n        </div>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [String, Object, Array],\n            default: '',\n        },\n    },\n};\n\nexport default categoryLinksPreview;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    tags: string;\n    limit: string;\n    currentScenario: {\n        desktopLayout: {\n            id: string,\n        },\n    };\n};\n\n/**\n * CMS teaser preview component.\n * This component is responsible for displaying preview of CMS teaser component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst cmsPagesTeaserPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-cms-pages-teaser-preview\">\n        <div class=\"cc-cms-pages-teaser-preview__wrapper\">\n            <ul class=\"cc-component-placeholder__pills\">\n                <li class=\"cc-component-placeholder__pill cc-component-placeholder__pill--clean\">\n                    <span class=\"cc-component-placeholder__pill-label\"><strong>${ $t('Tags') }:</strong></span>\n                </li>\n                <li class=\"cc-component-placeholder__pill\" v-for=\"tag in getTagsArray()\">\n                    <span class=\"cc-component-placeholder__pill-label\">{{ tag }}</span>\n                </li>\n            </ul>\n            <ul class=\"cc-cms-pages-teaser-preview__scene\" v-el:scene>\n                <li class=\"cc-cms-pages-teaser-preview__item\" v-for=\"(n, index) in 4\">\n                    <div class=\"cc-cms-pages-teaser-preview__teaser-wrapper\">\n                        <svg class=\"cc-cms-pages-teaser-preview__teaser\">\n                            <use xlink:href=\"#icon_cms-teaser-placeholder\"></use>\n                        </svg>\n                    </div>\n                </li>\n            </ul>\n            <ul class=\"cc-component-placeholder__pills cc-component-placeholder__pills--on-bottom\">\n                <li class=\"cc-component-placeholder__pill\">\n                    <span class=\"cc-component-placeholder__pill-label\">${ $t('Teasers limit') }: <strong>{{ configuration.limit }}</strong></span>\n                </li>\n                <li class=\"cc-component-placeholder__pill\">\n                    <span class=\"cc-component-placeholder__pill-label\">${ $t('Desktop layout') }: <strong>{{ configuration.currentScenario.desktopLayout.id }} ${ $t('teasers per row') }</strong></span>\n                </li>\n                <li class=\"cc-component-placeholder__pill\">\n                    <span class=\"cc-component-placeholder__pill-label\">${ $t('Mobile layout') }: <strong>{{ configuration.currentScenario.mobileLayout.id }}</strong></span>\n                </li>\n            </ul>\n        </div>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [String, Object, Array],\n            default: '',\n        },\n    },\n    methods: {\n        getTagsArray(): Array<any> {\n            return this.configuration.tags.split(',');\n        }\n    },\n};\n\nexport default cmsPagesTeaserPreview;\n","/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    title: string;\n    markup: string;\n}\n\n/**\n * Custom html preview component.\n * This component is responsible for displaying preview of custom-html component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n *\n */\nconst customHtmlPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-custom-html-preview\">\n        <div class=\"cc-custom-html-preview__content\">\n            <svg class=\"cc-custom-html-preview__bg\">\n                <use xlink:href=\"#icon_component-custom-html-bg\"></use>\n            </svg>\n            <h2 class=\"cc-custom-html-preview__title\">{{ configuration.title }}</h2>\n        </div>\n    </div>`,\n    props: {\n        /**\n         * Single's component configuration\n         */\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [String, Object, Array],\n            default: '',\n        },\n    },\n};\n\nexport default customHtmlPreview;\n","import $ from 'jquery';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    category_id: string;\n    skus: string;\n};\n \n/**\n * Daily deal teaser preview component.\n * This component is responsible for displaying preview of daily deal teaser component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst dailyDealTeaserPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-daily-deal-teaser-preview\">\n        <div class=\"cc-daily-deal-teaser-preview__container\">\n            <div class=\"cc-daily-deal-teaser-preview__main\">\n                <div class=\"cc-daily-deal-teaser-preview__photo-mockup\">\n                    <svg class=\"cc-daily-deal-teaser-preview__cart-icon\">\n                        <use xlink:href=\"#cart\" href=\"#cart\"/>\n                    </svg>\n                </div>\n                <div class=\"cc-daily-deal-teaser-preview__product-info\">\n                    <div class=\"cc-daily-deal-teaser-preview__product-info-container\">\n                        <p class=\"cc-daily-deal-teaser-preview__product-data\" v-if=\"configuration.category_id\">category ID: {{{ configuration.category_id }}}</p>\n                        <p class=\"cc-daily-deal-teaser-preview__product-data\" v-if=\"configuration.skus\">SKU: {{{ configuration.skus }}}</p>\n                    </div>\n                    <div class=\"cc-daily-deal-teaser-preview__product-info-container\">                    \n                        <div class=\"cc-daily-deal-teaser-preview__countdown-mockup\">\n                            <div class=\"cc-daily-deal-teaser-preview__clock\">\n                                <svg class=\"cc-daily-deal-teaser-preview__clock-icon\">\n                                    <use xlink:href=\"#clock\" href=\"#clock\"/>\n                                </svg>\n                            </div>\n                            <div>\n                                <span class=\"cc-daily-deal-teaser-preview__countdown-digits\">12</span> :\n                                <span class=\"cc-daily-deal-teaser-preview__countdown-digits\">34</span> :\n                                <span class=\"cc-daily-deal-teaser-preview__countdown-digits\">56</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"cc-daily-deal-teaser-preview__buttons-mockup\">\n                <div class=\"cc-daily-deal-teaser-preview__button-mockup-1st\"></div>\n                <div class=\"cc-daily-deal-teaser-preview__button-mockup-2nd\"></div>\n                <div class=\"cc-daily-deal-teaser-preview__button-mockup-3rd\"></div>\n            </div>\n        </div>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [String, Object, Array],\n            default: '',\n        }\n    },\n};\n\nexport default dailyDealTeaserPreview;\n","/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    title: string;\n    subtitle: string;\n}\n\n/**\n * Headline preview component.\n * This component is responsible for displaying preview of headline component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst headlinePreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-headline-preview\">\n        <h1 class=\"cc-headline-preview__headline\">{{ configuration.title }}</h1>\n        <h2 class=\"cc-headline-preview__subheadline\">{{ configuration.subtitle }}</h2>\n    </div>`,\n    props: {\n        /**\n         * Single's component configuration \n         */\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [String, Object, Array],\n            default: '',\n        },\n    },\n};\n\nexport default headlinePreview;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    items: [\n        {\n            image: string,\n            headline: string,\n            subheadline: string,\n            paragraph: string,\n            ctaLabel: string,\n            ctaTarget: string,\n            displayVariant: string\n        },\n    ];\n};\n\n/**\n * Image teaser preview component.\n * This component is responsible for displaying preview of image teaser component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst heroCarouselPreview: vuejs.ComponentOption = {\n    template: `<div data-role=\"spinner\" class=\"cc-component-placeholder__loading\" v-show=\"isLoading\">\n        <div class=\"spinner\">\n            <span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span>\n        </div>\n    </div>\n    <div class=\"cc-hero-carousel-preview\" v-show=\"!isLoading\">\n        <div v-bind:class=\"sceneClass\" v-el:scene>\n            <div class=\"cc-hero-carousel-preview__slide\" v-if=\"configuration.items.length > 1\">\n                <img v-if=\"configuration.items[configuration.items.length - 1].image\" :src=\"configuration.items[configuration.items.length - 1].image\" class=\"cc-hero-carousel-preview__image\">\n                <div class=\"cc-hero-carousel-preview__slide-placeholder-wrapper\" v-show=\"!configuration.items[configuration.items.length - 1].image\">\n                    <svg class=\"cc-hero-carousel-preview__slide-placeholder\">\n                        <use xlink:href=\"#icon_image-placeholder\"></use>\n                    </svg>\n                </div>\n            </div>\n\n            <template v-for=\"(index, item) in configuration.items\">\n                <div class=\"cc-hero-carousel-preview__slide\" v-if=\"index < 2\">\n                    <img v-if=\"configuration.items[$index].image\" :src=\"configuration.items[$index].image\" class=\"cc-hero-carousel-preview__image\">\n                    <div class=\"cc-hero-carousel-preview__slide-placeholder-wrapper\" v-show=\"!configuration.items[$index].image\">\n                        <svg class=\"cc-hero-carousel-preview__slide-placeholder\">\n                            <use xlink:href=\"#icon_image-placeholder\"></use>\n                        </svg>\n                    </div>\n                    <div class=\"cc-hero-carousel-preview__slide-content\" v-if=\"index == 0 || configuration.items.length == 1\">\n                        <div class=\"cc-hero-carousel-preview__thumbs\">\n                            <template v-for=\"(idx, slide) in configuration.items\">\n                                <img v-if=\"configuration.items[idx].image\" :src=\"configuration.items[idx].image\" class=\"cc-hero-carousel-preview__thumb\">\n                                <div class=\"cc-hero-carousel-preview__thumb-placeholder-wrapper\" v-show=\"!configuration.items[idx].image\">\n                                    <svg class=\"cc-hero-carousel-preview__thumb-placeholder\">\n                                        <use xlink:href=\"#icon_image-placeholder\"></use>\n                                    </svg>\n                                </div>\n                            </template>\n                        </div>\n                        <div class=\"cc-hero-carousel-preview__slide-content-info\">\n                            <h2 class=\"cc-hero-carousel-preview__headline\" v-if=\"configuration.items[$index].headline\">{{ configuration.items[$index].headline }}</h2>\n                            <h3 class=\"cc-hero-carousel-preview__subheadline\" v-if=\"configuration.items[$index].subheadline\">{{ configuration.items[$index].subheadline }}</h3>\n                            <p class=\"cc-hero-carousel-preview__paragraph\" v-if=\"configuration.items[$index].paragraph\">{{ configuration.items[$index].paragraph }}</p>\n                            <template v-if=\"configuration.items[$index].href\">\n                                <button type=\"button\" class=\"cc-hero-carousel-preview__button\" v-if=\"configuration.items[$index].ctaLabel\">{{ configuration.items[$index].ctaLabel }}</button>\n                            </template>\n                        </div>\n                    </div>\n                </div>\n            </template>\n        </div>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [String, Object, Array],\n            default: '',\n        },\n        isLoading: {\n            type: Boolean,\n            default: true,\n        }\n    },\n    ready(): void {\n        this.setImagesLoadListener();\n        this.hideEmptySlideContents();\n    },\n    computed: {\n        sceneClass(): string {\n            if (this.configuration.items.length > 1) {\n                return 'cc-hero-carousel-preview__scene';\n            }\n\n            return 'cc-hero-carousel-preview__scene cc-hero-carousel-preview__scene--single';\n        },\n    },\n    methods: {\n        /**\n         * Checks for status of images if they're loaded.\n         * After they're all loaded spinner is hidden and content displayed.\n         */\n        setImagesLoadListener(): void {\n            const _this: any = this;\n            const $images = $(this.$els.scene).find('img');\n            let imagesCount: number = $images.length;\n\n            if (imagesCount) {\n                $images.load(function(): void {\n                    imagesCount--;\n                    if (!imagesCount) {\n                        _this.isLoading = false;\n                        $images.each(function(): void {\n                            $(this).addClass('cc-hero-carousel-preview__image--border');\n                        } );\n                        window.setTimeout((): void => {\n                            $(_this.$els.scene)\n                                .find(\n                                    '.cc-hero-carousel-preview__slide, .cc-hero-carousel-preview__slide-placeholder-wrapper'\n                                )\n                                .css('min-height', $(_this.$els.scene).outerHeight());\n                        }, 150);\n                    }\n                }).filter(function(): boolean { \n                    return this.complete; \n                }).load();\n            } else {\n                _this.isLoading = false;\n            }\n        },\n        hideEmptySlideContents(): any {\n            $(this.$els.scene).find('.cc-hero-carousel-preview__slide-content-info').each(function(): void {\n                if (!$(this).children().length ) {\n                    $(this).hide();\n                }\n            });\n        },\n    },\n};\n\nexport default heroCarouselPreview;\n","import $ from 'jquery';\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    teaserWidth: string;\n    items: [\n        {\n            image: string,\n            headline: string,\n            subheadline: string,\n            paragraph: string,\n            ctaLabel: string,\n            href: string,\n        },\n    ];\n};\n\n/**\n * Image teaser preview component.\n * This component is responsible for displaying preview of image teaser component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst imageTeaserPreview: vuejs.ComponentOption = {\n    template: `<div data-role=\"spinner\" class=\"cc-component-placeholder__loading\" v-show=\"isLoading\">\n        <div class=\"spinner\">\n            <span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span>\n        </div>\n    </div>\n    <div class=\"cc-image-teaser-preview\" v-show=\"!isLoading\">\n        <div class=\"cc-image-teaser-preview__wrapper\">\n            <ul class=\"cc-image-teaser-preview__scene cc-image-teaser-preview__scene--{{ configuration.currentScenario.desktopLayout.id }}-in-row\" v-el:scene>\n                <template v-for=\"item in configuration.items\">\n                    <li class=\"cc-image-teaser-preview__item\">\n                        <img v-if=\"configuration.items[$index].image\" :src=\"configuration.items[$index].image\" class=\"cc-image-teaser-preview__item-image\">\n                        <div class=\"cc-image-teaser-preview__image-placeholder-wrapper\" v-show=\"!configuration.items[$index].image\">\n                            <svg class=\"cc-image-teaser-preview__image-placeholder\">\n                                <use xlink:href=\"#icon_image-placeholder\"></use>\n                            </svg>\n                        </div>\n                        <div class=\"cc-image-teaser-preview__item-content\">\n                            <h2 class=\"cc-image-teaser-preview__headline\" v-if=\"configuration.items[$index].headline\">{{ configuration.items[$index].headline }}</h2>\n                            <h3 class=\"cc-image-teaser-preview__subheadline\" v-if=\"configuration.items[$index].subheadline\">{{ configuration.items[$index].subheadline }}</h3>\n                            <p class=\"cc-image-teaser-preview__paragraph\" v-if=\"configuration.items[$index].paragraph\">{{ configuration.items[$index].paragraph }}</p>\n                            <template v-if=\"configuration.items[$index].href\">\n                                <button type=\"button\" class=\"cc-image-teaser-preview__button\" v-if=\"configuration.items[$index].ctaLabel\">{{ configuration.items[$index].ctaLabel }}</button>\n                            </template>\n                        </div>\n                    </li>\n                </template>\n            </ul>\n        </div>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [String, Object, Array],\n            default: '',\n        },\n        isLoading: {\n            type: Boolean,\n            default: true,\n        }\n    },\n    ready(): void {\n        this.setImagesLoadListener();\n        this.hideEmptySlideContents();\n    },\n    methods: {\n        /**\n         * Checks for status of images if they're loaded.\n         * After they're all loaded spinner is hidden and content displayed.\n         */\n        setImagesLoadListener(): void {\n            const _this: any = this;\n            const $images = $(this.$els.scene).find('img');\n            let imagesCount: number = $images.length;\n\n            if (imagesCount) {\n                $images.load(function(): void {\n                    imagesCount--;\n                    if (!imagesCount) {\n                        _this.isLoading = false;\n                        $images.each(function(): void {\n                            $(this).addClass('cc-image-teaser-preview__item-image--border');\n                        });\n                    }\n                }).filter(function(): boolean { \n                    return this.complete; \n                }).load();\n            } else {\n                _this.isLoading = false;\n            }\n        },\n        hideEmptySlideContents(): any {\n            $(this.$els.scene).find('.cc-image-teaser-preview__item-content').each(function(): void {\n                if (!$(this).children().length) {\n                    $(this).hide();\n                }\n            });\n        },\n    }\n};\n\nexport default imageTeaserPreview;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    teasers: any;\n};\n\n/**\n * Magento products-grid teasers preview component.\n * This component displays preview of magento-product-grid-teasers component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst magentoProductGridTeasersPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-magento-product-grid-teasers-preview\">\n        <ul class=\"cc-magento-product-grid-teasers-preview__list\">\n            <li class=\"cc-magento-product-grid-teasers-preview__list-item cc-magento-product-grid-teasers-preview__list-item--teaser\">\n                <svg class=\"cc-magento-product-grid-teasers-preview__image-placeholder\">\n                    <use xlink:href=\"#icon_image-placeholder\"></use>\n                </svg>\n            </li>\n\n            <template v-for=\"i in 7\">\n                <li class=\"cc-magento-product-grid-teasers-preview__list-item\">\n                    <div class=\"cc-magento-product-grid-teasers-preview__product-wrapper\">\n                        <svg class=\"cc-magento-product-grid-teasers-preview__product\">\n                            <use xlink:href=\"#icon_component-cc-product-teaser-item\"></use>\n                        </svg>\n                    </div>\n                </li>\n            </template>\n\n            <li class=\"cc-magento-product-grid-teasers-preview__list-item cc-magento-product-grid-teasers-preview__list-item--text\">\n                <div>\n                    <div class=\"cc-magento-product-grid-teasers-preview__teasers-count\">\n                        {{ teasersLength }}\n                    </div>\n                    ${$t('teasers')}\n                </div>\n            </li>\n        </ul>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [String, Object, Array],\n            default: '',\n        },\n    },\n    computed: {\n        teasersLength(): number {\n            return this.configuration && this.configuration.teasers ? this.configuration.teasers.length : 0;\n        },\n    },\n};\n\nexport default magentoProductGridTeasersPreview;\n","/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    blockId: string;\n    title: string;\n}\n\n/**\n * Paragraph preview component.\n * This component is responsible for displaying preview of Paragraph component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst paragraphPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-paragraph-preview\">\n        <div class=\"cc-paragraph-preview__content\">\n            <svg class=\"cc-paragraph-preview__bg\">\n                <use xlink:href=\"#icon_component-paragraph-preview\"></use>\n            </svg>\n            <h2 class=\"cc-paragraph-preview__title\">{{ configuration.title }}</h2>\n        </div>\n    </div>`,\n    props: {\n        /**\n         * Single's component configuration \n         */\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [String, Object, Array],\n            default: '',\n        },\n    }\n};\n\nexport default paragraphPreview;\n","/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    category_id: string;\n    sort_by: string;\n    limit: number;\n};\n\n/**\n * Product carousel preview component.\n * This component is responsible for displaying preview of product carousel component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst productCarouselPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-product-carousel-preview\">\n        <svg class=\"cc-product-carousel-preview__arrow cc-product-carousel-preview__arrow--left\">\n            <use xlink:href=\"#icon_dashboard-arrow-left\"></use>\n        </svg>\n\n        <ul class=\"cc-product-carousel-preview__list\">\n            <template v-for=\"item in 4\">\n                <li class=\"cc-product-carousel-preview__list-item\">\n                    <div class=\"cc-product-carousel-preview__product-wrapper\">\n                        <svg class=\"cc-product-carousel-preview__product\">\n                            <use xlink:href=\"#icon_component-cc-product-teaser-item\"></use>\n                        </svg>\n                    </div>\n                </li>\n            </template>\n        </ul>\n\n        <svg class=\"cc-product-carousel-preview__arrow cc-product-carousel-preview__arrow--right\">\n            <use xlink:href=\"#icon_dashboard-arrow-right\"></use>\n        </svg>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [String, Object, Array],\n            default: '',\n        },\n        /**\n         * Assets (icons) source path.\n         */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n    },\n};\n\nexport default productCarouselPreview;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\n\n/**\n * Single columns configuration interface.\n */\ninterface IOptionsPerRow {\n    mobile: number;  // 1-3\n    table: number;   // 2-4\n    desktop: number; // 3-6\n};\n\n/**\n * Single step data interface.\n */\ninterface IStepInformation {\n    id: string;\n    title: string;\n    description: string;\n    options: object;\n};\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    optionsPerRow: IOptionsPerRow;\n    steps: IStepInformation[];\n};\n\n\n/**\n * Product Finder preview component.\n * This component is responsible for displaying preview of Product Finder component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst productFinderPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-product-finder-preview\">\n        <div class=\"cc-product-finder-preview__scene\" :class=\"[ isConfiguratorPreview ? 'cc-product-finder-preview__scene--configurator' : '' ]\" v-if=\"configuration.steps.length\">\n            <h2 class=\"cc-product-finder-preview__scene-title\" :data-placeholder=\"'No title' | translate\">{{{ configuration.steps[stepIndex].title }}}</h2>\n\n            <div class=\"cc-product-finder-preview__scene-description\" :data-placeholder=\"'No description' | translate\">{{{ configuration.steps[stepIndex].description }}}</div>\n\n            <ul class=\"cc-product-finder-preview__scene-options\">\n                <template v-for=\"option in configuration.steps[stepIndex].options\">\n                    <li class=\"cc-product-finder-preview__scene-option\">\n                        <figure class=\"cc-product-finder-preview__scene-option-figure\">\n                            <svg class=\"cc-product-finder-preview__scene-option-placeholder\" v-show=\"!option.image\">\n                                <use xlink:href=\"#icon_image-placeholder\"></use>\n                            </svg>\n                            <img class=\"cc-product-finder-preview__scene-option-image\" src=\"{{ option.image | decode }}\" alt=\"\" v-show=\"option.image\" />\n                        </figure>\n                        <span class=\"cc-product-finder-preview__scene-option-label\" :data-placeholder=\"'No label' | translate\">{{{ option.label }}}</span>\n                    </li>\n                </template>\n            </ul>\n        </div>\n\n        <div class=\"cc-product-finder-preview__scene cc-product-finder-preview__scene--faded\" v-if=\"configuration.steps.length > 1 && !isConfiguratorPreview\"></div>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [String, Object, Array],\n            default: '',\n        },\n        /* Obtain image endpoint to place permanent url for uploaded images */\n        imageEndpoint: {\n            type: String,\n            default: '',\n        },\n        /* Obtain index of step that shall be displayed in preview */\n        stepIndex: {\n            type: Number,\n            default: 0,\n        },\n        /* Tells if preview is used in configurator component or in layout builder */\n        isConfiguratorPreview: {\n            type: Boolean,\n            default: false,\n        },\n    },\n    filters: {\n        /** Decodes delivered image format to Base64, additionally removing escaped double-quotes\n         * @param imageUrl {string} - image url in Magento-like format with escaped double-quotes, f.e. {{media url=\\\"wysiwyg/image.jpg\\\"}}\n         * @return {string} - permanent image url that can be viewed in Magento's admin panel OR empty if something went wrong\n         */\n        decode(imageUrl: string): string {\n            const decodedImage: string = window.btoa(imageUrl.replace(/\\\\\\//g, \"/\"));\n\n            if (decodedImage && decodedImage.length && this.imageEndpoint.length) {\n                return this.imageEndpoint.replace('{/encoded_image}', decodedImage);\n            }\n\n            return '';\n        },\n        /** Translates given string\n         * @param txt {string} - original, english string to be translated\n         * @return {string} - translated string\n         */\n        translate(txt: string): string {\n            return $.mage.__(txt);\n        },\n    },\n};\n\nexport default productFinderPreview;\n","import $ from 'jquery';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    category_id: string;\n    order_by: string;\n    rows_desktop: number;\n    rows_tablet: number;\n    rows_mobile: number;\n    hero: any;\n};\n\n/**\n * Product carousel preview component.\n * This component is responsible for displaying preview of product carousel component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst productGridPreview: vuejs.ComponentOption = {\n    template: `<div data-role=\"spinner\" class=\"cc-component-placeholder__loading\" v-show=\"isLoading\">\n        <div class=\"spinner\">\n            <span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span>\n        </div>\n    </div>\n    <div class=\"cc-products-grid-preview\" v-show=\"!isLoading\" v-el:scene>\n        <div class=\"cc-products-grid-preview__hero\" v-if=\"configuration.hero.position == 'left'\">\n            <img v-if=\"configuration.hero.image\" :src=\"configuration.hero.image\" class=\"cc-products-grid-preview__hero-image\">\n            <div class=\"cc-products-grid-preview__hero-placeholder-wrapper\" v-show=\"!configuration.hero.image\">\n                <svg class=\"cc-products-grid-preview__hero-placeholder\">\n                    <use xlink:href=\"#icon_image-placeholder\"></use>\n                </svg>\n            </div>\n            <div class=\"cc-products-grid-preview__hero-content\">\n                <h2 class=\"cc-products-grid-preview__headline\" v-if=\"configuration.hero.headline\">{{ configuration.hero.headline }}</h2>\n                <h3 class=\"cc-products-grid-preview__subheadline\" v-if=\"configuration.hero.subheadline\">{{ configuration.hero.subheadline }}</h3>\n                <p class=\"cc-products-grid-preview__paragraph\" v-if=\"configuration.hero.paragraph\">{{ configuration.hero.paragraph }}</p>\n                <template v-if=\"configuration.hero.href\">\n                    <button type=\"button\" class=\"cc-products-grid-preview__button\" v-if=\"configuration.hero.button.label\">{{ configuration.hero.button.label }}</button>\n                </template>\n            </div>\n        </div>\n\n        <ul v-bind:class=\"itemsGridClass\">\n            <template v-for=\"item in getItemsCount()\">\n                <li class=\"cc-products-grid-preview__list-item\">\n                    <div class=\"cc-products-grid-preview__product-wrapper\">\n                        <svg class=\"cc-products-grid-preview__product\">\n                            <use xlink:href=\"#icon_component-cc-product-teaser-item\"></use>\n                        </svg>\n                    </div>\n                </li>\n            </template>\n        </ul>\n\n        <div class=\"cc-products-grid-preview__hero\" v-if=\"configuration.hero.position == 'right'\">\n            <img v-if=\"configuration.hero.image\" :src=\"configuration.hero.image\" class=\"cc-products-grid-preview__hero-image\">\n            <div class=\"cc-products-grid-preview__hero-placeholder-wrapper\" v-show=\"!configuration.hero.image\">\n                <svg class=\"cc-products-grid-preview__hero-placeholder\">\n                    <use xlink:href=\"#icon_image-placeholder\"></use>\n                </svg>\n            </div>\n            <div class=\"cc-products-grid-preview__hero-content\">\n                <h2 class=\"cc-products-grid-preview__headline\" v-if=\"configuration.hero.headline\">{{ configuration.hero.headline }}</h2>\n                <h3 class=\"cc-products-grid-preview__subheadline\" v-if=\"configuration.hero.subheadline\">{{ configuration.hero.subheadline }}</h3>\n                <p class=\"cc-products-grid-preview__paragraph\" v-if=\"configuration.hero.paragraph\">{{ configuration.hero.paragraph }}</p>\n                <template v-if=\"configuration.hero.href\">\n                    <button type=\"button\" class=\"cc-products-grid-preview__button\" v-if=\"configuration.hero.button.label\">{{ configuration.hero.button.label }}</button>\n                </template>\n            </div>\n        </div>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [String, Object, Array],\n            default: '',\n        },\n        isLoading: {\n            type: Boolean,\n            default: true,\n        }\n    },\n    computed: {\n        itemsGridClass(): string {\n            if (this.configuration.hero.position) {\n                return `cc-products-grid-preview__list cc-products-grid-preview__list--${ this.configuration.hero.position }`;\n            }\n\n            return 'cc-products-grid-preview__list';\n        },\n    },\n    ready(): void {\n        this.setImagesLoadListener();\n        this.hideEmptySlideContents();\n    },\n    methods: {\n        /**\n         * Checks for status of images if they're loaded.\n         * After they're all loaded spinner is hidden and content displayed.\n         */\n        setImagesLoadListener(): void {\n            const _this: any = this;\n            const $images = $(this.$els.scene).find('img');\n            let imagesCount: number = $images.length;\n\n            if (imagesCount) {\n                $images.load(function(): void {\n                    imagesCount--;\n                    if (!imagesCount) {\n                        _this.isLoading = false;\n                    }\n                }).filter(function(): boolean { \n                    return this.complete; \n                }).load();\n            } else {\n                _this.isLoading = false;\n            }\n        },\n        getItemsCount(): number {\n            return this.configuration.hero.position ? 6 : 10;\n        },\n        hideEmptySlideContents(): any {\n            $(this.$els.scene).find('.cc-products-grid-preview__hero-content').each(function(): void {\n                if (!$(this).children().length) {\n                    $(this).hide();\n                }\n            });\n        },\n    },\n};\n\nexport default productGridPreview;\n","import $ from 'jquery';\n\n/**\n * Separator preview component.\n * This component is responsible for displaying preview of separator component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst separatorPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-separator-preview\">\n        <hr class=\"cc-separator-preview__separator\">\n    </div>`,\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [String, Object, Array],\n            default: '',\n        },\n    },\n};\n\nexport default separatorPreview;\n","/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    identifier: string;\n    title: string;\n    resetstyles: boolean;\n}\n\n/**\n * CMS block preview component.\n * This component is responsible for displaying preview of CMS block component in Layout Builder (admin panel)\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst staticBlockPreview: vuejs.ComponentOption = {\n    template: `<div class=\"cc-static-block-preview\">\n        <div class=\"cc-static-block-preview__content\">\n            <svg class=\"cc-static-block-preview__bg\">\n                <use xlink:href=\"#icon_component-cms-block-preview\"></use>\n            </svg>\n            <h2 class=\"cc-static-block-preview__title\">{{ configuration.title }}</h2>\n        </div>\n    </div>`,\n    props: {\n        /**\n         * Single's component configuration \n         */\n        configuration: {\n            type: Object,\n        },\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [String, Object, Array],\n            default: '',\n        },\n    },\n};\n\nexport default staticBlockPreview;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\nimport confirm from 'Magento_Ui/js/modal/confirm';\nimport uiRegistry from 'uiRegistry';\n\nimport actionButton from '../../utils/action-button/action-button';\nimport componentActions from '../../utils/component-actions/component-actions';\nimport componentAdder from '../../utils/component-adder/component-adder';\nimport componentDisplayController from '../../utils/component-display-controller/component-display-controller';\nimport componentPlaceholder from '../../utils/component-placeholder/component-placeholder';\n\nimport brandCarouselPreview from '../brand-carousel/preview/brand-carousel';\nimport buttonPreview from '../button/preview/button';\nimport categoryLinksPreview from '../category-links/preview/category-links';\nimport cmsPagesTeaserPreview from '../cms-pages-teaser/preview/cms-pages-teaser';\nimport customHtmlPreview from '../custom-html/preview/custom-html';\nimport dailyDealTeaserPreview from '../daily-deal-teaser/preview/daily-deal-teaser';\nimport headlinePreview from '../headline/preview/headline';\nimport heroCarouselPreview from '../hero-carousel/preview/hero-carousel';\nimport imageTeaserPreview from '../image-teaser/preview/image-teaser';\nimport magentoProductGridTeasersPreview from '../magento-product-grid-teasers/preview/magento-product-grid-teasers';\nimport paragraphPreview from '../paragraph/preview/paragraph';\nimport productCarouselPreview from '../product-carousel/preview/product-carousel';\nimport productFinderPreview from '../product-finder/preview/product-finder';\nimport productGridPreview from '../products-grid/preview/products-grid';\nimport separatorPreview from '../separator/preview/separator';\nimport staticBlockPreview from '../static-block/preview/static-block';\n\n/**\n * Single component information interface.\n */\ninterface IComponentInformation {\n    name: string;\n    id: string;\n    type: string;\n    section: string;\n    data?: any;\n}\n\n/**\n * Layout builder component.\n * This component is responsible for displaying and handling user interactions of\n * entire Content Constructor\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst layoutBuilder: vuejs.ComponentOption = {\n    template: `<div class=\"cc-layout-builder | {{ class }}\">\n        <div class=\"cc-layout-builder__filters\" v-if=\"filters\">\n            <template v-for=\"filter in filters\">\n                <div class=\"cc-layout-builder__filter\">\n                    <div class=\"cc-layout-builder__filter-content\">\n                        <svg class=\"cc-layout-builder__filter-icon\">\n                            <use xlink:href=\"{{ filter.icon }}\"></use>\n                        </svg>\n                        <span class=\"cc-layout-builder__filter-title\">\n                            {{ getTranslatedText( filter.title ) }}:\n                        </span>\n                        <template v-for=\"option in filter.options\">\n                            <div class=\"cc-layout-builder__filter-control\">\n                                <label :class=\"['cc-input__checkbox-label', {'cc-input__checkbox-label--checked': option.value === true}]\">\n                                    <input type=\"checkbox\" v-model=\"option.value\" class=\"cc-input__checkbox\" @change=\"saveFiltersState()\">\n                                    {{ getTranslatedText( option.label ) }}\n                                </label>\n                            </div>\n                        </template>\n                    </div>\n                </div>\n            </template>\n        </div>\n\n        <div class=\"cc-layout-builder__component cc-layout-builder__component--static\">\n            <div class=\"cc-layout-builder__component-wrapper\">\n                <div class=\"cc-component-placeholder__component cc-component-placeholder__component--decorated cc-component-placeholder__component--header\">\n                    <svg class=\"cc-component-placeholder__component-icon\">\n                        <use xlink:href=\"#icon_component-cc-header\"></use>\n                    </svg>\n                </div>\n            </div>\n\n            <component-adder class=\"cc-component-adder cc-component-adder--last\">\n                <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_important cc-action-button--type_icon-only | cc-component-adder__button\" @click=\"createNewComponent( 0 )\">\n                    <svg class=\"cc-action-button__icon cc-action-button__icon--size_100 | cc-component-adder__button-icon\">\n                        <use xlink:href=\"#icon_plus\"></use>\n                    </svg>\n                </button>\n            </component-adder>\n        </div>\n\n        <template v-for=\"component in components\">\n            <div v-bind:class=\"['cc-layout-builder__component', {'cc-layout-builder__component--special': getIsSpecialComponent(component.type), 'cc-layout-builder__component--invisible': getIsComponentHiddenFE(component.data), 'cc-layout-builder__component--filtered-out': !getIsComponentVisibleDashboard(component.data)}]\" id=\"{{ component.id }}\">\n                <component-adder class=\"cc-component-adder cc-component-adder--first\">\n                    <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_important cc-action-button--type_icon-only | cc-component-adder__button\" @click=\"createNewComponent( $index )\">\n                        <svg class=\"cc-action-button__icon cc-action-button__icon--size_100 | cc-component-adder__button-icon\">\n                            <use xlink:href=\"#icon_plus\"></use>\n                        </svg>\n                    </button>\n                </component-adder>\n\n                <div class=\"cc-layout-builder__component-actions\">\n                    <component-actions>\n                        <template slot=\"cc-component-actions__buttons\">\n                            <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_default cc-action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--up\" @click=\"moveComponentUp( $index )\" :class=\"[ isFirstComponent( $index ) ? 'cc-action-button--look_disabled' : '' ]\" :disabled=\"isFirstComponent( $index )\">\n                                <svg class=\"cc-action-button__icon cc-action-button__icon--size_100\">\n                                    <use xlink:href=\"#icon_arrow-up\"></use>\n                                </svg>\n                            </button>\n                            <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_default cc-action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--down\" @click=\"moveComponentDown( $index )\" :class=\"[ isLastComponent( $index ) ? 'cc-action-button--look_disabled' : '' ]\" :disabled=\"isLastComponent( $index )\">\n                                <svg class=\"cc-action-button__icon cc-action-button__icon--size_100\">\n                                    <use xlink:href=\"#icon_arrow-down\"></use>\n                                </svg>\n                            </button>\n                            <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_default cc-action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--settings\" :class=\"[ isPossibleToEdit( component.type ) ? '' : 'cc-action-button--look_disabled' ]\" :disabled=\"!isPossibleToEdit( component.type )\" @click=\"editComponentSettings( $index )\" title=\"{{ getTranslatedText('Edit component') }}\">\n                                <svg class=\"cc-action-button__icon\">\n                                    <use xlink:href=\"#icon_edit\"></use>\n                                </svg>\n                            </button>\n                            <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_default cc-action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--duplicate\" :class=\"[ isPossibleToDuplicate( component.type ) ? '' : 'cc-action-button--look_disabled' ]\" :disabled=\"!isPossibleToDuplicate( component.type )\" @click=\"duplicateComponent( $index )\" title=\"{{ getTranslatedText('Duplicate component') }}\">\n                                <svg class=\"cc-action-button__icon\">\n                                    <use xlink:href=\"#icon_duplicate\"></use>\n                                </svg>\n                            </button>\n                            <div class=\"cc-component-display-controller\" v-if=\"isPossibleToControlDisplay( component.type )\">\n                                <svg class=\"cc-component-display-controller__icon\">\n                                    <use xlink:href=\"#icon_eye\"></use>\n                                </svg>\n                                <div class=\"cc-component-display-controller__control\">\n                                    <label :class=\"[ component.data.componentVisibility.mobile ? 'cc-input__checkbox-label cc-input__checkbox-label--checked' : 'cc-input__checkbox-label' ]\">\n                                        <input type=\"checkbox\" v-model=\"component.data.componentVisibility.mobile\" class=\"cc-input__checkbox\" @change=\"updateLayout()\">\n                                        {{ getTranslatedText('Mobile') }}\n                                    </label>\n                                </div>\n                                <div class=\"cc-component-display-controller__control\">\n                                    <label :class=\"[ component.data.componentVisibility.desktop ? 'cc-input__checkbox-label cc-input__checkbox-label--checked' : 'cc-input__checkbox-label' ]\">\n                                        <input type=\"checkbox\" v-model=\"component.data.componentVisibility.desktop\" class=\"cc-input__checkbox\" @change=\"updateLayout()\">\n                                        {{ getTranslatedText('Desktop') }}\n                                    </label>\n                                </div>\n                            </div>\n                            <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_default cc-action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--delete\" :class=\"[ isPossibleToDelete( component.type ) ? '' : 'cc-action-button--look_disabled' ]\" :disabled=\"!isPossibleToDelete( component.type )\" @click=\"deleteComponent( $index )\">\n                                <svg class=\"cc-action-button__icon\">\n                                    <use xlink:href=\"#icon_trash-can\"></use>\n                                </svg>\n                            </button>\n                        </template>\n                    </component-actions>\n                </div>\n                <div class=\"cc-layout-builder__component-wrapper\">\n                    <component-placeholder>\n                        <h3 class=\"cc-component-placeholder__headline\" v-text=\"transformComponentTypeToText( component.type )\"></h3>\n                        <div class=\"cc-component-placeholder__component\">\n                            \n                            <component :is=\"component.type + '-preview'\" :configuration=\"component.data\" :index=\"$index\" :assets-src=\"assetsSrc\" :image-endpoint=\"imageEndpoint\"></component>\n\n                        </div>\n                    </component-placeholder>\n                </div>\n\n                <component-adder class=\"cc-component-adder cc-component-adder--last\">\n                    <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_important cc-action-button--type_icon-only | cc-component-adder__button\" @click=\"createNewComponent( $index + 1 )\">\n                        <svg class=\"cc-action-button__icon cc-action-button__icon--size_100 | cc-component-adder__button-icon\">\n                            <use xlink:href=\"#icon_plus\"></use>\n                        </svg>\n                    </button>\n                </component-adder>\n            </div>\n        </template>\n\n        <div class=\"cc-layout-builder__component cc-layout-builder__component--static\">\n            <component-adder class=\"cc-component-adder cc-component-adder--first\">\n                <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_important cc-action-button--type_icon-only | cc-component-adder__button\" @click=\"createNewComponent( components.length + 1 )\">\n                    <svg class=\"cc-action-button__icon cc-action-button__icon--size_100 | cc-component-adder__button-icon\">\n                        <use xlink:href=\"#icon_plus\"></use>\n                    </svg>\n                </button>\n            </component-adder>\n\n            <div class=\"cc-layout-builder__component-wrapper\">\n                <div class=\"cc-component-placeholder__component cc-component-placeholder__component--decorated cc-component-placeholder__component--footer\">\n                    <svg class=\"cc-component-placeholder__component-icon\">\n                        <use xlink:href=\"#icon_component-cc-footer\"></use>\n                    </svg>\n                </div>\n            </div>\n        </div>\n    </div>`,\n    /**\n     * Get dependencies\n     */\n    components: {\n        'action-button': actionButton,\n        'component-adder': componentAdder,\n        'component-actions': componentActions,\n        'component-display-controller': componentDisplayController,\n        'component-placeholder': componentPlaceholder,\n        'brand-carousel-preview': brandCarouselPreview,\n        'button-preview': buttonPreview,\n        'category-links-preview': categoryLinksPreview,\n        'cms-teaser-preview': cmsPagesTeaserPreview,\n        'custom-html-preview': customHtmlPreview,\n        'daily-deal-teaser-preview': dailyDealTeaserPreview,\n        'headline-preview': headlinePreview,\n        'hero-carousel-preview': heroCarouselPreview,\n        'image-teaser-preview': imageTeaserPreview,\n        'magento-product-grid-teasers-preview': magentoProductGridTeasersPreview,\n        'paragraph-preview': paragraphPreview,\n        'product-carousel-preview': productCarouselPreview,\n        'product-finder-preview': productFinderPreview,\n        'product-grid-preview': productGridPreview,\n        'separator-preview': separatorPreview,\n        'static-cms-block-preview': staticBlockPreview,\n    },\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [String, Object, Array],\n            default: '',\n        },\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n        ccConfig: {\n            type: Object,\n            default(): any {\n                return {};\n            },\n        },\n        /* Obtain image endpoint to place permanent url for uploaded images */\n        imageEndpoint: {\n            type: String,\n            default: '',\n        },\n        /**\n         * Initial component configuration encoded as JSON string.\n         */\n        componentsConfiguration: {\n            type: String,\n            default: '',\n        },\n        /**\n         * Callback invoked when edit component button is clicked.\n         * This function should take IComponentInformation and return changed version of it.\n         * If callback returns falsy value then component isn't changed.\n         */\n        editComponent: {\n            type: Function,\n            default: (componentInfo: IComponentInformation): IComponentInformation => componentInfo,\n        },\n        /**\n         * Callback invoked when edit component button is clicked.\n         * This function should return IComponentInformation.\n         * If callback returns falsy value then component isn't added.\n         */\n        addComponent: {\n            type: Function,\n            default: (): IComponentInformation => undefined,\n        },\n        pageType: {\n            type: String,\n            default: 'cms_page_form.cms_page_form',\n        },\n    },\n    data(): any {\n        return {\n            components: [],\n            filters: {},\n        };\n    },\n    computed: {\n        ccSections: function(): object {\n            const data: object = this.ccConfig.sections[this.pageType];\n            return Object.keys(data).map(key => (<any>data)[key]);\n        },\n        specialComponents: function(): object {\n            const data: object = this.ccConfig.special_components;\n            return Object.keys(data).map(key => (<any>data)[key]);\n        },\n    },\n    ready(): void {\n        this.components = this.componentsConfiguration ? JSON.parse(this.componentsConfiguration) : [];\n        this.filters = this.getFilters();\n        this.sortComponentsBySections();\n        this.setupInitialDisplayProps();\n        this.updateLayout();\n    },\n    methods: {\n        /**\n         * Returns components information currently stored within layout builder.\n         * @return {IComponentInformation[]} Components information array.\n         */\n        getComponentInformation(): IComponentInformation[] {\n            return JSON.parse(JSON.stringify(this.components));\n        },\n        /**\n         * Returns layout bulder's filters. Value if taken from etc/view.xml of theme\n         * @return {object} Filters object.\n         */\n        getFilters(): object {\n            let filters: object;\n\n            if (typeof(Storage) !== void(0) && window.localStorage.getItem('ccFilters')) {\n                filters = JSON.parse(window.localStorage.getItem('ccFilters'));\n\n                // If user has saved old version of filters we have to remove them from his localStorage\n                if (filters.hasOwnProperty('componentVisibility')) {\n                    window.localStorage.removeItem('ccFilters');\n                    filters = this.ccConfig.filters;\n                }\n            } else {\n                filters = this.ccConfig.filters;\n            }\n\n            return filters;\n        },\n        /**\n         * Uses localStorage to save current filters state within layout builder.\n         */\n        saveFiltersState(): any {\n            if(typeof(Storage) !== void(0) && this.filters) {\n                window.localStorage.setItem(\n                    'ccFilters',\n                    JSON.stringify(this.filters)\n                );\n            }\n        },\n        /**\n         * Updates builders' layout\n         */\n        updateLayout(): void {\n            this.$dispatch('layout-builder__update');\n        },\n        /**\n         * Sets provided component information on current index in components array.\n         * If component exists on given index then this compoennt will be inserted before it.\n         * @param {number}                index         Component index in components array.\n         * @param {IComponentInformation} componentInfo Component information.\n         */\n        addComponentInformation(index: number, componentInfo: IComponentInformation): void {\n            if (componentInfo) {\n                if (!componentInfo.data.hasOwnProperty('componentVisibility') && !this.getIsSpecialComponent(componentInfo.type)) {\n                    componentInfo.data.componentVisibility = {\n                        mobile: true,\n                        desktop: true,\n                    };\n                }\n                this.components.splice(index, 0, componentInfo);\n                this.setComponentsPlacementInfo();\n                this.updateLayout();\n            }\n        },\n        /**\n         * Sets provided component information on current index in components array.\n         * If component exists on given index then it will be overwritten.\n         * @param {number}                index         Component index in components array.\n         * @param {IComponentInformation} componentInfo Component information.\n         */\n        setComponentInformation(index: number, componentInfo: IComponentInformation): void {\n            if (componentInfo) {\n                this.components.$set(index, componentInfo);\n                this.setComponentsPlacementInfo();\n                this.updateLayout();\n            }\n        },\n        /**\n         * Creates new component and adds it to a specified index.\n         * This function calls callback specified by \"add-component\" property that\n         * should return IComponentInformation.\n         * If callback returns falsy value then component isn't added.\n         * @param {number} index New component's index in components array.\n         */\n        createNewComponent(index: number): void {\n            /**\n             * To allow both sync and async set of new component data we call\n             * provided handler with callback function.\n             * If handler doesn't return component information then it can still\n             * set it using given callback.\n             */\n            const componentInfo: IComponentInformation = this.addComponent(\n                (asyncComponentInfo: IComponentInformation): void => {\n                    this.addComponentInformation(index, asyncComponentInfo);\n                },\n            );\n            this.addComponentInformation(index, componentInfo);\n        },\n        /**\n         * Initializes edit mode of component.\n         * This function invokes callback given by \"edit-component\" callback that\n         * should take current IComponentInformation as param and return changed version of it.\n         * If callback returns falsy value then component isn't changed.\n         * @param {string} index: Component's index in array.\n         */\n        editComponentSettings(index: number): void {\n            // Create a static, non-reactive copy of component data.\n            let componentInfo: IComponentInformation = JSON.parse(\n                JSON.stringify(this.components[index]),\n            );\n            /**\n             * To allow both sync and async set of new component data we call\n             * provided handler with current component data and callback function.\n             * If handler doesn't return component information then it can still\n             * set it using given callback.\n             */\n            componentInfo = this.editComponent(\n                componentInfo,\n                (asyncComponentInfo: IComponentInformation): void => {\n                    this.setComponentInformation(index, asyncComponentInfo);\n                },\n            );\n            this.setComponentInformation(index, componentInfo);\n        },\n        /**\n         * Moves component under given index up by swaping it with previous element.\n         * @param {number} index Component's index in array.\n         */\n        moveComponentUp(index: number): void {\n            if (index > 0) {\n                let previousComponent: IComponentInformation = this.components[index - 1];\n                const $thisComponent: any = $( `#${ this.components[index].id }` );\n                const $prevComponent: any = $( `#${ this.components[index - 1].id }` );\n\n                $thisComponent.addClass('cc-layout-builder__component--animating').css('transform', `translateY(${ -Math.abs($prevComponent.outerHeight(true)) }px)`);\n                $prevComponent.addClass('cc-layout-builder__component--animating').css('transform', `translateY(${ $thisComponent.outerHeight(true) }px)`);\n\n                setTimeout((): void => {\n                    this.components.$set(index - 1, this.components[index]);\n                    this.components.$set(index, previousComponent);\n                    this.setComponentsPlacementInfo();\n                    this.updateLayout();\n                    $thisComponent.removeClass('cc-layout-builder__component--animating').css('transform', '');\n                    $prevComponent.removeClass('cc-layout-builder__component--animating').css('transform', '');\n                }, 400);\n            }\n        },\n        /**\n         * Moves component under given index down by swaping it with next element.\n         * @param {number} index Component's index in array.\n         */\n        moveComponentDown(index: number): void {\n            if (index < this.components.length - 1) {\n                let previousComponent: IComponentInformation = this.components[index + 1];\n                const $thisComponent: any = $(`#${ this.components[index].id }`);\n                const $nextComponent: any = $(`#${ this.components[index + 1].id }`);\n\n                $thisComponent.addClass('cc-layout-builder__component--animating').css('transform', `translateY(${ $nextComponent.outerHeight(true) }px)`);\n                $nextComponent.addClass('cc-layout-builder__component--animating').css('transform', `translateY(${ -Math.abs($thisComponent.outerHeight(true)) }px)`);\n\n                setTimeout((): void => {\n                    this.components.$set(index + 1, this.components[index]);\n                    this.components.$set(index, previousComponent);\n                    this.setComponentsPlacementInfo();\n                    this.updateLayout();\n                    $thisComponent.removeClass('cc-layout-builder__component--animating').css('transform', '');\n                    $nextComponent.removeClass('cc-layout-builder__component--animating').css('transform', '');\n                }, 400);\n            }\n        },\n        /**\n         * Duplicates component under given index and place it below the original one.\n         * @param {number} index Original component's index in array.\n         */\n        duplicateComponent(index: number): void {\n            let duplicate: IComponentInformation = JSON.parse(\n                JSON.stringify(this.components[index]),\n            );\n            duplicate.id = `${duplicate.id}_duplicate`;\n            this.addComponentInformation(index + 1, duplicate);\n\n            this.$nextTick((): void => {\n                const $origin: JQuery = $(`#${this.components[index].id }`);\n                const $duplicate: JQuery = $(`#${duplicate.id}`);\n\n                $duplicate.addClass('cc-layout-builder__component--duplicate cc-layout-builder__component--show-up');\n\n                setTimeout((): void => {\n                    $duplicate.removeClass('cc-layout-builder__component--show-up');\n\n                    $('html, body').animate({\n                        scrollTop: $origin.offset().top + $origin.outerHeight(true) - 150,\n                    }, 350, 'swing');\n                }, 10);\n\n                setTimeout((): void => {\n                    $duplicate.removeClass('cc-layout-builder__component--duplicate');\n                }, 800);\n            });\n        },\n        /**\n         * Goes through all components and assigns section.\n         * F.e. CC on category has 3 sections (top, grid [magento, not editable], and bottom)\n         * In this example this methods sets TOP for all components that are above special component dedicated for category page, GRID for special component and BOTTOM for all components under.\n         */\n        setComponentsPlacementInfo(): any {\n            if (this.ccSections.length > 1) {\n                let sectionIndex: number = 0;\n\n                for (let i: number = 0; i < this.components.length; i++) {\n                    if (this.specialComponents.indexOf(this.components[i].type) !== -1) {\n                        sectionIndex++;\n                        this.components[i].section = this.ccSections[sectionIndex];\n                        sectionIndex++;\n                    } else {\n                        this.components[i].section = this.ccSections[sectionIndex];\n                    }\n                }\n            }\n        },\n        /**\n         * Sorts components by their sections. \n         * Order is defined by this.ccSections\n         */\n        sortComponentsBySections(): void {\n            if (this.components.length && this.ccSections.length > 1) {\n                this.components.sort((a: any, b: any): any => {\n                    return this.ccSections.indexOf(a.section) - this.ccSections.indexOf(b.section);\n                });\n            }\n        },\n        /**\n         * Backwards compatibility enhancement \n         * When components doesn't have {componentVisibility} object set - add defaults once\n         * Special Components will not be modified\n         */\n        setupInitialDisplayProps(): void {\n            for (let i: number = 0; i < this.components.length; i++) {\n                const c: any = this.components[i];\n\n                if (!c.data.hasOwnProperty('componentVisibility') && !this.getIsSpecialComponent(c.type)) {\n                    let componentInfo: any = $.extend(true, {}, c, {\n                        data: {\n                            componentVisibility: {\n                                mobile: true,\n                                desktop: true,\n                            }\n                        }\n                    });\n\n                    this.setComponentInformation(i, componentInfo);\n                }\n            }\n        },\n        /**\n         * Tells if component with given index is the first component.\n         * @param  {number}  index Index of the component.\n         * @return {boolean}       If component is first in array.\n         */\n        isFirstComponent(index: number): boolean {\n            return index === 0;\n        },\n        /**\n         * Tells if component with given index is the last component.\n         * @param  {number}  index Index of the component.\n         * @return {boolean}       If component is last in array.\n         */\n        isLastComponent(index: number): boolean {\n            return index === this.components.length - 1;\n        },\n\n        transformComponentTypeToText(componentType: string): string {\n            return componentType.replace('-', ' ');\n        },\n\n        /**\n         * Checks if component is integrated and dependant of Magento.\n         * In this case some operations like duplicate/remove are not allowed\n         * @param  {string}  componentType type of component.\n         * @return {boolean}\n         */\n        getIsSpecialComponent(componentType: string): boolean {\n            return this.specialComponents.indexOf(componentType) !== -1;\n        },\n\n        /**\n         * Checks if component can be edited.\n         * Components that doesn't provide any configurators cannot be edited.\n         * @param  {string}  componentType type of component.\n         * @return {boolean}\n         */\n        isPossibleToEdit(componentType: string): boolean {\n            return componentType !== 'brand-carousel' && componentType !== 'separator';\n        },\n\n        /**\n         * Checks if it's possible to delete component.\n         * For now we only disallow removal of special components so I just call getIsSpecialComponent\n         * In the future there might be a need to iterate it, this is why it's separate method\n         * @param  {string}  componentType type of component.\n         * @return {boolean}\n         */\n        isPossibleToDelete(componentType: string): boolean {\n            return !this.getIsSpecialComponent(componentType);\n        },\n\n        /**\n         * Checks if it's possible to duplicate component.\n         * @param  {string}  componentType type of component.\n         * @return {boolean}\n         */\n        isPossibleToDuplicate(componentType: string): boolean {\n            return !this.getIsSpecialComponent(componentType) && componentType !== 'paragraph';\n        },\n\n        /**\n         * FE mobile/desktop visibility cannot be controlled for Built-in components into magento core functionality\n         * @param  {string}  componentType type of component.\n         * @return {boolean}\n         */\n        isPossibleToControlDisplay(componentType: string): boolean {\n            return !this.getIsSpecialComponent(componentType) && componentType !== 'custom-html';\n        },\n\n        /**\n         * Tells to builder if component is set to be hidden on both: mobile & desktop\n         * It's needed to grey-out this component on the dashboard\n         * @param {Object} Component's data information.\n         * @return {boolean}\n         */\n        getIsComponentHiddenFE(componentData: any): boolean {\n            if (componentData.hasOwnProperty('componentVisibility')) {\n                return (!componentData.componentVisibility.mobile || componentData.componentVisibility.mobile === '') && (!componentData.componentVisibility.desktop || componentData.componentVisibility.desktop === '');\n            }\n\n            return false;\n        },\n\n        /**\n         * Tells if component is filtered-out or not in dashboard.\n         * It's needed to show it or hide it based on current filter setup\n         * @param {Object} Component's data information.\n         * @return {boolean}\n         */\n        getIsComponentVisibleDashboard(componentData: any): boolean {\n            if (componentData.hasOwnProperty('componentVisibility') && this.filters) {\n                let visibleMobile: boolean = (componentData.componentVisibility.mobile !== '' && componentData.componentVisibility.mobile !== false);\n                let visibleDesktop: boolean = (componentData.componentVisibility.desktop !== '' && componentData.componentVisibility.desktop !== false);\n\n                if (this.filters.component_visibility.options.mobile.value && visibleMobile) {\n                    return true;\n                }\n\n                if (this.filters.component_visibility.options.desktop.value && visibleDesktop) {\n                    return true;\n                }\n\n                if (this.filters.component_visibility.options.none.value && !visibleMobile && !visibleDesktop) {\n                    return true;\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n        /* Removes component from M2C\n         * If it's paragraph that is about to be removed, asks if corresponding CMS Block shall be removed as well\n         * @param index {number} - index of the component in layoutBuilder\n         */\n        deleteComponent( index: number ): void {\n            const builder: any = this;\n\n            confirm({\n                content: $t('Are you sure you want to delete this item?'),\n                actions: {\n                    confirm(): void {\n                        const component: any = builder.components[index];\n                        builder.components.splice(index, 1);\n\n                        if (component.type === 'paragraph') {\n                            builder.deleteStaticBlock(component.data.blockId);\n                        }\n\n                        builder.$dispatch('layout-builder__update');\n                    },\n                },\n            });\n        },\n\n        deleteStaticBlock(cmsBlockId: string): void {\n            const component: any = this;\n\n            confirm({\n                content: $t('Would you like to delete CMS Block related to this component (CMS Block ID: %s) ?').replace('%s', cmsBlockId),\n                actions: {\n                    confirm(): void {\n                        component.$dispatch('layout-builder__cmsblock-delete-request', cmsBlockId);\n                    },\n                },\n            });\n        },\n\n        getTranslatedText(originalText: string): string {\n            return $t(originalText);\n        },\n    },\n};\n\nexport default layoutBuilder;\nexport { layoutBuilder, IComponentInformation };\n","/**\n * Base configurator component.\n * This component is responsible for providing base functionality for other configurators.\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst componentConfigurator: vuejs.ComponentOption = {\n    props: {\n        /**\n         * Class property support to enable BEM mixes.\n         */\n        class: {\n            type: [String, Object, Array],\n            default: '',\n        },\n        /**\n         * Property containing callback triggered when user saves component.\n         * For default, we are providing a dummy function so we can skip the type check.\n         */\n        save: {\n            type: Function,\n            default: (): Function => (): undefined => undefined,\n        },\n        /**\n         * Property containing callback triggered when configuration is changed.\n         * For default, we are providing a dummy function so we can skip the type check.\n         */\n        change: {\n            type: Function,\n            default: (): Function => (): undefined => undefined,\n        },\n        /**\n         *\n         */\n        configuration: {\n            type: String,\n            default(): any {},\n        },\n    },\n    methods: {\n        onChange(event?: Event): void {\n            // Serialize reactive data.\n            const data: any = JSON.parse(JSON.stringify(this.configuration));\n            // Trigger event and callback.\n            this.$dispatch('component-configurator__changed', data);\n            this.change(data);\n        },\n        onSave(event?: Event): void {\n            // Serialize reactive data.\n            const data: any = JSON.parse(JSON.stringify(this.configuration));\n            // Trigger event and callback.\n            this.$dispatch('component-configurator__saved', data);\n            this.save(data);\n        },\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'component-configurator__save'(): void {\n            if (this._events['component-configurator__save'].length === 1) {\n                this.onSave();\n            }\n        },\n    },\n};\n\nexport { componentConfigurator };\nexport default componentConfigurator;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\n\nimport componentConfigurator from '../../_component-configurator/component-configurator';\n\n/**\n * button configurator component.\n * This component is responsible for displaying buttons configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst buttonConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        componentConfigurator,\n    ],\n    template: `<form class=\"cc-button-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        <div class=\"cc-input cc-input--type-inline\">\n            <label for=\"cfg-label\" class=\"cc-input__label\">${$t( 'Label' )}:</label>\n            <input type=\"text\" v-model=\"configuration.label\" id=\"cfg-label\" class=\"cc-input__input\" @change=\"onChange\">\n        </div>\n        <div class=\"cc-input cc-input--type-addon cc-input--type-inline | cc-button-configurator__item-form-element\">\n            <label for=\"cfg-target\" class=\"cc-input__label\">${$t( 'Target' )}:</label>\n            <div class=\"cc-input__addon-wrapper\">\n                <input type=\"text\" class=\"cc-input__input | cc-button-configurator__target\" v-model=\"configuration.target\" id=\"cfg-target\">\n                <span class=\"cc-input__addon | cc-button-configurator__widget-chooser-trigger\" @click=\"openCtaTargetModal()\">\n                    <svg class=\"cc-input__addon-icon\">\n                        <use xlink:href=\"#icon_link\"></use>\n                    </svg>\n                </span>\n            </div>\n        </div>\n    </form>`,\n    props: {\n        /*\n         * Single's component configuration\n         */\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    label: '',\n                    target: '',\n                };\n            },\n        },\n        /* Get assets for displaying component images */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n        /* Obtain admin url */\n        adminPrefix: {\n            type: String,\n            default: 'admin',\n        },\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'component-configurator__save'(): void {\n            this.onSave();\n        },\n    },\n    methods: {\n        /* Opens modal with M2 built-in widget chooser\n         */\n        openCtaTargetModal(): void {\n            widgetTools.openDialog(`${window.location.origin}/${this.adminPrefix}/admin/widget/index/filter_widgets/Link/widget_target_id/cfg-target`);\n\n            this.wWidgetListener();\n        },\n        /* Sets listener for widget chooser\n         * It triggers component.onChange to update component's configuration\n         * after value of target input is changed\n         */\n        widgetSetListener(): void {\n            const component: any = this;\n\n            $('.cc-button-configurator__cta-target-link').on('change', (): void => {\n                component.onChange();\n            });\n        },\n        /*\n         * Check if widget chooser is loaded. If not, wait for it, if yes:\n         * Override default onClick for \"Insert Widget\" button in widget's modal window\n         * to clear input's value before inserting new one\n         */\n        wWidgetListener(): void {\n            if (typeof wWidget !== 'undefined' && widgetTools.dialogWindow[0].innerHTML !== '') {\n                const button: any = widgetTools.dialogWindow[0].querySelector('#insert_button');\n\n                button.onclick = null;\n                button.addEventListener('click', (): void => {\n                    this.configuration.target = '';\n                    wWidget.insertWidget();\n                });\n            } else {\n                setTimeout(this.wWidgetListener, 300);\n            }\n        },\n    },\n    ready(): void {\n        this.widgetSetListener();\n    },\n};\n\nexport default buttonConfigurator;\n","const templates: any = {\n    getComponentTemplate(classes: any, placeholders: any, disabledClass: string): string {\n        return `<div class=\"cc-input__fake-select | ${ classes.input.base } ${ disabledClass }\">${ placeholders.select }</div>\n        <div class=\"${ classes.input.base }-opener\"></div>\n        <div class=\"${ classes.menu.base }\">\n            <div class=\"${ classes.search.wrapper }\">\n                <input class=\"cc-input__input | ${ classes.search.input }\" data-role=\"advanced-select-text\" type=\"text\" placeholder=\"${ placeholders.search }\">\n                <div class=\"${ classes.search.resultsQty }\"></div>\n            </div>\n            <div class=\"${ classes.menu.content }\"></div>\n            <div class=\"${ classes.search.resultsWrapper }\"></div>\n            <div class=\"${ classes.actions.wrapper }\">\n                <button class=\"action-default | ${ classes.actions.button }\" type=\"button\">${ placeholders.doneButton }</button>\n            </div>\n        </div>`;\n    },\n    getMinimalComponentTemplate(classes: any, placeholders: any, disabledClass: string): string {\n        return `<div class=\"cc-input__fake-select | ${ classes.input.base } ${ disabledClass }\">${ placeholders.select }</div>\n        <div class=\"${ classes.input.base }-opener\"></div>\n        <div class=\"${ classes.menu.base }\">\n            <div class=\"${ classes.menu.content }\"></div>\n            <div class=\"${ classes.actions.wrapper }\">\n                <button class=\"action-default | ${ classes.actions.button }\" type=\"button\">${ placeholders.doneButton }</button>\n            </div>\n        </div>`;\n    },\n    getCrumbTemplate(baseClass: string, crumbLabel: string, title: string, inputValue: string): string {\n        return `<span class=\"${ baseClass }__crumb\">\n            <span class=\"${ baseClass }__crumb-text\">${ crumbLabel }</span>\n            <button class=\"${ baseClass }__crumb-remove\" type=\"button\" title=\"${ title }\" tabindex=\"-1\" data-value=\"${ inputValue }\"></button>\n        </span>`;\n    },\n};\n\nexport default templates;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\nimport templates from './category-picker-templates';\n\n/**\n * component options interface.\n * Please refer to swiper documentation and our teaser component for more options and callbacks\n */\ninterface categoryPickerOptions {\n    /**\n     * Tells if multiple categories can be selected\n     * @type {boolean}\n     * @default true\n     */\n    multiple?: boolean;\n\n    /**\n     * Tells if picker should initialize with disabled items that have no children\n     * @type {boolean}\n     * @default false\n     */\n    disableLastLevelItems?: boolean;\n\n    /**\n     * Tells if picker should show children items or only root\n     * @type {boolean}\n     * @default false\n     */\n    showChildren?: boolean;\n\n    /**\n     * Tells if live-search functionality should be enabled\n     * @type {boolean}\n     * @default true\n     */\n    showSearch?: boolean;\n\n    /**\n     * Tells if picker should initialize as disabled\n     * @type {boolean}\n     * @default false\n     */\n    disabled?: boolean;\n\n    /**\n     * Defines minimum search query length to initialize filtring of options \n     * @type {boolean}\n     * @default 3\n     */\n    minSearchQueryLength?: number;\n\n    placeholders?: {\n        /**\n         * Placeholder for select field.\n         * This string will be translateable via M2 JS translation system\n         * @type {string}\n         * @default Select...\n         */\n        select?: string;\n\n        /**\n         * Placeholder for Done button (on the bottom of UI box).\n         * This string will be translateable via M2 JS translation system\n         * @type {string}\n         * @default Done\n         */\n        doneButton?: string;\n\n        /**\n         * Placeholder for search input\n         * This string will be translateable via M2 JS translation system\n         * @type {string}\n         * @default [empty]\n         */\n        search?: string;\n    };\n\n    classes?: {};\n};\n\nexport default class categoryPicker {\n    protected _$output: any;\n    protected _defaults: any;\n    protected _categoriesData: any;\n    protected _isOpen: boolean;\n    protected _options: any;\n    protected _$wrapper: any;\n    protected _orderedCheckboxes: any;\n    protected _prefix: string;\n    public _categoriesLabels: any;\n\n    /**\n     * Creates new CcCategoryPicker component with optional settings.\n     * @param {$output} Hidden input field that will be filled with IDs after used choses it\n     * @param {data} JSON with categories data\n     * @param {options}  Optional settings object.\n     */\n    public constructor($output: JQuery, data: any, options?: categoryPickerOptions) {\n        this._defaults = {\n            multiple: true,\n            showChildren: true,\n            showSearch: true,\n            disabled: false,\n            disableLastLevelItems: false,\n            minSearchQueryLength: 3,\n            placeholders: {\n                select: $t('Select...'),\n                doneButton: $t('Done'),\n                search: $t('Type category name to search...'),\n                empty: $t('There are no categories matching your selection'),\n                removeCrumb: $t('Remove this category'),\n            },\n            classes: {\n                base: 'cc-category-picker',\n                baseMix: '',\n                input: {\n                    base: 'cc-category-picker__input',\n                },\n                menu: {\n                    base: 'cc-category-picker__box',\n                    open: 'cc-category-picker__box--open',\n                    content: 'cc-category-picker__box-content',\n                },\n                search: {\n                    wrapper: 'cc-category-picker__search',\n                    input: 'cc-category-picker__search-input',\n                    label: 'cc-category-picker__results-label',\n                    resultsQty: 'cc-category-picker__results-qty',\n                    resultsWrapper: 'cc-category-picker__results',\n                    resultsUL: 'cc-category-picker__results-list',\n                    resultsLI: 'cc-category-picker__results-item',\n                    resultsPath: 'cc-category-picker__results-path',\n                },\n                actions: {\n                    wrapper: 'cc-category-picker__actions',\n                    button: 'cc-category-picker__button',\n                },\n                dropdown: {\n                    ul: 'cc-category-picker__dropdown',\n                    li: 'cc-category-picker__dropdown-item',\n                    toggler: 'cc-category-picker__dropdown-toggler',\n                    label: 'cc-category-picker__label',\n                    checkbox: 'cc-category-picker__checkbox',\n                    radio: 'cc-category-picker__radio',\n                },\n            },\n        };\n\n        this._categoriesData = data;\n        this._categoriesLabels = [];\n        this._options = $.extend(true, {}, this._defaults, options);\n        this._$output = $output;\n        this._$wrapper = undefined;\n        this._isOpen = false;\n        this._prefix = Math.random().toString(36).substring(2, 5);\n        this._orderedCheckboxes = [];\n\n        this._renderPicker();\n        this._afterBuild(false);\n        this._rebuildValues();\n        this._setEvents();\n    }\n\n    /**\n     * This actually controls output of all events.\n     * Updates picker's crumbs and values\n     * @param {inputs} Optional. Array with inputs (checkboxes, radios) - they contain all data we need to show updated picker\n     */\n    public updatePicker(inputs?: any): void {\n        const c: any = this._options.classes;\n        const t: any = this._options.placeholders;\n        const _this: any = this;\n\n        const ids: string = $(inputs).map(function(): string {\n            return this.value;\n        }).get().join(',');\n\n        this._categoriesLabels = $(inputs).map(function(): string {\n            return $(this).next('label').clone().children().remove().end().text();\n        });\n\n        const crumbs: string = $(inputs).map(function(): string {\n            const label: string = $(this).next('label').clone().children().remove().end().text();\n            return templates.getCrumbTemplate(c.base, label, t.removeCrumb, this.value);\n        }).get().join('');\n\n        this._$output[0].value = ids;\n        this._$output[0].dispatchEvent(new Event('change'));\n\n        if (crumbs !== '') {\n            this._$wrapper.find(`.${ c.input.base }`).html(crumbs);\n        } else {\n            this._$wrapper.find(`.${ c.input.base }`).html(this._options.placeholders.select);\n        }\n\n        this._setCrumbsEvents();\n    }\n\n    /**\n     * Opens given parent - displays its children\n     * @param {$item} Parent element, of which children we want to display\n     */\n    public openSubcategoriesTree($item: any): void {\n        const c: any = this._options.classes;\n\n        $item.find(`> .${ c.dropdown.ul }`).toggleClass(`${ c.dropdown.ul }--hidden`);\n        $item.find(`> .${ c.dropdown.li }-content .${ c.dropdown.toggler }`).toggleClass(`${ c.dropdown.toggler }--active`);\n    }\n\n    /**\n     * Opens picker's box\n     * @param {$wrapper} wrapper (root element) of the component, since we want to know which picker should be opened\n     */\n    public openPicker($wrapper: any): void {\n        // Close all open pickers if class matches\n        this.closePicker($(`.${ this._options.classes.base }`));\n\n        $wrapper.find('.cc-input__fake-select').addClass('cc-input__fake-select--active');\n        $wrapper.find(`.${ this._options.classes.menu.base }`).addClass(`${ this._options.classes.menu.base }--open`);\n        this._isOpen = true;\n    }\n\n    /**\n     * Closes picker's box\n     * @param {$wrapper} wrapper (root element) of the component, since we want to know which picker should be closed\n     */\n    public closePicker($wrapper: any): void {\n        $wrapper.find('.cc-input__fake-select').removeClass('cc-input__fake-select--active');\n        $wrapper.find(`.${ this._options.classes.menu.base }`).removeClass(`${ this._options.classes.menu.base }--open`);\n        this._isOpen = false;\n    }\n\n    /**\n     * Rebuilds content of picker to show only children elements of given parent (category ID)\n     * @param {id} ID of category\n     */\n    public showChildrenOnly(id: number): void {\n        const target = this._getChildren(id);\n\n        if (target.optgroup) {\n            this._orderedCheckboxes = [];\n            this._$wrapper.find(`.${ this._options.classes.menu.content }`).html(this._getContents(target.optgroup, '', `${ this._options.classes.dropdown.ul }--normal`));\n            this._afterBuild(false);\n            this._rebuildValues();\n            this._setEvents();\n        } else {\n            this._$wrapper.find(`.${ this._options.classes.menu.content }`).html(this._options.placeholders.empty);\n        }\n    }\n\n    /**\n     * Enables picker\n     */\n    public enable(): void {\n        this._$wrapper.find(`.${ this._options.classes.input.base }`).removeClass(`${ this._options.classes.input.base }--disabled`);\n        this._options.disabled = false;\n    }\n\n    /**\n     * Disables picker\n     */\n    public disable(): void {\n        this._$wrapper.find(`.${ this._options.classes.input.base }`).addClass(`${ this._options.classes.input.base }--disabled`);\n        this.closePicker(this._$wrapper);\n        this._options.disabled = true;\n    }\n\n    /**\n     * Clears output, crumbs and inputs array\n     */\n    public resetAll(): void {\n        this._$output[0].value = '';\n        this._$wrapper.find(`.${ this._options.classes.input.base }`).html(this._options.placeholders.select);\n        this._orderedCheckboxes = [];\n    }\n\n    /**\n     * Renders picker component markup and initial setup\n     */\n    protected _renderPicker(): void {\n        const c: any = this._options.classes;\n        const t: any = this._options.placeholders;\n\n        const disabledClass = this._options.disabled ? `${ c.input.base }--disabled` : '';\n\n        let tpl: string = '';\n\n        if (this._options.showChildren && this._options.showSearch) {\n            tpl = templates.getComponentTemplate(c, t, disabledClass);\n        } else {\n            tpl = templates.getMinimalComponentTemplate(c, t, disabledClass);\n        }\n\n        this._$output.wrap(`<div class=\"${ c.base } ${ c.baseMix }\"></div>`);\n        this._$wrapper = this._$output.parent(`.${ c.base }`);\n        this._$wrapper.append(tpl);\n\n        if (this._categoriesData.optgroup) {\n            this._$wrapper.find(`.${ c.menu.content }`).html(this._getContents(this._categoriesData.optgroup, ''));\n        } else {\n            this._$wrapper.find(`.${ c.menu.content }`).html(t.empty);\n        }\n    }\n\n    /**\n     * Renders new options list based on given catehories data\n     * @param {data} Array of categories\n     */\n    protected _renderSearchResults(data: any): void {\n        const c: any = this._options.classes;\n        const _this: any = this;\n        let result: string = '';\n\n        this._$wrapper.find(`.${ c.search.resultsWrapper }`).html('');\n\n        if (data.length) {\n            result += `<ul class=\"${ c.search.resultsUL }\">`;\n\n            for (let i: number = 0; i < data.length; i++) {\n                const path: string = $(data[i].path).map(function(): string {\n                    return this;\n                }).get().join(' / ');\n                const checked: string = $(`#cp-${ this._prefix }-${ data[i].value }` ).prop('checked') ? 'checked' : '';\n                const disabled: string = $(`#cp-${ this._prefix }-${ data[i].value }`).prop( 'disabled' ) ? 'disabled' : '';\n\n                result += `<li class=\"${ c.search.resultsLI }\" role=\"option-group\">`;\n\n                if (this._options.multiple) {\n                    result += `<div class=\"cc-input cc-input--type-checkbox\">\n                        <input class=\"cc-input__checkbox | ${ c.dropdown.checkbox }\" type=\"checkbox\" value=\"${ data[i].value }\" name=\"cp-sr-${ this._prefix }[]\" id=\"cp-sr-${ this._prefix }-${ data[i].value }\" tabindex=\"-1\" ${ checked } ${ disabled }>`;\n                } else {\n                    result += `<div class=\"cc-input cc-input--type-radio\">\n                        <input class=\"cc-input__radio | ${ c.dropdown.radio }\" type=\"radio\" value=\"${ data[i].value }\" name=\"cp-sr-${ this._prefix }[]\" id=\"cp-sr-${ this._prefix }-${ data[i].value }\" tabindex=\"-1\" ${ checked } ${ disabled }>`;\n                }\n\n                result += `<label for=\"cp-sr-${ this._prefix }-${ data[i].value }\" class=\"cc-input__label | ${ c.search.label }\">\n                    ${ data[i].label } \n                    <span class=\"${ c.search.resultsPath }\">${ path }</span>\n                </label></div>\n                </li>`;\n            }\n\n            result += '</ul>';\n        }\n\n        this._$wrapper.find(`.${ c.search.resultsWrapper }` ).html(result);\n\n        this._$wrapper.find(`.${ c.search.resultsUL } input[type=\"checkbox\"]`).off('change').on('change', function(): void {\n            _this._$wrapper.find(`.${ c.menu.content } :input[value=\"${ this.value }\"]`).trigger('click');\n        } );\n\n        const text: string = data.length === 1 ? `${ data.length } ${ $t('Result') }` : `${ data.length } ${ $t('Results') }`;\n        this._$wrapper.find(`.${ this._options.classes.search.resultsQty }`).html(text);\n\n        this._setEvents();\n    }\n\n    /**\n     * Recursive method to filter categories by label based on given query (string or its part)\n     * @param {category} root category to start from\n     * @param {query} string that we look for in category labels\n     * @param {path} Path to the subcategory (used to display crumbs)\n     * @return {categories} Array of filtered categories\n     */\n    protected _getByQuery(category: any, query: string, path: any = []): any {\n        const categories: any = [];\n\n        if (category.is_active === '1' && category.label && category.label.match(new RegExp(query, 'i'))) {\n            categories.push({\n                label: category.label,\n                value: category.value,\n                path: path,\n            });\n        }\n\n        if (category.optgroup) {\n            const categoryPath = category.label ? path.concat([category.label]) : [];\n            category.optgroup.forEach(subcategory => {\n                this._getByQuery(subcategory, query, categoryPath).map(function(cat: any): any {\n                    if (subcategory.is_active === '1') {\n                        return categories.push(cat);\n                    }\n                });\n            });\n        }\n\n        return categories;\n    }\n\n    /**\n     * Recursive methods to filter categories collection to get only children of given ID\n     * @param {id} ID of category to filter\n     * @param {children} Optional - Array of children of a category\n     * @return {result} Filtered array of children\n     */\n    protected _getChildren(id: number, children?: any): any {\n        const collection: any = children || this._categoriesData;\n\n        if (collection.value && collection.value === id) {\n            return collection;\n        }\n\n        if (collection.optgroup) {\n            const c = collection.optgroup;\n\n            for (let i = 0; i < c.length; i++) {\n                const result: any = this._getChildren(id, c[i]);\n                if (result) {\n                    return result;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Recursive method to render list with categories as a radios / checkboxes using\n     * @param {categories} Array with categories\n     * @param {str} Current HTML markup of the list\n     * @param {dropdownModifier} Modifier class for dropdown for styling purposes\n     * @return {str} HTML markup of options list\n     */\n    protected _getContents(categories: any, str: string, dropdownModifier?: string): string {\n        const c: any = this._options.classes;\n\n        if (!dropdownModifier) {\n            dropdownModifier = '';\n        }\n\n        str += `<ul class=\"${ c.dropdown.ul } ${ c.dropdown.ul }--hidden ${ dropdownModifier }\">`;\n\n        /**\n         * Loop through categories array and find optgroups.\n         * Then make a UL element out of each optgroup and build general markup\n         */\n        for (let i: number = 0; i < categories.length; i++) {\n            if (categories[i].is_active === '1') {\n                const checked = $( `#cp-${ this._prefix }-${ categories[i].value }`).prop('checked') ? 'checked' : '';\n\n                str += `<li class=\"${ c.dropdown.li }\" data-role=\"option-group\">`;\n\n                if (this._options.multiple) {\n                    str += `<div class=\"cc-input cc-input--type-checkbox | ${ c.dropdown.li }-content\">\n                        <input class=\"cc-input__checkbox | ${ c.dropdown.checkbox }\" type=\"checkbox\" value=\"${ categories[i].value }\" name=\"cp-${ this._prefix }[]\" id=\"cp-${ this._prefix }-${ categories[i].value }\" tabindex=\"-1\" ${ checked }>`;\n                } else {\n                    str += `<div class=\"cc-input cc-input--type-radio | ${ c.dropdown.li }-content\">\n                        <input class=\"cc-input__radio | ${ c.dropdown.radio }\" type=\"radio\" value=\"${ categories[i].value }\" name=\"cp-${ this._prefix }[]\" id=\"cp-${ this._prefix }-${ categories[i].value }\" tabindex=\"-1\" ${ checked }>`;\n                }\n\n                str += `<label for=\"cp-${ this._prefix }-${ categories[i].value }\" class=\"cc-input__label | ${ c.dropdown.label }\">${ categories[i].label }</label>`;\n\n                if (categories[i].optgroup && categories[i].optgroup.length && this._options.showChildren) {\n                    str += `<div class=\"${ c.dropdown.toggler }\"></div></div>\n                        ${ this._getContents( categories[i].optgroup, '' ) }`;\n                } else {\n                    str += '</div>';\n                }\n\n                str += '</li>';\n            }\n        }\n\n        str += '</ul>';\n\n        return str;\n    }\n\n    /**\n     * Adjusts markup after it is build\n     */\n    protected _afterBuild(openSubTree: boolean = true): void {\n        const c: any = this._options.classes;\n        const _this: any = this;\n\n        this._$wrapper.find(`.${ c.menu.content } > .${ c.dropdown.ul }`).removeClass(`${ c.dropdown.ul }--hidden`);\n\n        if (openSubTree) {\n            this.openSubcategoriesTree(this._$wrapper.find(`.${ c.menu.content } > ul > li:first-child`));\n        }\n\n        this._$wrapper.find(`.${ c.dropdown.li }`).each(function(): void {\n            if ($(this).find(`.${ c.dropdown.ul }`).length) {\n                $(this).addClass(`${ c.dropdown.li }--has-children`);\n            } else if (_this._options.disableLastLevelItems) {\n                $(this).addClass(`${ c.dropdown.li }--disabled`).find('input').prop('disabled', true);\n            }\n        });\n    }\n\n    /**\n     * Support for exising value. If there is already some input (category IDs) in $output field\n     * then it constrols initialization to setup those categories in picker's output HTML\n     */\n    protected _rebuildValues(): void {\n        if (this._$output[0].value !== '') {\n            const values = this._$output[ 0 ].value.split(',');\n\n            for (let i: number = 0; i < values.length; i++) {\n                const $cb = this._$wrapper.find(`.${ this._options.classes.menu.content } input[value=\"${ values[i] }\"]`);\n                \n                if ($cb.length) {\n                    $cb.prop('checked', true);\n                    this._orderedCheckboxes.push($cb[0]);\n                }\n            }\n\n            this.updatePicker(this._orderedCheckboxes);\n        }\n    }\n\n    /**\n     * Sets most of events of picker\n     */\n    protected _setEvents(): void {\n        const c: any = this._options.classes;\n        const _this: any = this;\n        const fKeys: any = [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123]; // F1-F12\n        const listen: any = /^[a-zA-Z0-9._\\b\\-\\s]+$/i;\n\n        this._$wrapper.find(`.${ c.input.base }-opener`).off('click').on('click', function(): void {\n            if (_this._isOpen) {\n                _this.closePicker($(this).parents(`.${ c.base }`));\n            } else {\n                _this.openPicker($(this).parents(`.${ c.base }`));\n            }\n        });\n\n        this._$wrapper.find(`.${ c.actions.button }`).off('click').on('click', function(): void {\n            _this.closePicker($(this).parents(`.${ c.base }`));\n        });\n\n        this._$wrapper.find(`.${ c.dropdown.toggler }`).off('click').on('click', function(): void {\n            _this.openSubcategoriesTree($(this).parents(`.${ c.dropdown.li }`).first());\n        });\n\n        this._$wrapper.find(`.${ c.menu.content } input[type=\"checkbox\"]`).off('change').on('change', function(): void {\n            const idx = _this._orderedCheckboxes.indexOf(this);\n\n            if (idx !== -1) {\n                _this._orderedCheckboxes.splice(idx, 1);\n            }\n\n            if (this.checked) {\n                _this._orderedCheckboxes.push(this);\n            }\n\n            for (let i: number; i < _this._orderedCheckboxes.length; i++) {\n                const val: any = _this._orderedCheckboxes[i].value;\n\n                if (_this._$wrapper.find(`.${ c.search.resultsUL } input[value=\"${ val }\"]`).length) {\n                    _this._$wrapper.find(`.${ c.menu.content } input[value=\"${ val }\"]`).prop('checked', true);\n                }\n            }\n\n            _this.updatePicker(_this._orderedCheckboxes);\n        });\n\n        this._$wrapper.find(`.${ c.menu.base } input[type=\"radio\"]`).off('change').on('change', function(): void {\n            if (_this._$wrapper.find(`.${ c.search.resultsUL } input[value=\"${ this.value }\"]`).length) {\n                _this._$wrapper.find(`.${ c.menu.content } input[value=\"${ this.value }\"]`).prop('checked', true);\n            }\n            _this.updatePicker(this);\n        });\n\n        this._$wrapper.find(`.${ c.search.input }`).off('keyup').on({\n            keyup: function(e: Event): void {\n                if (this.value.length >= _this._options.minSearchQueryLength) {\n                    const key: any = String.fromCharCode(e.keyCode).toLowerCase();\n\n                    if (key.match(listen) && fKeys.indexOf(e.which) === -1 && !e.ctrlKey && !e.metaKey && !e.altKey ) {\n                        _this._renderSearchResults(_this._getByQuery(_this._categoriesData, this.value));\n                    }\n\n                    _this._$wrapper.find(`.${ c.search.resultsWrapper }`).show();\n                    _this._$wrapper.find(`.${ c.search.resultsQty }`).show();\n                    _this._$wrapper.find(`.${ c.menu.content }`).hide();\n                } else {\n                    _this._$wrapper.find(`.${ c.search.resultsWrapper }`).hide();\n                    _this._$wrapper.find(`.${ c.search.resultsQty }`).hide();\n                    _this._$wrapper.find(`.${ c.menu.content }`).show();\n                }\n            },\n        });\n    }\n\n    /**\n     * Controls crumbs in picker's select field\n     */\n    protected _setCrumbsEvents(): void {\n        const _this: any = this;\n\n        this._$wrapper.find(`.${ _this._options.classes.base }__crumb-remove`).off('click').on('click', function(e: Event): void {\n            const $target: any = _this._$wrapper.find(`.${ _this._options.classes.menu.content } input[value=\"${ $(this).data('value') }\"]`);\n            const $srTarget: any = _this._$wrapper.find(`.${ _this._options.classes.search.resultsWrapper } input[value=\"${ $(this).data('value') }\"]`);\n\n            if (_this._options.multiple) {\n                $target.click();\n            } else {\n                if ($target.prop('checked')) {\n                    $target.prop('checked', false);\n                    _this.updatePicker();\n                }\n            }\n\n            if ($srTarget.length) {\n                $srTarget.prop('checked', !$srTarget.prop('checked'));\n            }\n\n            e.preventDefault();\n        });\n    }\n}\n","import $ from 'jquery';\nimport $t from 'mage/translate';\n\nimport componentConfigurator from '../../_component-configurator/component-configurator';\nimport categoryPicker from '../../../utils/category-picker/category-picker';\n\n/**\n * Category links configurator component.\n * This component is responsible for displaying category links configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst categoryLinksConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        componentConfigurator,\n    ],\n    template: `<form class=\"cc-category-links-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        <div class=\"cc-input cc-input--type-inline\">\n            <label class=\"cc-input__label\">${$t( 'Category' )}</label>\n            <input type=\"hidden\" v-model=\"configuration.main_category_id\" id=\"cp-main\">\n        </div>\n        <div class=\"cc-input cc-input--type-inline\">\n            <label class=\"cc-input__label\">${$t( 'Subcategories' )}</label>\n            <input type=\"hidden\" v-model=\"configuration.sub_categories_ids\" id=\"cp-sub\">\n        </div>\n        \n        <div class=\"cc-input cc-input--type-inline\">\n            <label for=\"cfg-shownumbers\" class=\"cc-input__label\">${$t( 'Show products count' )}</label>\n            <div class=\"admin__actions-switch\" data-role=\"switcher\">\n                <input type=\"checkbox\" class=\"admin__actions-switch-checkbox\" id=\"cfg-shownumbers\" name=\"use_name_in_product_search\" v-model=\"configuration.shownumbers\" @change=\"onChange\">\n                <label class=\"admin__actions-switch-label\" for=\"cfg-shownumbers\">\n                    <span class=\"admin__actions-switch-text\" data-text-on=\"${$t( 'Yes' )}\" data-text-off=\"${$t( 'No' )}\"></span>\n                </label>\n            </div>\n        </div>\n    </form>`,\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'component-configurator__save'(): void {\n            this.configuration.main_category_labels = this.categoryPicker._categoriesLabels;\n            this.configuration.sub_categories_labels = this.subCategoriesPicker._categoriesLabels;\n            this.onSave();\n        },\n    },\n    props: {\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    main_category_id: '',\n                    sub_categories_ids: '',\n                    shownumbers: false,\n                };\n            },\n        },\n        /* Obtain endpoint for getting categories data for category picker */\n        categoriesDataUrl: {\n            type: String,\n            default: '',\n        },\n    },\n    data(): Object {\n        return {\n            categoryPicker: undefined,\n            subCategoriesPicker: undefined,\n        };\n    },\n    ready(): void {\n        // Show loader\n        $('body').trigger('showLoadingPopup');\n\n        this.$http.get(this.categoriesDataUrl).then((response: any): void => {\n            this.initializePickers(JSON.parse(response.body));\n            \n            // Hide loader\n            $('body').trigger('hideLoadingPopup');\n        } );\n    },\n    methods: {\n        initializePickers(categories: any): void {\n            this.subCategoriesPicker = new categoryPicker($('#cp-sub'), categories, {\n                showSearch: false,\n                disabled: this.configuration.main_category_id === '',\n            });\n\n            this.categoryPicker = new categoryPicker($('#cp-main'), categories, {\n                multiple: false,\n            });\n\n            if (this.configuration.main_category_id !== '') {\n                this.subCategoriesPicker.showChildrenOnly(this.configuration.main_category_id);\n            }\n\n            $('#cp-main').on('change', (): void => {\n                this.updateSubcategoriesPicker(this.configuration.main_category_id);\n            });\n        },\n\n        updateSubcategoriesPicker(catId: string): void {\n            this.subCategoriesPicker.resetAll();\n\n            if (catId !== '') {\n                this.subCategoriesPicker.showChildrenOnly(catId);\n                this.subCategoriesPicker.enable();\n            } else {\n                this.subCategoriesPicker.disable();\n            }\n        }\n    },\n};\n\nexport default categoryLinksConfigurator;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\n\nimport actionButton from '../../../utils/action-button/action-button';\nimport componentActions from '../../../utils/component-actions/component-actions';\n\nimport componentConfigurator from '../../_component-configurator/component-configurator';\nimport categoryPicker from '../../../utils/category-picker/category-picker';\n\n/**\n * CMS Pages Teaser configurator component.\n * This component is responsible for displaying CMS pages teaser configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst cmsPagesTeaserConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        componentConfigurator,\n    ],\n    template: `<div class=\"cc-cms-pages-teaser-configurator {{ classes }} | {{ mix }}\" {{ attributes }}>\n        <section class=\"cc-cms-pages-teaser-configurator__section\">\n            <h3 class=\"cc-cms-pages-teaser-configurator__subtitle\">${ $t('Data source') }</h3>\n            <div class=\"cc-cms-pages-teaser-configurator__scenario-options cc-cms-pages-teaser-configurator__scenario-options--inputs\">\n                <div class=\"cc-input cc-input--type-inline | cc-cms-pages-teaser-configurator__section-option\">\n                    <label class=\"cc-input__label | cc-cms-pages-teaser-configurator__section-option-label\">${$t( 'CMS Tags' )}:</label>\n                    <input type=\"hidden\" v-model=\"configuration.tags\" @change=\"onChange\" id=\"cp-cms-pages-teaser\">\n                </div>\n                <div class=\"cc-cms-pages-teaser-configurator__section-option\">\n                    <div class=\"cc-input\">\n                        <label class=\"cc-input__label\" for=\"cfg-cmspt-page-ids\">${$t( 'CMS Pages IDs' )}:</label>\n                        <input type=\"text\" name=\"cfg-cmspt-page-ids\" class=\"cc-input__input\" id=\"cfg-cmspt-page-ids\" v-model=\"configuration.ids\" @change=\"onChange\">\n                    </div>\n                    <div class=\"cc-input cc-input--type-inline cc-input--type-hint\">\n                        <span class=\"cc-input__hint cc-input__hint--under-field\">${$t( 'Multiple, comma-separated.' )}</span>\n                    </div>\n                    <div class=\"cc-input cc-input--type-inline cc-input--type-hint\" v-if=\"configuration.ids.length\">\n                        <span class=\"cc-input__hint cc-input__hint--info-mark\">${$t( 'Providing list of comma separated IDs will result in ignoring any CMS tags (if specified). Only pages with specified IDs will be displayed in exactly the same order as they are provided in the field.' )}</span>\n                    </div>\n                </div>\n\n                <div class=\"cc-input cc-input--type-inline | cc-cms-pages-teaser-configurator__section-option\">\n                    <label for=\"cfg-cmspt-limit\" class=\"cc-input__label | cc-cms-pages-teaser-configurator__section-option-label\">${$t( 'Teasers limit' )}:</label>\n                    <select name=\"cfg-cmspt-limit\" class=\"cc-input__select\" id=\"cfg-cmspt-limit\" v-model=\"configuration.limit\" @change=\"onChange\">\n                        <option value=\"4\">${$t( '4 teasers' )}</option>\n                        <option value=\"8\">${$t( '8 teasers' )}</option>\n                        <option value=\"16\">${$t( '16 teasers' )}</option>\n                        <option value=\"1000\">${$t( 'All available teasers (no limit)' )}</option>\n                    </select>\n                </div>\n\n                <div class=\"cc-input cc-input--type-inline | cc-cms-pages-teaser-configurator__section-option\">\n                    <label for=\"cfg-cmspt-text-variant\" class=\"cc-input__label | cc-cms-pages-teaser-configurator__section-option-label\">${$t( 'Display variant' )}:</label>\n                    <select name=\"cfg-cmspt-text-variant\" class=\"cc-input__select\" id=\"cfg-cmspt-text-variant\" v-model=\"configuration.textDisplayVariant\" @change=\"onChange\">\n                        <template v-for=\"(idx, scenario) in imageTeasersContentPositions\">\n                            <option value=\"{{ idx + 1 }}\">${$t( '{{ scenario }}' )}</option>\n                        </template>\n                    </select>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"cc-cms-pages-teaser-configurator__section\">\n            <h3 class=\"cc-cms-pages-teaser-configurator__subtitle\">Desktop Layout</h3>\n            <div class=\"cc-cms-pages-teaser-configurator__scenario-options\">\n                <div class=\"cc-cms-pages-teaser-configurator__scenario-options-list\">\n                    <li\n                        :class=\"{\n                            'cc-cms-pages-teaser-configurator__option--selected': configuration.currentScenario.desktopLayout.id == optionId,\n                        }\"\n                        class=\"cc-cms-pages-teaser-configurator__option\"\n                        v-for=\"(optionId, option) in scenarioOptions.desktopLayout\"\n                        @click=\"toggleOption('desktopLayout', optionId)\">\n                        <div class=\"cc-cms-pages-teaser-configurator__option-wrapper\">\n                            <svg class=\"cc-cms-pages-teaser-configurator__option-icon\">\n                                <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                            </svg>\n                        </div>\n                        <p class=\"cc-cms-pages-teaser-configurator__option-name\">\n                            ${$t( '{{ option.name }}' )}\n                        </p>\n                    </li>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"cc-cms-pages-teaser-configurator__section\">\n            <h3 class=\"cc-cms-pages-teaser-configurator__subtitle\">Mobile Layout</h3>\n            <div class=\"cc-cms-pages-teaser-configurator__scenario-options\">\n                <ul class=\"cc-cms-pages-teaser-configurator__scenario-options-list\">\n                    <li\n                        :class=\"{\n                            'cc-cms-pages-teaser-configurator__option--selected': configuration.currentScenario.mobileLayout.id == optionId,\n                        }\"\n                        class=\"cc-cms-pages-teaser-configurator__option\"\n                        v-for=\"(optionId, option) in scenarioOptions.mobileLayout\"\n                        @click=\"toggleOption('mobileLayout', optionId)\">\n                        <div class=\"cc-cms-pages-teaser-configurator__option-wrapper\">\n                            <svg class=\"cc-cms-pages-teaser-configurator__option-icon\">\n                                <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                            </svg>\n                        </div>\n                        <p class=\"cc-cms-pages-teaser-configurator__option-name\">\n                            ${$t( '{{ option.name }}' )}\n                        </p>\n                    </li>\n                </ul>\n            </div>\n        </section>\n    </div>`,\n    /**\n     * Get dependencies\n     */\n    components: {\n        'action-button': actionButton,\n        'component-actions': componentActions,\n    },\n    props: {\n        /**\n         * Image teaser configuration\n         */\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    tags: '',\n                    ids: '',\n                    limit: '1000',\n                    textDisplayVariant: '1',\n                    currentScenario: {\n                        desktopLayout: {},\n                        mobileLayout: {},\n                    },\n                };\n            },\n        },\n        /* Obtain stringified JSON with CMS tags data */\n        cmsTags: {\n            type: String,\n            default: '',\n        },\n        /* Obtain content-constructor's config file */\n        ccConfig: {\n            type: Object,\n            default(): any {\n                return {};\n            },\n        },\n    },\n    computed: {\n        imageTeasersContentPositions: function(): object {\n            const data: object = this.ccConfig.image_teasers_content_positions;\n            return Object.keys(data).map(key => (<any>data)[key]);\n        },\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'component-configurator__save'(): void {\n            this.onSave();\n        },\n    },\n    data(): any {\n        return {\n            scenarioOptions: {\n                // Desktop layout scenario elements.\n                desktopLayout: {\n                    '2': {\n                        name: '2 in row',\n                        iconId: 'dl_2',\n                        teasersNum: 2,\n                    },\n                    '4': {\n                        name: '4 in row',\n                        iconId: 'dl_4',\n                        teasersNum: 4,\n                    },\n                },\n                // Mobile layout scenario elements.\n                mobileLayout: {\n                    'slider': {\n                        name: 'Slider',\n                        iconId: 'ml_slider',\n                    },\n                    'grid': {\n                        name: 'Grid',\n                        iconId: 'ml_2-2',\n                    },\n                },\n            },\n        };\n    },\n    methods: {\n        /*\n         * Set the proper option after variant click\n         */\n        toggleOption(optionCategory: string, optionId: string): void {\n            this.configuration.currentScenario[optionCategory] = this.scenarioOptions[optionCategory][optionId];\n            this.configuration.currentScenario[optionCategory].id = optionId;\n        },\n    },\n    ready(): void {\n        if (this.cmsTags !== '') {\n            this.categoryPicker = new categoryPicker($('#cp-cms-pages-teaser'), JSON.parse(this.cmsTags), {\n                multiple: true,\n                minSearchQueryLength: 1,\n                placeholders: {\n                    select: $t('Select tags...'),\n                    doneButton: $t('Done'),\n                    search: $t('Type tag-name to search...'),\n                    empty: $t('There are no tags matching your selection'),\n                    removeCrumb: $t('Remove this tag'),\n                },\n                classes: {\n                    baseMix: 'cc-category-picker--min',\n                },\n            });\n        }\n    }\n}\n\nexport default cmsPagesTeaserConfigurator;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\n\nimport componentConfigurator from '../../_component-configurator/component-configurator';\n\n/**\n * CustomHtml configurator component.\n * This component is responsible for displaying CustomHtmls configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst customHtmlConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        componentConfigurator,\n    ],\n    template: `<form class=\"cc-custom-html-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        <div class=\"cc-input cc-input--type-inline\">\n            <p class=\"cc-warning\">${$t( 'This component is meant to be used only by developers due to high risk of breaking shop layout.' )}</p>\n        </div>\n        <div class=\"cc-input cc-input--type-inline\">\n            <label for=\"cfg-title\" class=\"cc-input__label\">${$t( 'Title' )}:</label>\n            <input type=\"text\" v-model=\"configuration.title\" id=\"cfg-title\" class=\"cc-input__input\" @change=\"onChange\" />\n        </div>\n        <div class=\"cc-input cc-input--type-inline\">\n            <label for=\"cfg-markup\" class=\"cc-input__label\">${$t( 'HTML markup' )}:</label>\n            <textarea v-model=\"configuration.markup\" id=\"cfg-markup\" class=\"cc-input__textarea\" @change=\"onChange\"></textarea>\n        </div>\n    </form>`,\n    props: {\n        configuration: {\n            type: Object,\n            default(): any {\n                return {\n                    title: '',\n                    markup: '',\n                };\n            },\n        },\n    },\n};\n\nexport default customHtmlConfigurator;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\n\nimport componentConfigurator from '../../_component-configurator/component-configurator';\nimport categoryPicker from '../../../utils/category-picker/category-picker';\n \n/**\n * Daily deal teaser configurator component.\n * This component is responsible for displaying daily deal teaser configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst dailyDealTeaserConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        componentConfigurator,\n    ],\n    template: `<form class=\"cc-daily-deal-teaser-configurator\" {{ attributes }}>\n        <div class=\"cc-input cc-input--type-inline\">\n            <label class=\"cc-input__label\">${$t( 'Categories' )}:</label>\n            <input type=\"hidden\" v-model=\"configuration.category_id\" @change=\"onChange\" id=\"cp-daily-deal-teaser\">\n        </div>\n\n        <div class=\"cc-input cc-input--type-inline\">\n            <label class=\"cc-input__label\" for=\"cfg-ddt-skus\">${$t( 'SKUs' )}:</label>\n            <input type=\"text\" name=\"cfg-ddt-skus\" class=\"cc-input__input\" id=\"cfg-ddt-skus\" v-model=\"configuration.skus\" @change=\"onChange\">\n        </div>\n        <div class=\"cc-input cc-input--type-inline cc-input--type-hint\">\n            <label class=\"cc-input__label\"> </label>\n            <span class=\"cc-input__hint cc-input__hint--under-field\">${$t( 'Multiple, comma-separated' )}</span>\n        </div>\n        <div class=\"cc-input cc-input--type-inline cc-input--type-hint\" v-if=\"configuration.skus.length\">\n            <label class=\"cc-input__label\"> </label>\n            <span class=\"cc-input__hint cc-input__hint--under-field cc-input__hint--info-mark\">${$t( 'Providing list of comma separated SKUs will disable any filtering and sorting configured for that component.  Category (if specified) will also not be taken into account. Only products with specified SKUs will be displayed in exactly the same order as they are provided in SKUs field.' )}</span>\n        </div>\n\n        <div class=\"cc-input cc-input--type-inline\">\n            <label class=\"cc-input__label\" for=\"cfg-ddt-dataprovider\">${$t( 'Custom Data Provider' )}:</label>\n            <input type=\"text\" name=\"cfg-ddt-dataprovider\" class=\"cc-input__input\" id=\"cfg-ddt-dataprovider\" v-model=\"configuration.class_overrides.dataProvider\" @change=\"onChange\">\n        </div>\n\n        <div class=\"cc-input cc-input--type-inline\">\n            <label for=\"cfg-ddt-filter\" class=\"cc-input__label\">${$t( 'Filter' )}:</label>\n            <select name=\"cfg-ddt-filter\" class=\"cc-input__select\" id=\"cfg-ddt-filter\" v-model=\"configuration.filter\" @change=\"onChange\">\n                <option value=\"\">${$t( 'No filter' )}</option>\n                <template v-for=\"filter in productCollectionsFilters\">\n                    <option value=\"{{ filter.value }}\" :selected=\"filter.value === configuration.filter\">{{ filter.label }}</option>\n                </template>\n            </select>\n        </div>\n\n        <div class=\"cc-input cc-input--type-inline\">\n            <label for=\"cfg-ddt-order-by\" class=\"cc-input__label\">${$t( 'Order by' )}:</label>\n            <select name=\"cfg-ddt-order-by\" class=\"cc-input__select\" id=\"cfg-ddt-order-by\" v-model=\"configuration.order_by\" @change=\"onChange\">\n                <option value=\"\">${$t( 'Not specified' )}</option>\n                <template v-for=\"sorter in productCollectionsSorters\">\n                    <option value=\"{{ sorter.value }}\" :selected=\"sorter.value === configuration.order_by\">{{ sorter.label }}</option>\n                </template>\n            </select>\n            <select name=\"cfg-ddt-order-type\" class=\"cc-input__select\" v-model=\"configuration.order_type\" @change=\"onChange\">\n                <option value=\"ASC\">${$t( 'Ascending' )}</option>\n                <option value=\"DESC\">${$t( 'Descending' )}</option>\n            </select>\n        </div>\n    </form>`,\n    props: {\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    category_id: '',\n                    filter: '',\n                    order_by: 'creation_date',\n                    order_type: 'DESC',\n                    skus: '',\n                    class_overrides: {\n                        dataProvider: '',\n                    },\n                };\n            },\n        },\n        /* Obtain endpoint for getting categories data for category picker */\n        categoriesDataUrl: {\n            type: String,\n            default: '',\n        },\n        productCollectionsSorters: {\n            type: [String, Array],\n            default: '',\n        },\n        productCollectionsFilters: {\n            type: [String, Array],\n            default: '',\n        },\n    },\n    data(): Object {\n        return {\n            categoryPicker: undefined,\n        };\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'component-configurator__save'(): void {\n            if (this.configuration.class_overrides.dataProvider === '') {\n                delete this.configuration.class_overrides;\n            }\n\n            this.onSave();\n        },\n    },\n    ready(): void {\n        this.productCollectionsSorters = this.productCollectionsSorters !== '' ? JSON.parse(this.productCollectionsSorters) : [];\n        this.productCollectionsFilters = this.productCollectionsFilters !== '' ? JSON.parse(this.productCollectionsFilters) : [];\n\n        if (!this.configuration.class_overrides) {\n            this.configuration.class_overrides = {\n                dataProvider: '',\n            };\n        }\n\n        // Show loader\n        $('body').trigger('showLoadingPopup');\n\n        // Get categories JSON with AJAX\n        this.$http.get(this.categoriesDataUrl).then((response: any): void => {\n            this.categoryPicker = new categoryPicker($('#cp-daily-deal-teaser'), JSON.parse(response.body), {\n                multiple: false,\n            });\n            \n            // Hide loader\n            $('body').trigger('hideLoadingPopup');\n        });\n    },\n};\n \nexport default dailyDealTeaserConfigurator;\n","import $t from 'mage/translate';\n\nimport componentConfigurator from '../../_component-configurator/component-configurator';\n\n/**\n * Headline component interface.\n */\ninterface IComponentSettings {\n    title?: string;\n    subtitle?: string;\n    headingTag?: string;\n}\n\n/**\n * Headline configurator component.\n * This component is responsible for displaying headlines' configuration modal\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst headlineConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        componentConfigurator,\n    ],\n    template: `<div class=\"cc-headline-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n        <div class=\"cc-input cc-input--type-inline\">\n            <label for=\"cfg-headline\" class=\"cc-input__label\">${ $t('Headline') }:</label>\n            <input type=\"text\" v-model=\"configuration.title\" id=\"cfg-headline\" class=\"cc-input__input\" @change=\"onChange\">\n        </div>\n        <div class=\"cc-input cc-input--type-inline\">\n            <label for=\"cfg-subheadline\" class=\"cc-input__label\">${ $t('Subheadline') }:</label>\n            <input type=\"text\" v-model=\"configuration.subtitle\" id=\"cfg-subheadline\" class=\"cc-input__input\" @change=\"onChange\">\n        </div>\n\n        <div class=\"cc-headline-configurator__advanced-trigger\">\n            <span :class=\"isAvdancedSettingsOpen ? 'active' : ''\" role=\"button\" @click=\"toggleAdvancedContent()\">${ $t('Advanced settings') }</span>\n        </div>\n\n        <div class=\"cc-headline-configurator__advanced-content\" v-show=\"isAvdancedSettingsOpen\">\n            <div class=\"cc-input cc-input--type-inline\">\n                <label for=\"cfg-heading-tag\" class=\"cc-input__label\">${ $t('Level of Heading tag') }:</label>\n                <select name=\"cfg-heading-tag\" class=\"cc-input__select\" id=\"cfg-heading-tag\" v-model=\"configuration.headingTag\" @change=\"onChange\">\n                    <option v-for=\"n in 6\" value=\"h{{ n+1 }}\" :selected=\"n+1 === configuration.headingTag\">Heading {{ n+1 }} (h{{ n+1 }})</option>\n                </select>\n            </div>\n        </div>\n    </div>`,\n    props: {\n        configuration: {\n            type: Object,\n            default(): any {\n                return {\n                    title: '',\n                    subtitle: '',\n                    headingTag: 'h2',\n                };\n            },\n        },\n    },\n    data(): Object {\n        return {\n            isAvdancedSettingsOpen: false,\n        }\n    },\n    methods:{\n        toggleAdvancedContent(): void {\n            this.isAvdancedSettingsOpen = !this.isAvdancedSettingsOpen;\n        },\n    },\n    ready(): void {\n        if (!this.configuration.headingTag) {\n            this.configuration.headingTag = 'h2';\n        }\n    },\n};\n\nexport default headlineConfigurator;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\nimport alert from 'Magento_Ui/js/modal/alert';\nimport confirm from 'Magento_Ui/js/modal/confirm';\n\nimport actionButton from '../../../utils/action-button/action-button';\nimport componentActions from '../../../utils/component-actions/component-actions';\nimport componentAdder from '../../../utils/component-adder/component-adder';\n\nimport componentConfigurator from '../../_component-configurator/component-configurator';\n\n// Pattern for teaser Item\nconst heroItemDataPattern: any = {\n    image: '',\n    decodedImage: '',\n    displayVariant: 'variant-1',\n    colorScheme: 'light',\n    headline: '',\n    subheadline: '',\n    paragraph: '',\n    ctaLabel: $t( 'Check offer' ),\n    href: '',\n    sizeInfo: '',\n    aspectRatio: '',\n};\n\n/**\n * Hero carousel configurator component.\n * This component is responsible for displaying image teaser's configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst heroCarouselConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        componentConfigurator,\n    ],\n    /**\n     * Get dependencies\n     */\n    components: {\n        'action-button': actionButton,\n        'component-adder': componentAdder,\n        'component-actions': componentActions,\n    },\n    template: `<div class=\"cc-hero-carousel-configurator | {{ class }}\">\n        <section class=\"cc-hero-carousel-configurator__section\">\n            <h3 class=\"cc-hero-carousel-configurator__subtitle\">Mobile Devices Scenario</h3>\n            <div class=\"cc-hero-carousel-configurator__scenario-options\">\n                <ul class=\"cc-hero-carousel-configurator__scenario-options-list\">\n                    <li\n                        :class=\"{\n                            'cc-hero-carousel-configurator__option--selected': configuration.mobileDisplayVariant.id == optionId,\n                        }\"\n                        class=\"cc-hero-carousel-configurator__option\"\n                        v-for=\"(optionId, option) in scenarioOptions.mobileDisplayVariant\"\n                        @click=\"setOption('mobileDisplayVariant', optionId)\">\n                        <div class=\"cc-hero-carousel-configurator__option-wrapper\">\n                            <svg class=\"cc-hero-carousel-configurator__option-icon\">\n                                <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                            </svg>\n                        </div>\n                        <p class=\"cc-hero-carousel-configurator__option-name\">\n                            {{ option.name }}\n                        </p>\n                    </li>\n                </ul>\n            </div>\n        </section>\n\n        <h3 class=\"cc-hero-carousel-configurator__title\">Content</h3>\n\n        <component-adder class=\"cc-component-adder cc-component-adder--static\" v-show=\"!configuration.items.length\">\n            <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_important cc-action-button--type_icon-only | cc-component-adder__button | cc-hero-carousel-configurator__item-action-button\" @click=\"createNewHeroItem( 0 )\">\n                <svg class=\"cc-action-button__icon cc-action-button__icon--size_100 | cc-component-adder__button-icon\">\n                    <use xlink:href=\"#icon_plus\"></use>\n                </svg>\n            </button>\n        </component-adder>\n\n        <template v-for=\"item in configuration.items\">\n            <div class=\"cc-hero-carousel-configurator__item\" id=\"cc-hero-carousel-item-{{ $index }}\">\n                <component-adder class=\"cc-component-adder cc-component-adder--first\">\n                    <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_important cc-action-button--type_icon-only | cc-component-adder__button | cc-hero-carousel-configurator__item-action-button\" @click=\"createNewHeroItem( $index )\">\n                        <svg class=\"cc-action-button__icon cc-action-button__icon--size_100 | cc-component-adder__button-icon\">\n                            <use xlink:href=\"#icon_plus\"></use>\n                        </svg>\n                    </button>\n                </component-adder>\n\n                <div class=\"cc-hero-carousel-configurator__item-content\">\n                    <div v-bind:class=\"[ 'cc-hero-carousel-configurator__item-col-left', configuration.items[$index].image ? 'cc-hero-carousel-configurator__item-col-left--look-image-uploaded' : '' ]\">\n                        <div class=\"cc-hero-carousel-configurator__item-image-wrapper\">\n                            <img :src=\"configuration.items[$index].image\" class=\"cc-hero-carousel-configurator__item-image\" v-show=\"configuration.items[$index].image\">\n                            <input type=\"hidden\" v-model=\"configuration.items[$index].image\">\n                            <input type=\"hidden\" class=\"cc-hero-carousel-configurator__image-url\" id=\"hero-img-{{$index}}\">\n                            <svg class=\"cc-hero-carousel-configurator__item-image-placeholder\" v-show=\"!configuration.items[$index].image\">\n                                <use xlink:href=\"#icon_image-placeholder\"></use>\n                            </svg>\n\n                            <div class=\"cc-hero-carousel-configurator__item-actions\">\n                                <component-actions>\n                                    <template slot=\"cc-component-actions__buttons\">\n                                        <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_default cc-action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--up | cc-hero-carousel-configurator__item-action-button\" @click=\"moveHeroItemUp( $index )\" :class=\"[ isFirstHeroItem( $index ) ? 'cc-action-button--look_disabled' : '' ]\" :disabled=\"isFirstHeroItem( $index )\">\n                                            <svg class=\"cc-action-button__icon cc-action-button__icon--size_100\">\n                                                <use xlink:href=\"#icon_arrow-up\"></use>\n                                            </svg>\n                                        </button>\n                                        <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_default cc-action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--down | cc-hero-carousel-configurator__item-action-button\" @click=\"moveHeroItemDown( $index )\" :class=\"[ isLastHeroItem( $index ) ? 'cc-action-button--look_disabled' : '' ]\" :disabled=\"isLastHeroItem( $index )\">\n                                            <svg class=\"cc-action-button__icon cc-action-button__icon--size_100\">\n                                                <use xlink:href=\"#icon_arrow-down\"></use>\n                                            </svg>\n                                        </button>\n                                        <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_default cc-action-button--type_icon | cc-component-actions__button cc-component-actions__button--upload-image | cc-hero-carousel-configurator__item-action-button\" @click=\"getImageUploader( $index )\">\n                                                <svg class=\"cc-action-button__icon cc-action-button__icon--size_100\">\n                                                    <use xlink:href=\"#icon_upload-image\"></use>\n                                                </svg>\n                                                {{ configuration.items[$index].image ? imageUploadedText : noImageUploadedText }}\n                                        </button>\n                                        <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_default cc-action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--delete | cc-hero-carousel-configurator__item-action-button\" @click=\"deleteHeroItem( $index )\">\n                                            <svg class=\"cc-action-button__icon\">\n                                                <use xlink:href=\"#icon_trash-can\"></use>\n                                            </svg>\n                                        </button>\n                                    </template>\n                                </component-actions>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"cc-hero-carousel-configurator__item-col-right\">\n                        <div class=\"cc-input cc-input--group\">\n                            <div class=\"cc-input | cc-hero-carousel-configurator__item-form-element\">\n                                <label for=\"cfg-hc-item{{ $index }}-variant\" class=\"cc-input__label\">${$t( 'Display variant' )}:</label>\n                                <select name=\"cfg-hc-item{{ $index }}-variant\" class=\"cc-input__select | cc-hero-carousel-configurator__select\" id=\"cfg-hc-item{{ $index }}-variant\" v-model=\"configuration.items[$index].displayVariant\"\">\n                                    <template v-for=\"(idx, scenario) in imageTeasersContentPositions\">\n                                        <option value=\"variant-{{ idx + 1 }}\">${$t( '{{ scenario }}' )}</option>\n                                    </template>\n                                </select>\n                            </div>\n                            <div class=\"cc-input | cc-hero-carousel-configurator__item-form-element\">\n                                <label for=\"cfg-hc-item{{ $index }}-color-scheme\" class=\"cc-input__label\">${$t( 'Text color scheme' )}:</label>\n                                <select name=\"cfg-hc-item{{ $index }}-color-scheme\" class=\"cc-input__select | cc-hero-carousel-configurator__select\" id=\"cfg-hc-item{{ $index }}-color-scheme\" v-model=\"configuration.items[$index].colorScheme\">\n                                    <option value=\"light\">${$t( 'Light' )}</option>\n                                    <option value=\"dark\">${$t( 'Dark' )}</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"cc-input | cc-hero-carousel-configurator__item-form-element\">\n                            <label for=\"cfg-hc-item{{ $index }}-headline\" class=\"cc-input__label\">${$t( 'Headline' )}:</label>\n                            <input type=\"text\" v-model=\"configuration.items[$index].headline\" id=\"cfg-hc-item{{ $index }}-headline\" class=\"cc-input__input\">\n                        </div>\n                        <div class=\"cc-input | cc-hero-carousel-configurator__item-form-element\">\n                            <label for=\"cfg-hc-item{{ $index }}-subheadline\" class=\"cc-input__label\">${$t( 'Subheadline' )}:</label>\n                            <input type=\"text\" v-model=\"configuration.items[$index].subheadline\" id=\"cfg-hc-item{{ $index }}-subheadline\" class=\"cc-input__input\">\n                        </div>\n                        <div class=\"cc-input | cc-hero-carousel-configurator__item-form-element\">\n                            <label for=\"cfg-hc-item{{ $index }}-paragraph\" class=\"cc-input__label\">${$t( 'Paragraph' )}:</label>\n                            <textarea type=\"text\" v-model=\"configuration.items[$index].paragraph\" id=\"cfg-hc-item{{ $index }}-paragraph\" class=\"cc-input__textarea\"></textarea>\n                        </div>\n                        <div class=\"cc-input cc-input--group\">\n                            <div class=\"cc-input | cc-hero-carousel-configurator__item-form-element\">\n                                <label for=\"cfg-hc-item{{ $index }}-cta-label\" class=\"cc-input__label\">${$t( 'CTA label' )}:</label>\n                                <input type=\"text\" v-model=\"configuration.items[$index].ctaLabel\" id=\"cfg-hc-item{{ $index }}-cta-label\" class=\"cc-input__input\">\n                            </div>\n                            <div class=\"cc-input cc-input--type-addon | cc-hero-carousel-configurator__item-form-element\">\n                                <label for=\"hero-ctatarget-output-{{ $index }}\" class=\"cc-input__label\">${$t( 'CTA target link' )}:</label>\n                                <input type=\"text\" class=\"cc-input__input | cc-hero-carousel-configurator__cta-target-link\" v-model=\"configuration.items[$index].href\" id=\"hero-ctatarget-output-{{ $index }}\">\n                                <span class=\"cc-input__addon | cc-hero-carousel-configurator__widget-chooser-trigger\" @click=\"openCtaTargetModal( $index )\">\n                                    <svg class=\"cc-input__addon-icon\">\n                                        <use xlink:href=\"#icon_link\"></use>\n                                    </svg>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <component-adder class=\"cc-component-adder cc-component-adder--last\">\n                    <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_important cc-action-button--type_icon-only | cc-component-adder__button | cc-hero-carousel-configurator__item-action-button\" @click=\"createNewHeroItem( $index + 1 )\">\n                        <svg class=\"cc-action-button__icon cc-action-button__icon--size_100 | cc-component-adder__button-icon\">\n                            <use xlink:href=\"#icon_plus\"></use>\n                        </svg>\n                    </button>\n                </component-adder>\n            </div>\n        </template>\n\n        <div class=\"cc-hero-carousel-configurator__modal\" v-el:error-modal></div>\n    </div>`,\n    props: {\n        /*\n         * Single's component configuration\n         */\n        configuration: {\n            type: Object,\n            default(): any {\n                return {\n                    mobileDisplayVariant: {},\n                    items: [JSON.parse(JSON.stringify(heroItemDataPattern))],\n                };\n            },\n        },\n        /* get assets for displaying component images */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n        /* Obtain base-url for the image uploader */\n        uploaderBaseUrl: {\n            type: String,\n            default: '',\n        },\n        /* Obtain image endpoint to place permanent url for uploaded images */\n        imageEndpoint: {\n            type: String,\n            default: '',\n        },\n        /* Obtain admin url */\n        adminPrefix: {\n            type: String,\n            default: 'admin',\n        },\n        /* Obtain content-constructor's config file */\n        ccConfig: {\n            type: Object,\n            default(): any {\n                return {};\n            },\n        },\n    },\n    computed: {\n        imageTeasersContentPositions: function(): object {\n            const data: object = this.ccConfig.image_teasers_content_positions;\n            return Object.keys(data).map(key => (<any>data)[key]);\n        },\n    },\n    data(): any {\n        return {\n            imageUploadedText: $t('Change'),\n            noImageUploadedText: $t('Upload'),\n            scenarioOptions: {\n                // Mobile layout scenario elements.\n                mobileDisplayVariant: {\n                    'list': {\n                        name: 'Large teaser',\n                        iconId: 'ml_col',\n                    },\n                    'slider': {\n                        name: 'Slider',\n                        iconId: 'ml_slider',\n                    },\n                    'hidden': {\n                        name: 'Hidden',\n                        iconId: 'ml_hidden',\n                    },\n                },\n            },\n        };\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'component-configurator__save'(): void {\n            //this.cleanupConfiguration();\n            this.onSave();\n        },\n    },\n    methods: {\n        setOption(optionCategory: string, optionId: string): void {\n            this.configuration[optionCategory] = this.scenarioOptions[optionCategory][optionId];\n            this.configuration[optionCategory].id = optionId;\n        },\n        /* Opens M2's built-in image manager modal\n         * Manages all images: image upload from hdd, select image that was already uploaded to server\n         * @param index {number} - index of image of hero item\n         */\n        getImageUploader(index: number): void {\n            MediabrowserUtility.openDialog(`${this.uploaderBaseUrl}target_element_id/hero-img-${index}/`,\n                'auto',\n                'auto',\n                $t('Insert File...'),\n                {\n                    closed: true,\n                },\n            );\n        },\n\n        /* Listener for image uploader\n         * Since Magento does not provide any callback after image has been chosen\n         * we have to watch for target where decoded url is placed\n         */\n        imageUploadListener(): void {\n            const component: any = this;\n            let isAlreadyCalled: boolean = false;\n\n            // jQuery has to be used, for some reason native addEventListener doesn't catch change of input's value\n            $(document).on('change', '.cc-hero-carousel-configurator__image-url', (event: Event): void => {\n                if (!isAlreadyCalled) {\n                    isAlreadyCalled = true;\n                    component.onImageUploaded(event.target);\n                    setTimeout((): void => {\n                        isAlreadyCalled = false;\n                    }, 100);\n                }\n            });\n        },\n\n        /* Action after image was uploaded\n         * URL is encoded, so strip it and decode Base64 to get {{ media url=\"...\"}} format\n         * which will go to the items.image and will be used to display image on front end\n         * @param input { object } - input with raw image path which is used in admin panel\n         */\n        onImageUploaded(input: any): void {\n            const _this: any = this;\n            const itemIndex: any = input.id.substr(input.id.lastIndexOf('-') + 1);\n            const encodedImage: any = input.value.match('___directive\\/([a-zA-Z0-9]*)')[1];\n            const imgEndpoint: string = this.imageEndpoint.replace('{/encoded_image}', encodedImage);\n\n            this.configuration.items[itemIndex].decodedImage = Base64 ? Base64.decode(encodedImage) : window.atob(encodedImage);\n\n            const img: any = new Image();\n            img.onload = function(): void {\n                const ar: string = _this.getAspectRatio(img.naturalWidth, img.naturalHeight);\n                _this.configuration.items[itemIndex].image = img.getAttribute('src');\n                _this.configuration.items[itemIndex].sizeInfo = `${img.naturalWidth}x${img.naturalHeight}px (${ar})`;\n                _this.configuration.items[itemIndex].aspectRatio = ar;\n                setTimeout((): void => {\n                    _this.checkImageSizes();\n                    _this.onChange();\n                }, 400);\n            };\n            img.src = imgEndpoint;\n        },\n        /* Opens modal with M2 built-in widget chooser\n         * @param index {number} - index of teaser item to know where to place output of widget chooser\n         */\n        openCtaTargetModal(index: number): void {\n            widgetTools.openDialog(`${window.location.origin}/${this.adminPrefix}/admin/widget/index/filter_widgets/Link/widget_target_id/hero-ctatarget-output-${index}`);\n            this.wWidgetListener(index);\n        },\n        /* Sets listener for widget chooser\n         * It triggers component.onChange to update component's configuration\n         * after value of item.href is changed\n         */\n        widgetSetListener(): void {\n            $('.cc-hero-carousel-configurator__cta-target-link').on('change', (): void => {\n                this.onChange();\n            });\n        },\n        /*\n         * Check if widget chooser is loaded. If not, wait for it, if yes:\n         * Override default onClick for \"Insert Widget\" button in widget's modal window\n         * to clear input's value before inserting new one\n         * @param {number} index Hero item's index in array.\n         */\n        wWidgetListener(itemIndex: number): void {\n            if (typeof wWidget !== 'undefined' && widgetTools.dialogWindow[0].innerHTML !== '') {\n                const button: any = widgetTools.dialogWindow[0].querySelector('#insert_button');\n\n                button.onclick = null;\n                button.addEventListener('click', (): void => {\n                    this.configuration.items[itemIndex].href = '';\n                    wWidget.insertWidget();\n                });\n            } else {\n                window.setTimeout((): void => {\n                    this.wWidgetListener(itemIndex);\n                }, 300);\n            }\n        },\n        /**\n         * Creates new hero item and adds it to a specified index.\n         * @param {number} index New component's index in components array.\n         */\n        createNewHeroItem(index: number): void {\n            this.configuration.items.splice(index, 0, JSON.parse(JSON.stringify(heroItemDataPattern)));\n            this.onChange();\n        },\n        /**\n         * Moves hero item under given index up by swaping it with previous element.\n         * @param {number} index Hero item's index in array.\n         */\n        moveHeroItemUp(index: number): void {\n            if (index > 0) {\n                const $thisItem: any = $(`#m2c-hero-carousel-item-${ index }`);\n                const $prevItem: any = $(`#m2c-hero-carousel-item-${ index - 1 }`);\n\n                $thisItem.addClass('cc-hero-carousel-configurator__item--animating').css('transform', `translateY( ${ -Math.abs($prevItem.outerHeight(true)) }px)`);\n                $prevItem.addClass( 'cc-hero-carousel-configurator__item--animating' ).css( 'transform', `translateY(${ $thisItem.outerHeight(true) }px)`);\n\n                setTimeout((): void => {\n                    this.configuration.items.splice(index - 1, 0, this.configuration.items.splice(index, 1)[0]);\n                    this.onChange();\n                    $thisItem.removeClass('cc-hero-carousel-configurator__item--animating').css('transform', '');\n                    $prevItem.removeClass('cc-hero-carousel-configurator__item--animating').css('transform', '');\n                }, 400);\n            }\n        },\n        /**\n         * Moves hero item under given index down by swaping it with next element.\n         * @param {number} index Hero item's index in array.\n         */\n        moveHeroItemDown(index: number): void {\n            if (index < this.configuration.items.length - 1) {\n                const $thisItem: any = $(`#cc-hero-carousel-item-${ index }`);\n                const $nextItem: any = $(`#cc-hero-carousel-item-${ index + 1 }`);\n\n                $thisItem.addClass('cc-hero-carousel-configurator__item--animating').css('transform', `translateY(${ $nextItem.outerHeight(true) }px)`);\n                $nextItem.addClass('cc-hero-carousel-configurator__item--animating').css('transform', `translateY(${ -Math.abs($thisItem.outerHeight(true)) }px)`);\n\n                setTimeout((): void => {\n                    this.configuration.items.splice(index + 1, 0, this.configuration.items.splice(index, 1)[0]);\n                    this.onChange();\n                    $thisItem.removeClass('cc-hero-carousel-configurator__item--animating').css('transform', '');\n                    $nextItem.removeClass('cc-hero-carousel-configurator__item--animating').css('transform', '');\n                }, 400);\n            }\n        },\n        /**\n         * Tells if item with given index is the first hero item.\n         * @param  {number}  index Index of the hero item.\n         * @return {boolean}       If hero item is first in array.\n         */\n        isFirstHeroItem(index: number): boolean {\n            return index === 0;\n        },\n        /**\n         * Tells if hero item with given index is the last hero item.\n         * @param  {number}  index Index of the hero item.\n         * @return {boolean}       If hero item is last in array.\n         */\n        isLastHeroItem(index: number): boolean {\n            return index === this.configuration.items.length - 1;\n        },\n        /* Removes hero item after Delete button is clicked\n         * and triggers hero item's onChange to update it's configuration\n         * @param index {number} - index of hero item to remove\n         */\n        deleteHeroItem(index: number): void {\n            const component: any = this;\n\n            confirm({\n                content: $t('Are you sure you want to delete this item?'),\n                actions: {\n                    confirm(): void {\n                        component.configuration.items.splice(index, 1);\n                        component.onChange();\n                    },\n                },\n            });\n        },\n        /* Cleans configuration for M2C content constructor after Saving component\n         * All empty hero items has to be removed to not get into configuration object\n         */\n        cleanupConfiguration(): void {\n            const filteredArray: any = this.configuration.items.filter((item: any): any => item.image !== '');\n            this.configuration.items = filteredArray;\n            this.onChange();\n        },\n        /* Checks if images are all the same size\n         * If not - displays error by firing up this.displayImageSizeMismatchError()\n         * @param images {array} - array of all uploaded images\n         */\n        checkImageSizes(): boolean {\n            const itemsToCheck = JSON.parse(JSON.stringify(this.configuration.items)).filter((item: any): boolean => {\n                return Boolean(item.aspectRatio); // Filter out items without aspect ratio set yet.\n            });\n\n            for (let i: number = 0; i < itemsToCheck.length; i++) {\n                if (itemsToCheck[i].aspectRatio !== itemsToCheck[0].aspectRatio) {\n                    alert({\n                        title: $t('Warning'),\n                        content: $t('Images you have uploaded have different aspect ratio. This may cause this component to display wrong. We recommend to keep the same aspect ratio for all uploaded images.'),\n                    });\n                    return false;\n                }\n            }\n            return true;\n        },\n        /* Returns greatest common divisor for 2 numbers\n         * @param a {number}\n         * @param b {number}\n         * @return {number} - greatest common divisor\n         */\n        getGreatestCommonDivisor(a: number, b: number): number {\n            if (!b) {\n                return a;\n            }\n\n            return this.getGreatestCommonDivisor(b, a % b);\n        },\n        /* Returns Aspect ratio for 2 numbers based on GDC algoritm (greatest common divisor)\n         * @param a {number}\n         * @param b {number}\n         * @return {number} - greatest common divisor\n         */\n        getAspectRatio(a: number, b: number): string {\n            let c: number = this.getGreatestCommonDivisor(a, b);\n\n            return `${(a / c)}:${(b / c)}`;\n        },\n    },\n    ready(): void {\n        this.imageUploadListener();\n        this.widgetSetListener();\n\n        if (!this.configuration.mobileDisplayVariant.id) {\n            $('.cc-hero-carousel-configurator__option:first-child').click();\n        }\n    },\n};\n\nexport default heroCarouselConfigurator;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\nimport alert from 'Magento_Ui/js/modal/alert';\nimport confirm from 'Magento_Ui/js/modal/confirm';\n\nimport actionButton from '../../../utils/action-button/action-button';\nimport componentActions from '../../../utils/component-actions/component-actions';\nimport componentAdder from '../../../utils/component-adder/component-adder';\n\nimport componentConfigurator from '../../_component-configurator/component-configurator';\n\nconst teaserItemPrototype: any = {\n    image: '',\n    decodedImage: '',\n    displayVariant: '1',\n    colorScheme: 'light',\n    headline: '',\n    subheadline: '',\n    paragraph: '',\n    ctaLabel: $t( 'More' ),\n    href: '',\n    sizeInfo: '',\n    aspectRatio: '',\n};\n\n/**\n * Image teaser configurator component.\n * This component is responsible for displaying image teaser's configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst imageTeaserConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        componentConfigurator,\n    ],\n    components: {\n        'action-button': actionButton,\n        'component-adder': componentAdder,\n        'component-actions': componentActions,\n    },\n    template: `<div class=\"cc-image-teaser-configurator {{ classes }} | {{ mix }}\" {{ attributes }}>\n        <section class=\"cc-image-teaser-configurator__section\">\n            <h3 class=\"cc-image-teaser-configurator__subtitle\">Teaser Width</h3>\n            <div class=\"cc-image-teaser-configurator__scenario-options\">\n                <div\n                    :class=\"{\n                        'cc-image-teaser-configurator__option--selected': configuration.currentScenario.teaserWidth.id == optionId,\n                        'cc-image-teaser-configurator__option--disabled': option.disabled,\n                    }\"\n                    class=\"cc-image-teaser-configurator__option\"\n                    v-for=\"(optionId, option) in scenarioOptions.teaserWidth\"\n                    @click=\"!option.disabled && toggleOption('teaserWidth', optionId)\">\n                    <div class=\"cc-image-teaser-configurator__option-wrapper\">\n                        <svg class=\"cc-image-teaser-configurator__option-icon\">\n                            <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                        </svg>\n                    </div>\n                    <p class=\"cc-image-teaser-configurator__option-name\">\n                        {{ option.name }}\n                    </p>\n                </div>\n            </div>\n\n        </section>\n        <section class=\"cc-image-teaser-configurator__section\">\n            <h3 class=\"cc-image-teaser-configurator__subtitle\">Desktop Layout</h3>\n            <div class=\"cc-image-teaser-configurator__scenario-options\">\n                <div\n                    :class=\"{\n                        'cc-image-teaser-configurator__option--selected': configuration.currentScenario.desktopLayout.id == optionId,\n                        'cc-image-teaser-configurator__option--disabled': option.disabled,\n                    }\"\n                    class=\"cc-image-teaser-configurator__option\"\n                    v-for=\"(optionId, option) in scenarioOptions.desktopLayout\"\n                    @click=\"!option.disabled && toggleOption('desktopLayout', optionId)\">\n                    <div class=\"cc-image-teaser-configurator__option-wrapper\">\n                        <svg class=\"cc-image-teaser-configurator__option-icon\">\n                            <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                        </svg>\n                    </div>\n                    <p class=\"cc-image-teaser-configurator__option-name\">\n                        {{ option.name }}\n                    </p>\n                </div>\n            </div>\n        </section>\n        <section class=\"cc-image-teaser-configurator__section\">\n            <h3 class=\"cc-image-teaser-configurator__subtitle\">Text Positioning</h3>\n            <div class=\"cc-image-teaser-configurator__scenario-options\">\n                <div\n                    :class=\"{\n                        'cc-image-teaser-configurator__option--selected': configuration.currentScenario.textPositioning.id == optionId,\n                        'cc-image-teaser-configurator__option--disabled': option.disabled,\n                    }\"\n                    class=\"cc-image-teaser-configurator__option\"\n                    v-for=\"(optionId, option) in scenarioOptions.textPositioning\"\n                    @click=\"!option.disabled && toggleOption('textPositioning', optionId)\">\n                    <div class=\"cc-image-teaser-configurator__option-wrapper\">\n                        <svg class=\"cc-image-teaser-configurator__option-icon\">\n                            <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                        </svg>\n                    </div>\n                    <p class=\"cc-image-teaser-configurator__option-name\">\n                        {{ option.name }}\n                    </p>\n                </div>\n            </div>\n        </section>\n        <section class=\"cc-image-teaser-configurator__section\">\n            <h3 class=\"cc-image-teaser-configurator__subtitle\">Mobile Layout</h3>\n            <div class=\"cc-image-teaser-configurator__scenario-options\">\n                <div\n                    :class=\"{\n                        'cc-image-teaser-configurator__option--selected': configuration.currentScenario.mobileLayout.id == optionId,\n                        'cc-image-teaser-configurator__option--disabled': option.disabled,\n                    }\"\n                    class=\"cc-image-teaser-configurator__option\"\n                    v-for=\"(optionId, option) in scenarioOptions.mobileLayout\"\n                    @click=\"!option.disabled && toggleOption('mobileLayout', optionId)\">\n                    <div class=\"cc-image-teaser-configurator__option-wrapper\">\n                        <svg class=\"cc-image-teaser-configurator__option-icon\">\n                            <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                        </svg>\n                    </div>\n                    <p class=\"cc-image-teaser-configurator__option-name\">\n                        {{ option.name }}\n                    </p>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"cc-image-teaser-configurator__section\">\n            <component-adder class=\"cc-component-adder cc-component-adder--static\" v-show=\"!configuration.items.length\">\n                <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_important cc-action-button--type_icon-only | cc-component-adder__button | cc-image-teaser-configurator__item-action-button\" @click=\"createTeaserItem( 0 )\">\n                    <svg class=\"cc-action-button__icon cc-action-button__icon--size_100 | cc-component-adder__button-icon\">\n                        <use v-bind=\"{ 'xlink:href': '#icon_plus' }\"></use>\n                    </svg>\n                </button>\n            </component-adder>\n\n            <template v-for=\"item in configuration.items\">\n                <div class=\"cc-image-teaser-configurator__item\" id=\"cc-image-teaser-item-{{ $index }}\">\n                    <component-adder class=\"cc-component-adder cc-component-adder--first\" v-if=\"canAddTeaser()\">\n                        <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_important cc-action-button--type_icon-only | cc-image-teaser-configurator__item-action-button\" @click=\"createTeaserItem( $index )\">\n                            <svg class=\"cc-action-button__icon cc-action-button__icon--size_300\">\n                                <use xlink:href=\"#icon_plus\"></use>\n                            </svg>\n                        </button>\n                    </component-adder>\n\n                    <div class=\"cc-image-teaser-configurator__item-content\">\n                        <div v-bind:class=\"[ 'cc-image-teaser-configurator__item-col-left', configuration.items[$index].image ? 'cc-image-teaser-configurator__item-col-left--look-image-uploaded' : '' ]\">\n                            <div class=\"cc-image-teaser-configurator__item-image-wrapper\">\n                                <img :src=\"configuration.items[$index].image\" class=\"cc-image-teaser-configurator__item-image\" v-show=\"configuration.items[$index].image\">\n                                <input type=\"hidden\" v-model=\"configuration.items[$index].image\">\n                                <input type=\"hidden\" class=\"cc-image-teaser-configurator__image-url\" id=\"image-teaser-img-{{$index}}\">\n                                <svg class=\"cc-image-teaser-configurator__item-image-placeholder\" v-show=\"!configuration.items[$index].image\">\n                                    <use xlink:href=\"#icon_image-placeholder\"></use>\n                                </svg>\n\n                                <div class=\"cc-image-teaser-configurator__item-actions\">\n                                    <component-actions>\n                                        <template slot=\"cc-component-actions__buttons\">\n                                            <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_default cc-action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--up | cc-image-teaser-configurator__item-action-button\" @click=\"moveImageTeaserUp( $index )\" :class=\"[ isFirstImageTeaser( $index ) ? 'cc-action-button--look_disabled' : '' ]\" :disabled=\"isFirstImageTeaser( $index )\">\n                                                <svg class=\"cc-action-button__icon cc-action-button__icon--size_100\">\n                                                    <use xlink:href=\"#icon_arrow-up\"></use>\n                                                </svg>\n                                            </button>\n                                            <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_default cc-action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--down | cc-image-teaser-configurator__item-action-button\" @click=\"moveImageTeaserDown( $index )\" :class=\"[ isLastImageTeaser( $index ) ? 'cc-action-button--look_disabled' : '' ]\" :disabled=\"isLastImageTeaser( $index )\">\n                                                <svg class=\"cc-action-button__icon cc-action-button__icon--size_100\">\n                                                    <use xlink:href=\"#icon_arrow-down\"></use>\n                                                </svg>\n                                            </button>\n                                            <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_default cc-action-button--type_icon | cc-component-actions__button cc-component-actions__button--upload-image | cc-image-teaser-configurator__item-action-button\" @click=\"getImageUploader( $index )\">\n                                                    <svg class=\"cc-action-button__icon cc-action-button__icon--size_100\">\n                                                        <use xlink:href=\"#icon_upload-image\"></use>\n                                                    </svg>\n                                                    {{ configuration.items[$index].image ? imageUploadedText : noImageUploadedText }}\n                                            </button>\n                                            <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_default cc-action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--delete | cc-image-teaser-configurator__item-action-button\" @click=\"deleteTeaserItem( $index )\">\n                                                <svg class=\"cc-action-button__icon\">\n                                                    <use xlink:href=\"#icon_trash-can\"></use>\n                                                </svg>\n                                            </button>\n                                        </template>\n                                    </component-actions>\n                                </div>\n\n                            </div>\n                        </div>\n                        <div class=\"cc-image-teaser-configurator__item-col-right\">\n                            <div class=\"cc-input cc-input--group\">\n                                <div class=\"cc-input | cc-image-teaser-configurator__item-form-element\">\n                                    <label for=\"cfg-it-item{{ $index }}-variant\" class=\"cc-input__label\">${$t( 'Display variant' )}:</label>\n                                    <select name=\"cfg-it-item{{ $index }}-variant\" class=\"cc-input__select\" id=\"cfg-it-item{{ $index }}-variant\" v-model=\"configuration.items[$index].displayVariant\">\n                                        <template v-for=\"(idx, scenario) in imageTeasersContentPositions\">\n                                            <option value=\"{{ idx + 1 }}\">${$t( '{{ scenario }}' )}</option>\n                                        </template>\n                                    </select>\n                                </div>\n                                <div class=\"cc-input | cc-image-teaser-configurator__item-form-element\">\n                                    <label for=\"cfg-it-item{{ $index }}-color-scheme\" class=\"cc-input__label\">${$t( 'Text color scheme' )}:</label>\n                                    <select name=\"cfg-it-item{{ $index }}-color-scheme\" class=\"cc-input__select\" id=\"cfg-it-item{{ $index }}-color-scheme\" v-model=\"configuration.items[$index].colorScheme\">\n                                        <option value=\"light\">${$t( 'Light' )}</option>\n                                        <option value=\"dark\">${$t( 'Dark' )}</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"cc-input | cc-image-teaser-configurator__item-form-element\">\n                                <label for=\"cfg-hc-item{{ $index }}-headline\" class=\"cc-input__label\">${$t( 'Headline' )}:</label>\n                                <input type=\"text\" v-model=\"configuration.items[$index].headline\" id=\"cfg-hc-item{{ $index }}-headline\" class=\"cc-input__input\">\n                            </div>\n                            <div class=\"cc-input | cc-image-teaser-configurator__item-form-element\">\n                                <label for=\"cfg-hc-item{{ $index }}-subheadline\" class=\"cc-input__label\">${$t( 'Subheadline' )}:</label>\n                                <input type=\"text\" v-model=\"configuration.items[$index].subheadline\" id=\"cfg-hc-item{{ $index }}-subheadline\" class=\"cc-input__input\">\n                            </div>\n                            <div class=\"cc-input | cc-image-teaser-configurator__item-form-element\">\n                                <label for=\"cfg-hc-item{{ $index }}-paragraph\" class=\"cc-input__label\">${$t( 'Paragraph' )}:</label>\n                                <textarea type=\"text\" v-model=\"configuration.items[$index].paragraph\" id=\"cfg-hc-item{{ $index }}-paragraph\" class=\"cc-input__textarea\"></textarea>\n                            </div>\n                            <div class=\"cc-input cc-input--group\">\n                                <div class=\"cc-input | cc-image-teaser-configurator__item-form-element\">\n                                    <label for=\"cfg-hc-item{{ $index }}-cta-label\" class=\"cc-input__label\">${$t( 'CTA label' )}:</label>\n                                    <input type=\"text\" v-model=\"configuration.items[$index].ctaLabel\" id=\"cfg-hc-item{{ $index }}-cta-label\" class=\"cc-input__input\">\n                                </div>\n                                <div class=\"cc-input cc-input--type-addon | cc-image-teaser-configurator__item-form-element\">\n                                    <label for=\"image-teaser-ctatarget-output-{{ $index }}\" class=\"cc-input__label\">${$t( 'CTA target link' )}:</label>\n                                    <input type=\"text\" class=\"cc-input__input | cc-image-teaser-configurator__cta-target-link\" v-model=\"configuration.items[$index].href\" id=\"image-teaser-ctatarget-output-{{ $index }}\">\n                                    <span class=\"cc-input__addon | cc-image-teaser-configurator__widget-chooser-trigger\" @click=\"openCtaTargetModal( $index )\">\n                                        <svg class=\"cc-input__addon-icon\">\n                                            <use xlink:href=\"#icon_link\"></use>\n                                        </svg>\n                                    </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <component-adder class=\"cc-component-adder cc-component-adder--last\" v-if=\"configuration.items.length && canAddTeaser()\">\n                        <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_important cc-action-button--type_icon-only | cc-image-teaser-configurator__item-action-button\" @click=\"createTeaserItem( $index + 1 )\">\n                            <svg class=\"cc-action-button__icon cc-action-button__icon--size_300\">\n                                <use xlink:href=\"#icon_plus\"></use>\n                            </svg>\n                        </button>\n                    </component-adder>\n                </div>\n            </template>\n        </section>\n    </div>`,\n    data(): any {\n        return {\n            imageUploadedText: $t('Change'),\n            noImageUploadedText: $t('Upload'),\n            scenarioOptions: {\n                // Teaser width scenario elements.\n                teaserWidth: {\n                    'c': {\n                        name: 'Container width',\n                        iconId: 'tw_content-width',\n                        disabled: false,\n                        teasersLimit: true,\n                    },\n                    'w': {\n                        name: 'Window width',\n                        iconId: 'tw_window-width',\n                        disabled: false,\n                        teasersLimit: true,\n                    },\n                    'c-s': {\n                        name: 'Content width Slider',\n                        iconId: 'tw_content-slider',\n                        disabled: false,\n                        teasersLimit: false,\n                    },\n                    'w-s': {\n                        name: 'Window width Slider',\n                        iconId: 'tw_window-slider',\n                        disabled: false,\n                        teasersLimit: false,\n                    },\n                },\n                // Desktop layout scenario elements.\n                desktopLayout: {\n                    '1': {\n                        name: '1 in row',\n                        iconId: 'dl_1',\n                        disabled: false,\n                        teasersNum: 1,\n                    },\n                    '2': {\n                        name: '2 in row',\n                        iconId: 'dl_2',\n                        disabled: false,\n                        teasersNum: 2,\n                    },\n                    '3': {\n                        name: '3 in row',\n                        iconId: 'dl_3',\n                        disabled: false,\n                        teasersNum: 3,\n                    },\n                    '4': {\n                        name: '4 in row',\n                        iconId: 'dl_4',\n                        disabled: false,\n                        teasersNum: 4,\n                    },\n                    '6': {\n                        name: '6 in row',\n                        iconId: 'dl_6',\n                        disabled: false,\n                        teasersNum: 6,\n                    },\n                    '8': {\n                        name: '8 in row',\n                        iconId: 'dl_8',\n                        disabled: false,\n                        teasersNum: 8,\n                    },\n                },\n                // Text positioning scenario elements.\n                textPositioning: {\n                    'over': {\n                        name: 'Text over image',\n                        iconId: 'tl_over',\n                        disabled: false,\n                        textPosition: true,\n                    },\n                    'under': {\n                        name: 'Text below image',\n                        iconId: 'tl_under',\n                        disabled: false,\n                        textPosition: false,\n                    },\n                },\n\n                // Mobile layout scenario elements.\n                mobileLayout: {\n                    'large': {\n                        name: 'Large teaser',\n                        iconId: 'ml_col',\n                        disabled: false,\n                    },\n                    'slider': {\n                        name: 'Slider',\n                        iconId: 'ml_slider',\n                        disabled: false,\n                    },\n                    'row': {\n                        name: 'Teasers in row',\n                        iconId: 'ml_2-2',\n                        disabled: false,\n                    },\n                    'col': {\n                        name: 'Teasers in column',\n                        iconId: 'ml_col',\n                        disabled: false,\n                    },\n                    '1-2': {\n                        name: 'Big, two small',\n                        iconId: 'ml_1-2',\n                        disabled: false,\n                    },\n                    '2-2': {\n                        name: '2 in row, 2 rows',\n                        iconId: 'ml_2-2',\n                        disabled: false,\n                    },\n                    '1-2-1': {\n                        name: 'Big, two small, big',\n                        iconId: 'ml_1-2',\n                        disabled: false,\n                    },\n                    '2-2-2': {\n                        name: '2 in row, 3 rows',\n                        iconId: 'ml_2-2',\n                        disabled: false,\n                    },\n                },\n            },\n            availableScenarios: [\n                ['c', '1', 'over', ['large']],\n\n                ['c', '2', 'over', ['col', 'row', 'slider']],\n                ['c', '2', 'under', ['col']],\n\n                ['c', '3', 'over', ['col', 'slider', '1-2']],\n                ['c', '3', 'under', ['col']],\n\n                ['c', '4', 'over', ['2-2', 'slider', '1-2-1']],\n                ['c', '4', 'under', ['col']],\n\n                ['c', '6', 'over', ['2-2-2', 'slider']],\n                ['c', '6', 'under', ['2-2-2', 'slider']],\n                ['c', '8', 'under', ['slider']],\n\n                ['w', '1', 'over', ['large']],\n\n                ['w', '2', 'over', ['col', 'row', 'slider']],\n                ['w', '2', 'under', ['col']],\n\n                ['w', '3', 'over', ['col', 'slider', '1-2']],\n                ['w', '3', 'under', ['col']],\n\n                ['w', '4', 'over', ['2-2', 'slider', '1-2-1']],\n                ['w', '4', 'under', ['col']],\n\n                ['w-s', '2', 'over', ['slider']],\n                ['w-s', '2', 'under', ['slider']],\n\n                ['w-s', '3', 'over', ['slider']],\n                ['w-s', '3', 'under', ['slider']],\n\n                ['w-s', '4', 'over', ['slider']],\n                ['w-s', '4', 'under', ['slider']],\n\n                ['c-s', '1', 'over', ['slider']],\n\n                ['c-s', '2', 'over', ['slider']],\n                ['c-s', '2', 'under', ['slider']],\n\n                ['c-s', '3', 'over', ['slider']],\n                ['c-s', '3', 'under', ['slider']],\n\n                ['c-s', '4', 'over', ['slider']],\n                ['c-s', '4', 'under', ['slider']],\n\n                ['c-s', '6', 'under', ['slider']],\n\n                ['c-s', '8', 'under', ['slider']],\n            ],\n        };\n    },\n    props: {\n        /**\n         * Image teaser configuration\n         */\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    items: [JSON.parse(JSON.stringify(teaserItemPrototype))],\n                    ignoredItems: [],\n                    currentScenario: {\n                        teaserWidth: {},\n                        desktopLayout: {},\n                        textPositioning: {},\n                        mobileLayout: {},\n                    },\n                };\n            },\n        },\n        /* get assets for displaying component images */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n        /* Obtain base-url for the image uploader */\n        uploaderBaseUrl: {\n            type: String,\n            default: '',\n        },\n        /* Obtain image endpoint to place permanent url for uploaded images */\n        imageEndpoint: {\n            type: String,\n            default: '',\n        },\n        /* Obtain admin url */\n        adminPrefix: {\n            type: String,\n            default: 'admin',\n        },\n        /* Obtain content-constructor's config file */\n        ccConfig: {\n            type: Object,\n            default(): any {\n                return {};\n            },\n        },\n    },\n    computed: {\n        imageTeasersContentPositions: function(): object {\n            const data: object = this.ccConfig.image_teasers_content_positions;\n            return Object.keys(data).map(key => (<any>data)[key]);\n        },\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'component-configurator__save'(): void {\n            this.onSave();\n        },\n    },\n    created(): void {\n        if (this.configuration.ignoredItems === undefined) {\n            this.configuration.ignoredItems = [];\n        }\n    },\n    methods: {\n        _collectPossibleOptions(filteredScenarios: Array<Array<any>>): any {\n            const teaserWidthIndex: number = 0;\n            const desktopLayoutIndex: number = 1;\n            const textPositionIndex: number = 2;\n            const mobileLayoutsIndex: number = 3;\n            let possibleOptions: any = {\n                teaserWidth: {},\n                desktopLayout: {},\n                textPositioning: {},\n                mobileLayout: {},\n            };\n\n            filteredScenarios.forEach((filteredScenario: Array<any>) => {\n                possibleOptions.teaserWidth[filteredScenario[teaserWidthIndex]] = true;\n                possibleOptions.desktopLayout[filteredScenario[desktopLayoutIndex]] = true;\n                possibleOptions.textPositioning[filteredScenario[textPositionIndex]] = true;\n                filteredScenario[mobileLayoutsIndex].forEach((mobileLayout: string) => {\n                    possibleOptions.mobileLayout[mobileLayout] = true;\n                } );\n            } );\n\n            Object.keys(possibleOptions).forEach((scenarioElement: string): void => {\n                possibleOptions[scenarioElement] = Object.keys(possibleOptions[scenarioElement]);\n            });\n\n            return possibleOptions;\n        },\n\n        _findPossibleOptions(teaserWidth: string, desktopLayout: string, textPosition: string, mobileLayout: string): void {\n            const teaserWidthIndex: number = 0;\n            const desktopLayoutIndex: number = 1;\n            const textPositionIndex: number = 2;\n            const mobileLayoutsIndex: number = 3;\n            // Make a copy of available scenarios to prevent reference copying.\n            let filteredScenarios: Array<Array<string>> = JSON.parse(JSON.stringify(this.availableScenarios));\n\n            if (teaserWidth) {\n                filteredScenarios = filteredScenarios.filter((availableScenario: any) => {\n                    return availableScenario[teaserWidthIndex] === teaserWidth;\n                });\n            }\n\n            if (desktopLayout) {\n                filteredScenarios = filteredScenarios.filter((availableScenario: any) => {\n                    return availableScenario[desktopLayoutIndex] === desktopLayout;\n                });\n            }\n\n            if (textPosition) {\n                filteredScenarios = filteredScenarios.filter((availableScenario: any) => {\n                    return !textPosition || availableScenario[textPositionIndex] === textPosition;\n                });\n            }\n\n            if (mobileLayout) {\n                filteredScenarios = filteredScenarios.filter((availableScenario: any) => {\n                    return availableScenario[mobileLayoutsIndex].indexOf(mobileLayout) !== -1;\n                });\n                filteredScenarios = filteredScenarios.map((availableScenario: any) => {\n                    availableScenario[mobileLayoutsIndex] = [mobileLayout];\n                    return availableScenario;\n                });\n            }\n\n            return this._collectPossibleOptions(filteredScenarios);\n        },\n\n        toggleOption(optionCategory: string, optionId: string): void {\n            if (this.configuration.currentScenario[optionCategory].id) {\n                this.configuration.currentScenario[optionCategory] = {};\n            } else {\n                this.configuration.currentScenario[optionCategory] = this.scenarioOptions[optionCategory][optionId];\n                this.configuration.currentScenario[optionCategory].id = optionId;\n            }\n\n            this.togglePossibleOptions();\n            this.adjustVisibleItems();\n        },\n\n        adjustVisibleItems(): void {\n            const items: Array<TeaserItem> = this.configuration.items;\n            const itemsNumber: number = this.configuration.currentScenario.desktopLayout.teasersNum;\n            const itemsLimit: boolean = this.configuration.currentScenario.teaserWidth.teasersLimit;\n\n            if (itemsLimit && items.length > itemsNumber) {\n                const removedItems: Array<any> = items.splice(itemsNumber, items.length - itemsNumber);\n                this.configuration.ignoredItems = removedItems.concat(this.configuration.ignoredItems);\n            } else if (items.length < itemsNumber) {\n                items.concat(this.configuration.ignoredItems.splice(0, itemsNumber - items.length));\n\n                for (let addedItems: number = 0; addedItems < itemsNumber - items.length; addedItems++) {\n                    items.push(JSON.parse(JSON.stringify(teaserItemPrototype)));\n                }\n            }\n        },\n\n        togglePossibleOptions(): void {\n            const currentScenario: any = this.configuration.currentScenario;\n            const possibleOptions: any = this._findPossibleOptions(\n                currentScenario.teaserWidth.id,\n                currentScenario.desktopLayout.id,\n                currentScenario.textPositioning.id,\n                currentScenario.mobileLayout.id,\n            );\n\n            Object.keys(this.scenarioOptions).forEach((optionCategory: string) => {\n                Object.keys(this.scenarioOptions[optionCategory]).forEach((scenarioOptionId: string) => {\n                    this.scenarioOptions[optionCategory][scenarioOptionId].disabled = possibleOptions[optionCategory].indexOf(scenarioOptionId) === -1;\n                } );\n            } );\n        },\n\n        canAddTeaser(): boolean {\n            const items: Array<TeaserItem> = this.configuration.items;\n            const itemsLimit: number = this.configuration.currentScenario.teaserWidth.teasersLimit;\n\n            return (!itemsLimit || items.length < itemsLimit);\n        },\n\n        /* Opens M2's built-in image manager modal.\n         * Manages all images: image upload from hdd, select image that was already uploaded to server.\n         * @param index {number} - index of image of image teaser.\n         */\n        getImageUploader(index: number): void {\n            MediabrowserUtility.openDialog(`${this.uploaderBaseUrl}target_element_id/image-teaser-img-${index}/`,\n                'auto',\n                'auto',\n                $t('Insert File...'),\n                {\n                    closed: true,\n                },\n            );\n        },\n\n        /* Listener for image uploader\n         * Since Magento does not provide any callback after image has been chosen\n         * we have to watch for target where decoded url is placed\n         */\n        imageUploadListener(): void {\n            const component: any = this;\n            let isAlreadyCalled: boolean = false;\n\n            // jQuery has to be used, for some reason native addEventListener doesn't catch change of input's value\n            $(document).on('change', '.cc-image-teaser-configurator__image-url', (event: Event): void => {\n                if (!isAlreadyCalled) {\n                    isAlreadyCalled = true;\n                    component.onImageUploaded(event.target);\n                    setTimeout((): void => {\n                        isAlreadyCalled = false;\n                    }, 100);\n                }\n            } );\n        },\n\n        /* Action after image was uploaded\n         * URL is encoded, so strip it and decode Base64 to get {{ media url=\"...\"}} format\n         * which will go to the items.image and will be used to display image on front end\n         * @param input { object } - input with raw image path which is used in admin panel\n         */\n        onImageUploaded(input: any): void {\n            const _this: any = this;\n            const itemIndex: any = input.id.substr(input.id.lastIndexOf('-') + 1);\n            const encodedImage: any = input.value.match('___directive\\/([a-zA-Z0-9]*)')[1];\n            const imgEndpoint: string = this.imageEndpoint.replace('{/encoded_image}', encodedImage);\n\n            this.configuration.items[itemIndex].decodedImage = Base64 ? Base64.decode(encodedImage) : window.atob(encodedImage);\n\n            const img: any = new Image();\n            img.onload = function(): void {\n                const ar: string = _this.getAspectRatio(img.naturalWidth, img.naturalHeight);\n                _this.configuration.items[itemIndex].image = img.getAttribute('src');\n                _this.configuration.items[itemIndex].sizeInfo = `${img.naturalWidth}x${img.naturalHeight}px (${ar})`;\n                _this.configuration.items[itemIndex].aspectRatio = ar;\n\n                setTimeout((): void => {\n                    _this.checkImageSizes();\n                    _this.onChange();\n                }, 400);\n            };\n            img.src = imgEndpoint;\n        },\n\n        /* Creates another teaser item using teaserItemPrototype */\n        createTeaserItem(index: number): void {\n            this.configuration.items.splice(index, 0, JSON.parse(JSON.stringify(teaserItemPrototype)));\n            this.onChange();\n        },\n\n        /**\n         * Moves image teaser item under given index up by swaping it with previous element.\n         * @param {number} index Image teaser's index in array.\n         */\n        moveImageTeaserUp(index: number): void {\n            if (index > 0) {\n                const $thisItem: any = $(`#cc-image-teaser-item-${ index }`);\n                const $prevItem: any = $(`#cc-image-teaser-item-${ index - 1 }`);\n\n                $thisItem.addClass('cc-image-teaser-configurator__item--animating').css('transform', `translateY(${ -Math.abs($prevItem.outerHeight(true)) }px)`);\n                $prevItem.addClass('cc-image-teaser-configurator__item--animating').css('transform', `translateY(${ $thisItem.outerHeight(true) }px )`);\n\n                setTimeout((): void => {\n                    this.configuration.items.splice(index - 1, 0, this.configuration.items.splice(index, 1)[0]);\n                    this.onChange();\n                    $thisItem.removeClass('cc-image-teaser-configurator__item--animating').css('transform', '');\n                    $prevItem.removeClass('cc-image-teaser-configurator__item--animating').css('transform', '');\n                }, 400);\n            }\n        },\n        /**\n         * Moves image teaser item under given index down by swaping it with next element.\n         * @param {number} index Image teaser's index in array.\n         */\n        moveImageTeaserDown(index: number): void {\n            if (index < this.configuration.items.length - 1) {\n                const $thisItem: any = $(`#cc-image-teaser-item-${ index }`);\n                const $nextItem: any = $(`#cc-image-teaser-item-${ index + 1 }`);\n\n                $thisItem.addClass('cc-image-teaser-configurator__item--animating').css('transform', `translateY(${ $nextItem.outerHeight(true) }px)`);\n                $nextItem.addClass('cc-image-teaser-configurator__item--animating' ).css('transform', `translateY(${ -Math.abs($thisItem.outerHeight(true)) }px)`);\n\n                setTimeout((): void => {\n                    this.configuration.items.splice(index + 1, 0, this.configuration.items.splice(index, 1)[0]);\n                    this.onChange();\n                    $thisItem.removeClass('cc-image-teaser-configurator__item--animating').css('transform', '');\n                    $nextItem.removeClass('cc-image-teaser-configurator__item--animating').css('transform', '');\n                }, 400);\n            }\n        },\n        /**\n         * Tells if item with given index is the first image teaser.\n         * @param  {number}  index Index of the image teaser.\n         * @return {boolean}       If image teaser is first in array.\n         */\n        isFirstImageTeaser(index: number): boolean {\n            return index === 0;\n        },\n        /**\n         * Tells if image teaser with given index is the last image teaser.\n         * @param  {number}  index Index of the image teaser.\n         * @return {boolean}       If image teaser is last in array.\n         */\n        isLastImageTeaser(index: number): boolean {\n            return index === this.configuration.items.length - 1;\n        },\n\n        /* Opens modal with M2 built-in widget chooser\n         * @param index {number} - index of teaser item to know where to place output of widget chooser\n         */\n        openCtaTargetModal(index: number): void {\n            widgetTools.openDialog(`${window.location.origin}/${this.adminPrefix}/admin/widget/index/filter_widgets/Link/widget_target_id/image-teaser-ctatarget-output-${index}`);\n\n            this.wWidgetListener(index);\n        },\n        /* Sets listener for widget chooser\n         * It triggers component.onChange to update component's configuration\n         * after value of item.ctaTarget is changed\n         */\n        widgetSetListener(): void {\n            $('.cc-image-teaser-configurator__cta-target-link').on('change', (): void => {\n                this.onChange();\n            });\n        },\n        /*\n         * Check if widget chooser is loaded. If not, wait for it, if yes:\n         * Override default onClick for \"Insert Widget\" button in widget's modal window\n         * to clear input's value before inserting new one\n         * @param {number} index Hero item's index in array.\n         */\n        wWidgetListener(itemIndex: number): void {\n            if (typeof wWidget !== 'undefined' && widgetTools.dialogWindow[0].innerHTML !== '') {\n                const button: any = widgetTools.dialogWindow[0].querySelector('#insert_button');\n\n                button.onclick = null;\n                button.addEventListener('click', (): void => {\n                    this.configuration.items[itemIndex].href = '';\n                    wWidget.insertWidget();\n                } );\n            } else {\n                window.setTimeout((): void => {\n                    this.wWidgetListener(itemIndex);\n                }, 300);\n            }\n        },\n\n        /* Checks if it's possible to display Delete button\n         * This function is used in component's template\n         * Button can be displayed only on items that have item uploaded\n         * @param index {number} - index of teaser item\n         * @returns Boolean\n         */\n        isPossibleToDelete(index: number): Boolean {\n            if ((index !== 0 || this.configuration.items.length > 1) && this.configuration.items[index].image !== '') {\n                return true;\n            }\n\n            return false;\n        },\n\n        /* Removes teaser item after Delete button is clicked\n         * and triggers component's onChange to update it's configuration\n         * @param index {number} - index of teaser item to remove\n         */\n        deleteTeaserItem(index: number): void {\n            const component: any = this;\n\n            confirm({\n                content: $t('Are you sure you want to delete this item?'),\n                actions: {\n                    confirm(): void {\n                        component.configuration.items.splice(index, 1);\n                        component.onChange();\n                    }\n                },\n            });\n        },\n\n        /* Checks if images are all the same size\n         * If not - displays error by firing up this.displayImageSizeMismatchError()\n         * @param images {array} - array of all uploaded images\n         */\n        checkImageSizes(): boolean {\n            const itemsToCheck = JSON.parse(JSON.stringify(this.configuration.items)).filter((item: any): boolean => {\n                return Boolean(item.aspectRatio); // Filter out items without aspect ratio set yet.\n            });\n\n            for (let i: number = 0; i < itemsToCheck.length; i++) {\n                if (itemsToCheck[i].aspectRatio !== itemsToCheck[0].aspectRatio) {\n                    alert({\n                        title: $t('Warning'),\n                        content: $t('Images you have uploaded have different aspect ratio. This may cause this component to display wrong. We recommend to keep the same aspect ratio for all uploaded images.'),\n                    });\n                    return false;\n                }\n            }\n            return true;\n        },\n        /* Returns greatest common divisor for 2 numbers\n         * @param a {number}\n         * @param b {number}\n         * @return {number} - greatest common divisor\n         */\n        getGreatestCommonDivisor(a: number, b: number): number {\n            if (!b) {\n                return a;\n            }\n\n            return this.getGreatestCommonDivisor(b, a % b);\n        },\n        /* Returns Aspect ratio for 2 numbers based on GDC algoritm (greatest common divisor)\n         * @param a {number}\n         * @param b {number}\n         * @return {number} - greatest common divisor\n         */\n        getAspectRatio(a: number, b: number): string {\n            let c: number = this.getGreatestCommonDivisor(a, b);\n\n            return `${(a / c)}:${(b / c)}`;\n        },\n        /* Cleans configuration for M2C content constructor after Saving component\n         * All empty teaser items has to be removed to not get into configuration object\n         */\n        cleanupConfiguration(): void {\n            this.configuration.items = this.configuration.items.filter((item: any): any => item.image !== '');\n            this.configuration.ignoredItems = this.configuration.ignoredItems.filter((item: any): any => item.image !== '');\n            this.onChange();\n        },\n    },\n    ready(): void {\n        this.imageUploadListener();\n        this.widgetSetListener();\n    },\n};\n\nexport default imageTeaserConfigurator;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\nimport alert from 'Magento_Ui/js/modal/alert';\nimport confirm from 'Magento_Ui/js/modal/confirm';\n\nimport actionButton from '../../../utils/action-button/action-button';\nimport componentActions from '../../../utils/component-actions/component-actions';\nimport componentAdder from '../../../utils/component-adder/component-adder';\n\nimport componentConfigurator from '../../_component-configurator/component-configurator';\n\n// Pattern for teaser Item\nconst teaserDataPattern: any = {\n    sizeSelect: '2x1',\n    size: {\n        x: 2,\n        y: 1\n    },\n    position: 'left',\n    row: 1,\n    isAvailableForMobile: 1,\n    image: '',\n    decodedImage: '',\n    displayVariant: 'variant-1',\n    colorScheme: 'light',\n    headline: '',\n    subheadline: '',\n    paragraph: '',\n    ctaLabel: $t('Check offer'),\n    href: '',\n};\n\n/**\n * Magento product-grid teasers configurator component.\n * This component will be responsible for configuration of image teasers inside native products grid on M2 category pages\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst magentoProductGridTeasersConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        componentConfigurator,\n    ],\n    template: `<div class=\"cc-magento-product-grid-teasers-configurator | {{ class }}\">\n        <component-adder class=\"cc-component-adder cc-component-adder--static\" v-show=\"!configuration.teasers.length\">\n            <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_important cc-action-button--type_icon-only | cc-component-adder__button | cc-magento-product-grid-teasers-configurator__item-action-button\" @click=\"createNewTeaser( 0 )\">\n                <svg class=\"cc-action-button__icon cc-action-button__icon--size_100 | cc-component-adder__button-icon\">\n                    <use xlink:href=\"#icon_plus\"></use>\n                </svg>\n            </button>\n        </component-adder>\n\n        <template v-for=\"item in configuration.teasers\">\n            <div class=\"cc-magento-product-grid-teasers-configurator__item\" id=\"cc-magento-pg-teaser-{{ $index }}\">\n                <component-adder class=\"cc-component-adder cc-component-adder--first\">\n                    <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_important cc-action-button--type_icon-only | cc-component-adder__button | cc-magento-product-grid-teasers-configurator__item-action-button\" @click=\"createNewTeaser( $index )\">\n                        <svg class=\"cc-action-button__icon cc-action-button__icon--size_100 | cc-component-adder__button-icon\">\n                            <use xlink:href=\"#icon_plus\"></use>\n                        </svg>\n                    </button>\n                </component-adder>\n\n                <div class=\"cc-magento-product-grid-teasers-configurator__item-content\">\n                    <div v-bind:class=\"[ 'cc-magento-product-grid-teasers-configurator__item-col-left', configuration.teasers[$index].image ? 'cc-magento-product-grid-teasers-configurator__item-col-left--look-image-uploaded' : '' ]\">\n                        <div class=\"cc-magento-product-grid-teasers-configurator__item-image-wrapper\">\n                            <img :src=\"configuration.teasers[$index].image\" class=\"cc-magento-product-grid-teasers-configurator__item-image\" v-show=\"configuration.teasers[$index].image\">\n                            <input type=\"hidden\" v-model=\"configuration.teasers[$index].image\">\n                            <input type=\"hidden\" class=\"cc-magento-product-grid-teasers-configurator__image-url\" id=\"mpg-teaser-img-{{$index}}\">\n                            <svg class=\"cc-magento-product-grid-teasers-configurator__item-image-placeholder\" v-show=\"!configuration.teasers[$index].image\">\n                                <use xlink:href=\"#icon_image-placeholder\"></use>\n                            </svg>\n\n                            <div class=\"cc-magento-product-grid-teasers-configurator__item-actions\">\n                                <component-actions>\n                                    <template slot=\"cc-component-actions__buttons\">\n                                        <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_default cc-action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--up | cc-magento-product-grid-teasers-configurator__item-action-button\" @click=\"moveTeaserUp( $index )\" :class=\"[ isFirstTeaser( $index ) ? 'cc-action-button--look_disabled' : '' ]\" :disabled=\"isFirstTeaser( $index )\">\n                                            <svg class=\"cc-action-button__icon cc-action-button__icon--size_100\">\n                                                <use xlink:href=\"#icon_arrow-up\"></use>\n                                            </svg>\n                                        </button>\n                                        <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_default cc-action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--down | cc-magento-product-grid-teasers-configurator__item-action-button\" @click=\"moveTeaserDown( $index )\" :class=\"[ isLastTeaser( $index ) ? 'cc-action-button--look_disabled' : '' ]\" :disabled=\"isLastTeaser( $index )\">\n                                            <svg class=\"cc-action-button__icon cc-action-button__icon--size_100\">\n                                                <use xlink:href=\"#icon_arrow-down\"></use>\n                                            </svg>\n                                        </button>\n                                        <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_default cc-action-button--type_icon | cc-component-actions__button cc-component-actions__button--upload-image | cc-magento-product-grid-teasers-configurator__item-action-button\" @click=\"getImageUploader( $index )\">\n                                                <svg class=\"cc-action-button__icon cc-action-button__icon--size_100\">\n                                                    <use xlink:href=\"#icon_upload-image\"></use>\n                                                </svg>\n                                                {{ configuration.teasers[$index].image ? imageUploadedText : noImageUploadedText }}\n                                        </button>\n                                        <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_default cc-action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--delete | cc-magento-product-grid-teasers-configurator__item-action-button\" @click=\"deleteTeaser( $index )\">\n                                            <svg class=\"cc-action-button__icon\">\n                                                <use xlink:href=\"#icon_trash-can\"></use>\n                                            </svg>\n                                        </button>\n                                    </template>\n                                </component-actions>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"cc-magento-product-grid-teasers-configurator__item-col-right\">\n                        <div class=\"cc-input cc-input--group cc-input--group-quarter\">\n                            <div class=\"cc-input | cc-magento-product-grid-teasers-configurator__item-form-element\">\n                                <label for=\"cfg-mpg-teaser{{ $index }}-size-select\" class=\"cc-input__label\">${$t( 'Teaser size' )}:</label>\n                                <select name=\"cfg-mpg-teaser{{ $index }}-size-select\" class=\"cc-input__select | cc-magento-product-grid-teasers-configurator__select\" id=\"cfg-mpg-teaser{{ $index }}-size-select\" v-model=\"configuration.teasers[$index].sizeSelect\" @change=\"setTeaserSize($index)\">\n                                    <option value=\"1x1\">${$t( '1x1' )}</option>\n                                    <option value=\"1x2\">${$t( '1x2' )}</option>\n                                    <option value=\"2x1\">${$t( '2x1' )}</option>\n                                    <option value=\"2x2\">${$t( '2x2' )}</option>\n                                </select>\n                            </div>\n                            <div class=\"cc-input | cc-magento-product-grid-teasers-configurator__item-form-element\">\n                                <label for=\"cfg-mpg-teaser{{ $index }}-position\" class=\"cc-input__label\">${$t( 'Position' )}:</label>\n                                <select name=\"cfg-mpg-teaser{{ $index }}-position\" class=\"cc-input__select | cc-magento-product-grid-teasers-configurator__select\" id=\"cfg-mpg-teaser{{ $index }}-position\" v-model=\"configuration.teasers[$index].position\">\n                                    <option value=\"left\">${$t( 'Left' )}</option>\n                                    <option value=\"center\">${$t( 'Center' )}</option>\n                                    <option value=\"right\">${$t( 'Right' )}</option>\n                                </select>\n                            </div>\n                            <div class=\"cc-input | cc-magento-product-grid-teasers-configurator__item-form-element\">\n                                <label for=\"cfg-mpg-teaser{{ $index }}-row\" class=\"cc-input__label\">${$t( 'Row' )}:</label>\n                                <select name=\"cfg-mpg-teaser{{ $index }}-row\" class=\"cc-input__select | cc-magento-product-grid-teasers-configurator__select\" id=\"cfg-mpg-teaser{{ $index }}-row\" v-model=\"configuration.teasers[$index].row\">\n                                    <option v-for=\"i in rowsCount\" value=\"{{ i + 1 }}\">{{ i + 1 }}</option>\n                                    <option value=\"1000\">${$t( 'as last' )}</option>\n                                </select>\n                            </div>\n                            <div class=\"cc-input | cc-magento-product-grid-teasers-configurator__item-form-element\">\n                                <label for=\"cfg-mpg-teaser{{ $index }}-mobile\" class=\"cc-input__label\">${$t( 'Show in mobiles' )}:</label>\n                                <div class=\"admin__actions-switch\" data-role=\"switcher\">\n                                    <input type=\"checkbox\" class=\"admin__actions-switch-checkbox\" id=\"cfg-mpg-teaser{{ $index }}-mobile\" name=\"cfg-mpg-teaser{{ $index }}-mobile\" v-model=\"configuration.teasers[$index].isAvailableForMobile\">\n                                    <label class=\"admin__actions-switch-label\" for=\"cfg-mpg-teaser{{ $index }}-mobile\"\">\n                                        <span class=\"admin__actions-switch-text\" data-text-on=\"${$t( 'Yes' )}\" data-text-off=\"${$t( 'No' )}\"></span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"cc-input cc-input--group\">\n                            <div class=\"cc-input | cc-magento-product-grid-teasers-configurator__item-form-element\">\n                                <label for=\"cfg-mpg-teaser{{ $index }}-variant\" class=\"cc-input__label\">${$t( 'Display variant' )}:</label>\n                                <select name=\"cfg-mpg-teaser{{ $index }}-variant\" class=\"cc-input__select | cc-magento-product-grid-teasers-configurator__select\" id=\"cfg-mpg-teaser{{ $index }}-variant\" v-model=\"configuration.teasers[$index].displayVariant\">\n                                    <template v-for=\"(idx, scenario) in imageTeasersContentPositions\">\n                                        <option value=\"variant-{{ idx + 1 }}\">${$t( '{{ scenario }}' )}</option>\n                                    </template>\n                                </select>\n                            </div>\n                            <div class=\"cc-input | cc-magento-product-grid-teasers-configurator__item-form-element\">\n                                <label for=\"cfg-mpg-teaser{{ $index }}-color-scheme\" class=\"cc-input__label\">${$t( 'Text color scheme' )}:</label>\n                                <select name=\"cfg-mpg-teaser{{ $index }}-color-scheme\" class=\"cc-input__select | cc-magento-product-grid-teasers-configurator__select\" id=\"cfg-mpg-teaser{{ $index }}-color-scheme\" v-model=\"configuration.teasers[$index].colorScheme\">\n                                    <option value=\"light\">${$t( 'Light' )}</option>\n                                    <option value=\"dark\">${$t( 'Dark' )}</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div class=\"cc-input | cc-magento-product-grid-teasers-configurator__item-form-element\">\n                            <label for=\"cfg-mpg-teaser{{ $index }}-headline\" class=\"cc-input__label\">${$t( 'Headline' )}:</label>\n                            <input type=\"text\" v-model=\"configuration.teasers[$index].headline\" id=\"cfg-mpg-teaser{{ $index }}-headline\" class=\"cc-input__input\">\n                        </div>\n                        <div class=\"cc-input | cc-magento-product-grid-teasers-configurator__item-form-element\">\n                            <label for=\"cfg-mpg-teaser{{ $index }}-subheadline\" class=\"cc-input__label\">${$t( 'Subheadline' )}:</label>\n                            <input type=\"text\" v-model=\"configuration.teasers[$index].subheadline\" id=\"cfg-mpg-teaser{{ $index }}-subheadline\" class=\"cc-input__input\">\n                        </div>\n                        <div class=\"cc-input | cc-magento-product-grid-teasers-configurator__item-form-element\">\n                            <label for=\"cfg-mpg-teaser{{ $index }}-paragraph\" class=\"cc-input__label\">${$t( 'Paragraph' )}:</label>\n                            <textarea type=\"text\" v-model=\"configuration.teasers[$index].paragraph\" id=\"cfg-mpg-teaser{{ $index }}-paragraph\" class=\"cc-input__textarea\"></textarea>\n                        </div>\n                        <div class=\"cc-input cc-input--group\">\n                            <div class=\"cc-input | cc-magento-product-grid-teasers-configurator__item-form-element\">\n                                <label for=\"cfg-mpg-teaser{{ $index }}-cta-label\" class=\"cc-input__label\">${$t( 'CTA label' )}:</label>\n                                <input type=\"text\" v-model=\"configuration.teasers[$index].ctaLabel\" id=\"cfg-mpg-teaser{{ $index }}-cta-label\" class=\"cc-input__input\">\n                            </div>\n                            <div class=\"cc-input cc-input--type-addon | cc-magento-product-grid-teasers-configurator__item-form-element\">\n                                <label for=\"teaser-ctatarget-output-{{ $index }}\" class=\"cc-input__label\">${$t( 'CTA target link' )}:</label>\n                                <input type=\"text\" class=\"cc-input__input | cc-magento-product-grid-teasers-configurator__cta-target-link\" v-model=\"configuration.teasers[$index].href\" id=\"teaser-ctatarget-output-{{ $index }}\">\n                                <span class=\"cc-input__addon | cc-magento-product-grid-teasers-configurator__widget-chooser-trigger\" @click=\"openCtaTargetModal( $index )\">\n                                    <svg class=\"cc-input__addon-icon\">\n                                        <use xlink:href=\"#icon_link\"></use>\n                                    </svg>\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <component-adder class=\"cc-component-adder cc-component-adder--last\">\n                    <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_important cc-action-button--type_icon-only | cc-component-adder__button | cc-magento-product-grid-teasers-configurator__item-action-button\" @click=\"createNewTeaser( $index + 1 )\">\n                        <svg class=\"cc-action-button__icon cc-action-button__icon--size_100 | cc-component-adder__button-icon\">\n                            <use xlink:href=\"#icon_plus\"></use>\n                        </svg>\n                    </button>\n                </component-adder>\n            </div>\n        </template>\n\n        <div class=\"cc-magento-product-grid-teasers-configurator__modal\" v-el:error-modal></div>\n    </div>`,\n    /**\n     * Get dependencies\n     */\n    components: {\n        'action-button': actionButton,\n        'component-adder': componentAdder,\n        'component-actions': componentActions,\n    },\n    props: {\n        /*\n         * Single's component configuration\n         */\n        configuration: {\n            type: Object,\n            default(): any {\n                return {\n                    teasers: [JSON.parse(JSON.stringify(teaserDataPattern))],\n                    json: [],\n                };\n            },\n        },\n        /* get assets for displaying component images */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n        /* Obtain base-url for the image uploader */\n        uploaderBaseUrl: {\n            type: String,\n            default: '',\n        },\n        /* Obtain image endpoint to place permanent url for uploaded images */\n        imageEndpoint: {\n            type: String,\n            default: '',\n        },\n        /* Obtain content-constructor's config file */\n        ccConfig: {\n            type: Object,\n            default(): any {\n                return {};\n            },\n        },\n        productsPerPage: {\n            type: String,\n            default: '30',\n        },\n        /* Obtain admin url */\n        adminPrefix: {\n            type: String,\n            default: 'admin',\n        },\n    },\n    computed: {\n        imageTeasersContentPositions: function(): object {\n            const data: object = this.ccConfig.image_teasers_content_positions;\n            return Object.keys(data).map(key => (<any>data)[key]);\n        },\n    },\n    data(): any {\n        return {\n            imageUploadedText: $t('Change'),\n            noImageUploadedText: $t('Upload'),\n            configuration: this.getInitialConfiguration(),\n            rowsCount: this.getCurrentFErowsCount(),\n        };\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'component-configurator__save'(): void {\n            //this.cleanupConfiguration();\n            this.generateTeasersConfig();\n            this.onSave();\n        },\n    },\n    methods: {\n        getInitialConfiguration(): any {\n            if (!this.configuration) {\n                this.configuration = {\n                    teasers: [JSON.parse(JSON.stringify(teaserDataPattern))],\n                };\n            }\n\n            return this.configuration;\n        },\n        /**\n         * Calculates \"virtual\" length of products in the grid\n         * \"virtual\" means that teasers are included and their sizes are calculated too\n         * f.e if teaser covers 2 tiles it counts as 2 brics, accordingly if it's 2x2 then it takes 4 bricks\n         * @return {number} number of available bricks in grid\n         */\n        getVirtualBricksLength(): number {\n            let virtualLength: number = parseInt(this.productsPerPage, 10);\n\n            for (let i: number = 0; i < this.configuration.teasers.length; i++) {\n                virtualLength += this.configuration.teasers[i].size.x * this.configuration.teasers[i].size.y - 1;\n            }\n\n            return virtualLength;\n        },\n        /**\n         * Calculates how many rows there's displayed if the grid on front-end\n         * Currently divider is hardcoded for desktop breakpoint\n         * @return {number} number of rows in FE grid\n         */\n        getCurrentFErowsCount(): number {\n            return Math.ceil(this.getVirtualBricksLength() / this.ccConfig.columns[this.ccConfig.columns.default_layout].desktop);\n        },\n\n        /**\n         * When you open component after changes in M2 grid settings (when products per page chnaged)\n         * Or, after you delete some teasers - this method updates available rows count on FE side and checks if\n         * current row setting of the teaser is not higher than this.rowsCount.\n         * If yes, it changes row setting to be equal this.rowsCount\n         */\n        fixOverflowedRowsSetup(): void {\n            this.rowsCount = this.getCurrentFErowsCount();\n\n            for (let i: number = 0; i < this.configuration.teasers.length; i++) {\n                if (this.configuration.teasers[i].row > this.rowsCount) {\n                    this.configuration.teasers[i].row = this.rowsCount;\n                }\n            }\n        },\n        /* Opens M2's built-in image manager modal\n         * Manages all images: image upload from hdd, select image that was already uploaded to server\n         * @param index {number} - index of image of hero item\n         */\n        getImageUploader(index: number): void {\n            MediabrowserUtility.openDialog(`${this.uploaderBaseUrl}target_element_id/mpg-teaser-img-${index}/`,\n                'auto',\n                'auto',\n                $t('Insert File...'),\n                {\n                    closed: true,\n                },\n            );\n        },\n\n        /* Listener for image uploader\n         * Since Magento does not provide any callback after image has been chosen\n         * we have to watch for target where decoded url is placed\n         */\n        imageUploadListener(): void {\n            const component: any = this;\n            let isAlreadyCalled: boolean = false;\n\n            // jQuery has to be used, for some reason native addEventListener doesn't catch change of input's value\n            $(document).on('change', '.cc-magento-product-grid-teasers-configurator__image-url', (event: Event): void => {\n                if (!isAlreadyCalled) {\n                    isAlreadyCalled = true;\n                    component.onImageUploaded(event.target);\n                    setTimeout((): void => {\n                        isAlreadyCalled = false;\n                    }, 100);\n                }\n            } );\n        },\n        /* Action after image was uploaded\n         * URL is encoded, so strip it and decode Base64 to get {{ media url=\"...\"}} format\n         * which will go to the items.image and will be used to display image on front end\n         * @param input { object } - input with raw image path which is used in admin panel\n         */\n        onImageUploaded( input: any ): void {\n            const _this: any = this;\n            const itemIndex: any = input.id.substr(input.id.lastIndexOf('-') + 1);\n            const encodedImage: any = input.value.match('___directive\\/([a-zA-Z0-9]*)')[1];\n            const imgEndpoint: string = this.imageEndpoint.replace('{/encoded_image}', encodedImage);\n\n            this.configuration.teasers[itemIndex].decodedImage = Base64 ? Base64.decode(encodedImage) : window.atob(encodedImage);\n\n            const img: any = new Image();\n            img.onload = function(): void {\n                _this.configuration.teasers[itemIndex].image = img.getAttribute('src');\n                _this.onChange();\n            };\n            img.src = imgEndpoint;\n        },\n        /* Opens modal with M2 built-in widget chooser\n         * @param index {number} - index of teaser item to know where to place output of widget chooser\n         */\n        openCtaTargetModal(index: number): void {\n            widgetTools.openDialog(`${window.location.origin}/${this.adminPrefix}/admin/widget/index/filter_widgets/Link/widget_target_id/teaser-ctatarget-output-${index}`);\n            this.wWidgetListener(index);\n        },\n        /* Sets listener for widget chooser\n         * It triggers component.onChange to update component's configuration\n         * after value of item.href is changed\n         */\n        widgetSetListener(): void {\n            $('.cc-magento-product-grid-teasers-configurator__cta-target-link').on('change', (): void => {\n                this.onChange();\n            });\n        },\n        /*\n         * Check if widget chooser is loaded. If not, wait for it, if yes:\n         * Override default onClick for \"Insert Widget\" button in widget's modal window\n         * to clear input's value before inserting new one\n         * @param {number} index Hero item's index in array.\n         */\n        wWidgetListener(itemIndex: number): void {\n            if (typeof wWidget !== 'undefined' && widgetTools.dialogWindow[0].innerHTML !== '') {\n                const button: any = widgetTools.dialogWindow[0].querySelector('#insert_button');\n\n                button.onclick = null;\n                button.addEventListener('click', (): void => {\n                    this.configuration.teasers[itemIndex].href = '';\n                    wWidget.insertWidget();\n                } );\n            } else {\n                window.setTimeout((): void => {\n                    this.wWidgetListener(itemIndex);\n                }, 300);\n            }\n        },\n        setTeaserSize(index: number) {\n            this.fixOverflowedRowsSetup();\n\n            const size: any = this.configuration.teasers[index].sizeSelect.split('x');\n            this.configuration.teasers[index].size.x = size[0];\n            this.configuration.teasers[index].size.y = size[1];\n        },\n        /**\n         * Creates new hero item and adds it to a specified index.\n         * @param {number} index New component's index in components array.\n         */\n        createNewTeaser(index: number): void {\n            this.configuration.teasers.splice(index, 0, JSON.parse(JSON.stringify(teaserDataPattern)));\n            this.rowsCount = this.getCurrentFErowsCount();\n            this.onChange();\n        },\n        /**\n         * Moves hero item under given index up by swaping it with previous element.\n         * @param {number} index Hero item's index in array.\n         */\n        moveTeaserUp(index: number): void {\n            if (index > 0) {\n                const $thisItem: any = $(`#cc-magento-pg-teaser-${ index }`);\n                const $prevItem: any = $(`#cc-magento-pg-teaser-${ index - 1 }`);\n\n                $thisItem.addClass('cc-magento-product-grid-teasers-configurator__item--animating').css('transform', `translateY(${ -Math.abs($prevItem.outerHeight(true)) }px)`);\n                $prevItem.addClass('cc-magento-product-grid-teasers-configurator__item--animating').css('transform', `translateY(${ $thisItem.outerHeight(true) }px)`);\n\n                setTimeout((): void => {\n                    this.configuration.teasers.splice(index - 1, 0, this.configuration.teasers.splice(index, 1)[0]);\n                    this.onChange();\n                    $thisItem.removeClass('cc-magento-product-grid-teasers-configurator__item--animating').css('transform', '');\n                    $prevItem.removeClass('cc-magento-product-grid-teasers-configurator__item--animating').css('transform', '');\n                }, 400);\n            }\n        },\n        /**\n         * Moves hero item under given index down by swaping it with next element.\n         * @param {number} index Hero item's index in array.\n         */\n        moveTeaserDown( index: number ): void {\n            if (index < this.configuration.teasers.length - 1) {\n                const $thisItem: any = $(`#cc-magento-pg-teaser-${ index }`);\n                const $nextItem: any = $(`#cc-magento-pg-teaser-${ index + 1 }`);\n\n                $thisItem.addClass('cc-magento-product-grid-teasers-configurator__item--animating').css('transform', `translateY(${ $nextItem.outerHeight(true) }px)`);\n                $nextItem.addClass('cc-magento-product-grid-teasers-configurator__item--animating').css('transform', `translateY(${ -Math.abs($thisItem.outerHeight(true)) }px)`);\n\n                setTimeout((): void => {\n                    this.configuration.teasers.splice(index + 1, 0, this.configuration.teasers.splice(index, 1)[0]);\n                    this.onChange();\n                    $thisItem.removeClass('cc-magento-product-grid-teasers-configurator__item--animating').css('transform', '');\n                    $nextItem.removeClass('cc-magento-product-grid-teasers-configurator__item--animating').css('transform', '');\n                }, 400);\n            }\n        },\n        /**\n         * Tells if item with given index is the first hero item.\n         * @param  {number}  index Index of the hero item.\n         * @return {boolean}       If hero item is first in array.\n         */\n        isFirstTeaser(index: number): boolean {\n            return index === 0;\n        },\n        /**\n         * Tells if hero item with given index is the last hero item.\n         * @param  {number}  index Index of the hero item.\n         * @return {boolean}       If hero item is last in array.\n         */\n        isLastTeaser(index: number): boolean {\n            return index === this.configuration.teasers.length - 1;\n        },\n        /* Removes hero item after Delete button is clicked\n         * and triggers hero item's onChange to update it's configuration\n         * @param index {number} - index of hero item to remove\n         */\n        deleteTeaser(index: number): void {\n            const component: any = this;\n\n            confirm({\n                content: $t('Are you sure you want to delete this item?'),\n                actions: {\n                    confirm(): void {\n                        component.configuration.teasers.splice(index, 1);\n                        component.fixOverflowedRowsSetup();\n                        component.onChange();\n                    },\n                },\n            } );\n        },\n        /* Cleans configuration for M2C content constructor after Saving component\n         * All empty teasers have to be removed to not get into configuration object\n         */\n        cleanupConfiguration(): void {\n            const filteredArray: any = this.configuration.teasers.filter((teaser: any): any => teaser.image !== '');\n            this.configuration.teasers = filteredArray;\n            this.onChange();\n        },\n        /* Generates 1:1 JSON for grid-layout component so it can be simply passed without any modifications within templates\n         */\n        generateTeasersConfig(): void {\n            this.configuration.json = [];\n\n            for (let i: number = 0; i < this.configuration.teasers.length; i++) {\n                const teaser: any = {\n                    id: i + 1,\n                    mobile: Number(this.configuration.teasers[i].isAvailableForMobile),\n                    size: {\n                        x: Number(this.configuration.teasers[i].size.x),\n                        y: Number(this.configuration.teasers[i].size.y),\n                    },\n                    gridPosition: {\n                        x: this.configuration.teasers[i].position,\n                        y: Number(this.configuration.teasers[i].row),\n                    },\n                };\n\n                this.configuration.json.push(teaser);\n            }\n        },\n    },\n    ready(): void {\n        this.imageUploadListener();\n        this.widgetSetListener();\n        this.fixOverflowedRowsSetup();\n    },\n};\n\nexport default magentoProductGridTeasersConfigurator;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\nimport Vue from 'Vue';\n\nimport componentConfigurator from '../../_component-configurator/component-configurator';\n\n/**\n * Paragraph configurator component.\n * This component is responsible for displaying paragraph configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst paragraphConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        componentConfigurator,\n    ],\n    template: `<form class=\"cc-paragraph-configurator {{ classes }} | {{ mix }}\" {{ attributes }} @submit.prevent=\"onSave\">\n\n        <div class=\"cc-paragraph-configurator__error\" v-text=\"tempConfiguration.errorMessage\" v-show=\"tempConfiguration.errorMessage\">\n        </div>\n\n        <section class=\"cc-paragraph-configurator__section\">\n            <h3 class=\"cc-paragraph-configurator__subtitle\">${$t( 'Paragraph width' )}</h3>\n            <div class=\"cc-paragraph-configurator__scenario-options\">\n                <div\n                    :class=\"{\n                        'cc-paragraph-configurator__option--selected': configuration.scenarios.reading.id == optionId,\n                    }\"\n                    class=\"cc-paragraph-configurator__option\"\n                    v-for=\"(optionId, option) in scenarioOptions.reading\"\n                    @click=\"toggleOption('reading', optionId)\">\n                    <div class=\"cc-paragraph-configurator__option-wrapper\">\n                        <svg class=\"cc-paragraph-configurator__option-icon\">\n                            <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                        </svg>\n                    </div>\n                    <p class=\"cc-paragraph-configurator__option-name\">\n                        ${$t( '{{ option.name }}' )}\n                    </p>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"cc-paragraph-configurator__section\">\n            <div class=\"cc-input\">\n                <label for=\"input-cfg-id\" class=\"cc-input__label\">${$t( 'Identifier' )}:</label>\n                <input type=\"text\" name=\"cfg-id\" v-model=\"tempConfiguration.identifier\" id=\"input-cfg-id\" class=\"cc-input__input cc-input__input--limited-width\" @blur=\"stripSpaces( tempConfiguration.identifier )\" maxlength=\"30\">\n            </div>\n            <div class=\"cc-input\">\n                <label for=\"input-cfg-title\" class=\"cc-input__label\">${$t( 'Title' )}:</label>\n                <input type=\"text\" name=\"cfg-title\" v-model=\"tempConfiguration.title\" id=\"input-cfg-title\" class=\"cc-input__input cc-input__input--limited-width\" maxlength=\"100\">\n            </div>\n            <div class=\"cc-input\" v-if=\"isColumnsConfigAvailable()\">\n                <label for=\"input-cfg-columns\" class=\"cc-input__label\">${$t( 'Number of columns' )}:</label>\n                <select name=\"input-cfg-columns\" class=\"cc-input__select | cc-paragraph-configurator__select\" id=\"input-cfg-columns\" v-model=\"configuration.columns\">\n                    <option value=\"none\">${$t( 'Don\\'t split content - display full width' )}</option>\n                    <option value=\"2\">${$t( 'Split content into 2 columns' )}</option>\n                    <option value=\"3\">${$t( 'Split content into 3 columns' )}</option>\n                    <option value=\"4\">${$t( 'Split content into 4 columns' )}</option>\n                </select>\n                <div class=\"admin__field-note cc-input__note\">\n                    <span>${$t( 'Defines the way of content display. Content can be splitted into defined number of columns. This setting has no effect on small screen resolutions (such as smartphones) where content is always displayed in one column.' )}</span>\n                </div>\n            </div>\n            <div class=\"cc-input\">\n                <label for=\"textarea-cfg-paragraph\" class=\"cc-input__label cc-input__label--look-top-align\">${$t( 'HTML' )}:</label>\n\n                <div class=\"buttons-set | cc-paragraph-configurator__wysiwyg-buttons\">\n                    <button type=\"button\" class=\"scalable action-show-hide\" id=\"toggle-wysiwyg\">${$t( 'Show / Hide Editor' )}</button>\n                    <button type=\"button\" class=\"scalable action-add-widget plugin\" @click=\"openWidgetModal()\" v-show=\"!isEditorVisible\">${$t( 'Insert Widget' )}...</button>\n                    <button type=\"button\" class=\"scalable action-add-image plugin\" @click=\"openMediaModal()\" v-show=\"!isEditorVisible\">${$t( 'Insert Image' )}...</button>\n                    <button type=\"button\" class=\"scalable add-variable plugin\" @click=\"openMagentoVariablesModal()\" v-show=\"!isEditorVisible\">${$t( 'Insert Variable' )}...</button>\n                </div>\n\n                <textarea name=\"cfg-paragraph\" v-model=\"tempConfiguration.content\" id=\"textarea-cfg-paragraph\" class=\"cc-input__textarea | cc-paragraph-configurator__textarea\"></textarea>\n            </div>\n        </section>\n    </form>`,\n    props: {\n        /*\n         * Single's component configuration\n         */\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    blockId: '',\n                    title: '',\n                    columns: 'none',\n                    scenarios: {\n                        reading: {}\n                    }\n                };\n            },\n        },\n        restToken: {\n            type: String,\n            default: '',\n        },\n        wysiwygConfig: {\n            type: String,\n            default: '',\n        },\n        /* Obtain base-url for the image uploader */\n        uploaderBaseUrl: {\n            type: String,\n            default: '',\n        },\n        /* Obtain admin prefix */\n        adminPrefix: {\n            type: String,\n            default: '',\n        },\n        /* get assets for displaying component images */\n        assetsUrl: {\n            type: String,\n            default: '',\n        },\n    },\n    data(): any {\n        return {\n            /*\n             * This object if used to operate inside component. We want to bind data to inputs,\n             * but we don't need them to be saved in m2c component's config. Only ID is needed,\n             * since rest of data id fetched from database.\n             */\n            tempConfiguration: {\n                identifier: '',\n                title: '',\n                content: '',\n                errorMessage: '',\n            },\n\n            isEditorVisible: true,\n\n            // wysiwyg editor object\n            editor: undefined,\n\n            scenarioOptions: {\n                // Reading scenario options.\n                reading: {\n                    'full': {\n                        name: 'Container width',\n                        iconId: 'tw_content-width-text',\n                    },\n                    'optimal': {\n                        name: 'Optimal reading width',\n                        iconId: 'tw_optimal-reading',\n                    },\n                },\n            },\n        };\n    },\n    ready(): void {\n        // Check if wysiwygConfig was passed - means that editor is enabled in admin panel\n        if (this.wysiwygConfig !== '') {\n            this.wysiwygCfg = JSON.parse(this.wysiwygConfig);\n            this.wysiwygCfg.height = '300px';\n        }\n\n        // Init loader and hide it\n        $('body').one().loadingPopup( {\n            timeout: false,\n        }).trigger('hideLoadingPopup');\n\n        // If ID is already provided (means we're in edit mode)\n        if (this.configuration.blockId) {\n            // Show loader before request\n            $('body').trigger('showLoadingPopup');\n\n            // Send request to REST API to get CMS block data if in edit mode\n            this.$http({\n                headers: {\n                    Accept: 'application/json',\n                    Authorization: this.restToken,\n                },\n                method: 'get',\n                url: `${ window.location.origin }/rest/all/V1/cmsBlock/${this.configuration.blockId}`,\n            }).then((response: any): void => {\n                const responseData: any = (typeof response.data === 'string') ? JSON.parse(response.data) : response.data;\n                // Hide loader\n                $('body').trigger('hideLoadingPopup');\n\n                // Update components tempConfiguration\n                this.tempConfiguration.identifier = responseData.identifier;\n                this.tempConfiguration.title = responseData.title;\n                this.tempConfiguration.content = responseData.content;\n                this.configuration.title = responseData.title;\n\n                // initialize customized WYSIWYG\n                if (this.wysiwygCfg) {\n                    this.initWysiwyg();\n                }\n\n            }, (): void => {\n                $('body').trigger('hideLoadingPopup');\n            } );\n        } else {\n            // initialize customized WYSIWYG\n            if (this.wysiwygCfg) {\n                this.initWysiwyg();\n            }\n        }\n\n        this.updateConfigurationProp();\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'component-configurator__save'(): void {\n            // Construct data for REST API\n            const dataConstruct: any = {\n                block: {\n                    identifier: this.tempConfiguration.identifier,\n                    title: this.tempConfiguration.title,\n                    content: this.tempConfiguration.content,\n                    active: true,\n                },\n            };\n\n            // Show loader before request\n            $('body').trigger('showLoadingPopup');\n\n            // Send request to REST API\n            this.$http( {\n                headers: {\n                    Accept: 'application/json',\n                    Authorization: this.restToken,\n                },\n                method: this.configuration.blockId ? 'put' : 'post',\n                url: this.configuration.blockId ? `${ window.location.origin }/rest/all/V1/cmsBlock/${this.configuration.blockId}` : `${ window.location.origin }/rest/all/V1/cmsBlock`,\n                body: dataConstruct,\n            }).then((response: any): void => {\n                // If status is OK update component's configuration and run Save to save component data\n                if (response.ok) {\n                    const responseData: any = (typeof response.data === 'string') ? JSON.parse(response.data) : response.data;\n                    this.configuration.blockId = responseData.id;\n                    this.configuration.title = responseData.title;\n\n                    // Hide loader\n                    $('body').trigger('hideLoadingPopup');\n\n                    // Set headers back\n                    Vue.http.headers.custom.Accept = 'text/html';\n\n                    this.onSave();\n                }\n            }, (response: any): void => {\n                // if failed and response returned any message, put it into error div, else put default text\n                let responseData: any = {};\n                try {\n                    responseData = JSON.parse(response.data);\n\n                    this.tempConfiguration.errorMessage = responseData.message\n                        ? responseData.message\n                        : $t('An unknown error occured. Please try again later.');\n\n                    // Scroll modal to top to make message visible\n                    const $configuratorModal: any = $('.content-constructor__modal--configurator').closest('.modal-content');\n\n                    if($configuratorModal.length) {\n                        $configuratorModal.animate({\n                            scrollTop: 0,\n                        }, 150);\n                    }\n                } catch (err) {\n                    console.warn(`Could not parse response as JSON: ${err}`);\n                };\n\n                // Set headers back\n                Vue.http.headers.custom.Accept = 'text/html';\n\n                // Hide loader\n                $('body').trigger('hideLoadingPopup');\n            } );\n        },\n    },\n    methods: {\n        stripSpaces(str: string): void {\n            const striped: string = str.split(' ').join('-').toLowerCase();\n            this.tempConfiguration.identifier = striped;\n        },\n        /* Opens modal with M2 built-in widget chooser\n         */\n        openWidgetModal(): void {\n            widgetTools.openDialog( `${this.wysiwygCfg.widget_window_url}widget_target_id/textarea-cfg-paragraph` );\n        },\n        /* Opens modal with M2 built-in media uploader\n         */\n        openMediaModal(): void {\n            MediabrowserUtility.openDialog(`${this.uploaderBaseUrl}target_element_id/textarea-cfg-paragraph`,\n                'auto',\n                'auto',\n                $t('Insert File...'),\n                {\n                    closed: true,\n                },\n            );\n        },\n        /* Opens modal with M2 built-in variables\n         */\n        openMagentoVariablesModal(): void {\n            MagentovariablePlugin.loadChooser(`${window.location.origin}/${this.adminPrefix}/admin/system_variable/wysiwygPlugin/`, 'textarea-cfg-paragraph');\n        },\n        /**\n         * Initializes TinyMCE WYSIWYG with given configuration (this.wysiwygConfig).\n         * Custom Event.observe(... event added to toggle editor on/off\n         * You can change editor settings if needed by extending 'editorConfig'.\n         * To extend config please see how it's done by Magento here: vendor/magento/module-catalog/Block/Adminhtml/Helper/Form/Wysiwyg.php (starting from #105)\n         */\n        initWysiwyg(): void {\n            const _this: any = this;\n            let editor: any;\n            const editorConfig: JSON = JSON.parse(this.wysiwygConfig);\n\n            require([\n                'mage/adminhtml/wysiwyg/tiny_mce/setup'\n            ], function(): void {\n                editor = new tinyMceWysiwygSetup(\n                    'textarea-cfg-paragraph',\n                    editorConfig\n                );\n\n                Event.observe('toggle-wysiwyg', 'click', function(): void {\n                    editor.toggle();\n                    _this.isEditorVisible = !_this.isEditorVisible;\n                }.bind(editor));\n\n                editor.turnOn();\n                _this.isEditorVisible = true;\n            });\n        },\n\n        /*\n         * Set the proper option after variant click\n         */\n        toggleOption(optionCategory: string, optionId: string): void {\n            this.configuration.scenarios[optionCategory] = this.scenarioOptions[optionCategory][optionId];\n            this.configuration.scenarios[optionCategory].id = optionId;\n        },\n        isColumnsConfigAvailable(): boolean {\n            return this.configuration.scenarios.reading.id !== 'optimal';\n        },\n        /*\n         * Backward compatibility enhancement.\n         * When new props are added to the 'configuration' prop, none of already saved component has it.\n         * This leads to backward compatibility issues and JS errors for existing components\n         * This method takes defaults of 'configuration' and merges is with exising configuration object\n         */\n        updateConfigurationProp(): void {\n            const propDefaults: Object = this.$options.props.configuration.default();\n            this.configuration = $.extend({}, propDefaults, this.configuration, true);\n        }\n    },\n};\n\nexport default paragraphConfigurator;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\n\nimport componentConfigurator from '../../_component-configurator/component-configurator';\nimport categoryPicker from '../../../utils/category-picker/category-picker';\n\n/**\n * Product carousel configurator component.\n * This component is responsible for displaying product carousel's configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst productCarouselConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        componentConfigurator,\n    ],\n    template: `<form class=\"cc-product-carousel-configurator {{ classes }} | {{ mix }}\" {{ attributes }}>\n\n        <div class=\"cc-input cc-input--type-inline\">\n            <label class=\"cc-input__label\">${$t( 'Categories' )}:</label>\n            <input type=\"hidden\" v-model=\"configuration.category_id\" @change=\"onChange\" id=\"cp-products-carousel\">\n        </div>\n\n        <div class=\"cc-input cc-input--type-inline\">\n            <label class=\"cc-input__label\" for=\"cfg-pc-skus\">${$t( 'SKUs' )}:</label>\n            <input type=\"text\" name=\"cfg-pc-skus\" class=\"cc-input__input\" id=\"cfg-pc-skus\" v-model=\"configuration.skus\" @change=\"onChange\">\n        </div>\n        <div class=\"cc-input cc-input--type-inline cc-input--type-hint\">\n            <label class=\"cc-input__label\"> </label>\n            <span class=\"cc-input__hint cc-input__hint--under-field\">${$t( 'Multiple, comma-separated' )}</span>\n        </div>\n        <div class=\"cc-input cc-input--type-inline cc-input--type-hint\" v-if=\"configuration.skus.length\">\n            <label class=\"cc-input__label\"> </label>\n            <span class=\"cc-input__hint cc-input__hint--under-field cc-input__hint--info-mark\">${$t( 'Providing list of comma separated SKUs will disable any filtering and sorting configured for that component.  Category (if specified) will also not be taken into account. Only products with specified SKUs will be displayed in exactly the same order as they are provided in SKUs field.' )}</span>\n        </div>\n\n        <div class=\"cc-input cc-input--type-inline\">\n            <label class=\"cc-input__label\" for=\"cfg-pc-dataprovider\">${$t( 'Custom Data Provider' )}:</label>\n            <input type=\"text\" name=\"cfg-pc-dataprovider\" class=\"cc-input__input\" id=\"cfg-pc-dataprovider\" v-model=\"configuration.class_overrides.dataProvider\" @change=\"onChange\">\n        </div>\n\n        <div class=\"cc-input cc-input--type-inline\">\n            <label for=\"cfg-pc-filter\" class=\"cc-input__label\">${$t( 'Filter' )}:</label>\n            <select name=\"cfg-pc-filter\" class=\"cc-input__select\" id=\"cfg-pc-filter\" v-model=\"configuration.filter\" @change=\"onChange\">\n                <option value=\"\">${$t( 'No filter' )}</option>\n                <template v-for=\"filter in productCollectionsFilters\">\n                    <option value=\"{{ filter.value }}\" :selected=\"filter.value === configuration.filter\">{{ filter.label }}</option>\n                </template>\n            </select>\n        </div>\n\n        <div class=\"cc-input cc-input--type-inline\">\n            <label for=\"cfg-pc-order-by\" class=\"cc-input__label\">${$t( 'Order by' )}:</label>\n            <select name=\"cfg-pc-order-by\" class=\"cc-input__select\" id=\"cfg-pc-order-by\" v-model=\"configuration.order_by\" @change=\"onChange\">\n                <option value=\"\">${$t( 'Not specified' )}</option>\n                <template v-for=\"sorter in productCollectionsSorters\">\n                    <option value=\"{{ sorter.value }}\" :selected=\"sorter.value === configuration.order_by\">{{ sorter.label }}</option>\n                </template>\n            </select>\n            <select name=\"cfg-pc-order-type\" class=\"cc-input__select\" v-model=\"configuration.order_type\" @change=\"onChange\">\n                <option value=\"ASC\">${$t( 'Ascending' )}</option>\n                <option value=\"DESC\">${$t( 'Descending' )}</option>\n            </select>\n        </div>\n\n        <div class=\"cc-input cc-input--type-inline\">\n            <label for=\"cfg-pc-order-by\" class=\"cc-input__label\">${$t( 'Show ')}:</label>\n            <select name=\"cfg-pc-limit\" class=\"cc-input__select\" id=\"cfg-pc-limit\" v-model=\"configuration.limit\" @change=\"onChange\">\n                <option value=\"20\">20 ${$t( 'products ')}</option>\n                <option value=\"40\">40 ${$t( 'products ')}</option>\n                <option value=\"60\">60 ${$t( 'products ')}</option>\n                <option value=\"80\">80 ${$t( 'products ')}</option>\n                <option value=\"100\">100 ${$t( 'products ')}</option>\n            </select>\n        </div>\n    </form>`,\n    props: {\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    category_id: '',\n                    filter: '',\n                    order_by: 'creation_date',\n                    order_type: 'DESC',\n                    limit: 20,\n                    skus: '',\n                    class_overrides: {\n                        dataProvider: '',\n                    },\n                };\n            },\n        },\n        /* Obtain endpoint for getting categories data for category picker */\n        categoriesDataUrl: {\n            type: String,\n            default: '',\n        },\n        productCollectionsSorters: {\n            type: [String, Array],\n            default: '',\n        },\n        productCollectionsFilters: {\n            type: [String, Array],\n            default: '',\n        },\n    },\n    data(): Object {\n        return {\n            categoryPicker: undefined,\n        };\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'component-configurator__save'(): void {\n            if (this.configuration.class_overrides.dataProvider === '') {\n                delete this.configuration.class_overrides;\n            }\n\n            this.onSave();\n        },\n    },\n    ready(): void {\n        this.productCollectionsSorters = this.productCollectionsSorters !== '' ? JSON.parse(this.productCollectionsSorters) : [];\n        this.productCollectionsFilters = this.productCollectionsFilters !== '' ? JSON.parse(this.productCollectionsFilters) : [];\n\n        if (!this.configuration.class_overrides) {\n            this.configuration.class_overrides = {\n                dataProvider: '',\n            };\n        }\n\n        // Show loader\n        $('body').trigger('showLoadingPopup');\n\n        // Get categories JSON with AJAX\n        this.$http.get(this.categoriesDataUrl).then((response: any): void => {\n            this.categoryPicker = new categoryPicker($('#cp-products-carousel'), JSON.parse(response.body), {\n                multiple: false,\n            });\n            \n            // Hide loader\n            $('body').trigger('hideLoadingPopup');\n        });\n    },\n};\n\nexport default productCarouselConfigurator;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\nimport confirm from 'Magento_Ui/js/modal/confirm';\n\nimport actionButton from '../../../utils/action-button/action-button';\nimport componentActions from '../../../utils/component-actions/component-actions';\nimport componentAdder from '../../../utils/component-adder/component-adder';\n\nimport componentConfigurator from '../../_component-configurator/component-configurator';\n\nimport productFinderPreview from '../preview/product-finder';\n\nconst IStep: any = {\n    \"id\": \"\",\n    \"additional_css_class\": \"\",\n    \"title\": \"\",\n    \"description\": \"\",\n    \"options\": [\n        {\n            \"label\": \"\",\n            \"image\": \"\",\n            \"attributes\": [\n                {\n                    \"code\": \"\",\n                    \"values\": [\"\",\"\"]\n                },\n            ],\n            \"category_id\": \"\",\n            \"next_step\": \"\"\n        },\n        {\n            \"label\": \"\",\n            \"image\": \"\",\n            \"attributes\": [\n                {\n                    \"code\": \"\",\n                    \"range\": [\"\",\"\"]\n                },\n            ],\n            \"category_id\": \"\",\n            \"next_step\": \"\"\n        },\n    ],\n};\n\n/**\n * Product Finder configurator component.\n * This component is responsible for configuring Product Finder component to be displayed as CC component. It finds products based on couple of customer answers\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst ccProductFinderConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        componentConfigurator,\n    ],\n    components: {\n        'action-button': actionButton,\n        'component-adder': componentAdder,\n        'component-actions': componentActions,\n        'product-finder-preview': productFinderPreview,\n    },\n    template: `<div class=\"cc-product-finder-configurator {{ classes }} | {{ mix }}\" {{ attributes }}>\n        <section class=\"cc-product-finder-configurator__section cc-product-finder-configurator__section--styled\">\n            <h3 class=\"cc-product-finder-configurator__subtitle\">{{ 'Default settings' | translate }}:</h3>\n            <div class=\"cc-product-finder-configurator__global-options\">\n                <div class=\"cc-input | cc-product-finder-configurator__global-option\">\n                    <label for=\"cfg-pf-layout-m\" class=\"cc-input__label | cc-product-finder-configurator__section-option-label\">{{ 'Mobile layout' | translate }}:</label>\n                    <select name=\"cfg-pf-layout-m\" class=\"cc-input__select\" id=\"cfg-pf-layout-m\" v-model=\"configuration.optionsPerRow.mobile\" @change=\"onChange\">\n                        <option value=\"1\">{{ '1 option per row' | translate }}</option>\n                        <option value=\"2\">{{ '2 options per row' | translate }}</option>\n                        <option value=\"3\">{{ '3 options per row' | translate }}</option>\n                    </select>\n                </div>\n                <div class=\"cc-input | cc-product-finder-configurator__global-option\">\n                    <label for=\"cfg-pf-layout-t\" class=\"cc-input__label | cc-product-finder-configurator__section-option-label\">{{ 'Tablet layout' | translate }}:</label>\n                    <select name=\"cfg-pf-layout-t\" class=\"cc-input__select\" id=\"cfg-pf-layout-t\" v-model=\"configuration.optionsPerRow.tablet\" @change=\"onChange\">\n                        <option value=\"2\">{{ '2 options per row' | translate }}</option>\n                        <option value=\"3\">{{ '3 options per row' | translate }}</option>\n                        <option value=\"4\">{{ '4 options per row' | translate }}</option>\n                    </select>\n                </div>\n                <div class=\"cc-input | cc-product-finder-configurator__global-option\">\n                    <label for=\"cfg-pf-layout-d\" class=\"cc-input__label | cc-product-finder-configurator__section-option-label\">{{ 'Desktop layout' | translate }}:</label>\n                    <select name=\"cfg-pf-layout-d\" class=\"cc-input__select\" id=\"cfg-pf-layout-d\" v-model=\"configuration.optionsPerRow.desktop\" @change=\"onChange\">\n                        <option value=\"3\">{{ '3 options per row' | translate }}</option>\n                        <option value=\"4\">{{ '4 options per row' | translate }}</option>\n                        <option value=\"5\">{{ '5 options per row' | translate }}</option>\n                        <option value=\"6\">{{ '6 options per row' | translate }}</option>\n                    </select>\n                </div>\n            </div>\n        </section>\n\n        <section class=\"cc-product-finder-configurator__section\">\n            <component-adder class=\"cc-component-adder cc-component-adder--static\" v-show=\"!configuration.steps.length\">\n                <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_important cc-action-button--type_icon-only | cc-component-adder__button | cc-product-finder-configurator__item-action-button\" @click=\"createStep(0)\">\n                    <svg class=\"cc-action-button__icon cc-action-button__icon--size_100 | cc-component-adder__button-icon\">\n                        <use v-bind=\"{ 'xlink:href': '#icon_plus' }\"></use>\n                    </svg>\n                </button>\n            </component-adder>\n\n            <template v-for=\"step in configuration.steps\">\n                <div class=\"cc-product-finder-configurator__step\" id=\"cc-product-finder-step-{{ $index }}\">\n                    <component-adder class=\"cc-component-adder cc-component-adder--first\">\n                        <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_important cc-action-button--type_icon-only | cc-product-finder-configurator__item-action-button\" @click=\"createStep($index)\">\n                            <svg class=\"cc-action-button__icon cc-action-button__icon--size_300\">\n                                <use xlink:href=\"#icon_plus\"></use>\n                            </svg>\n                        </button>\n                    </component-adder>\n\n                    <div class=\"cc-product-finder-configurator__step-content\">\n                        <div :class=\"[ componentConfigurationErrors[$index] ? 'cc-product-finder-configurator__preview cc-product-finder-configurator__preview--error' : 'cc-product-finder-configurator__preview' ]\">\n                            <div class=\"cc-product-finder-configurator__error\" v-if=\"componentConfigurationErrors[$index]\">\n                                {{ componentConfigurationErrors[$index] }}\n                            </div>\n\n                            <template v-if=\"!componentConfigurationErrors[$index]\">\n                                <product-finder-preview :configuration=\"configuration\" :step-index=\"$index\" :is-configurator-preview=\"true\" :image-endpoint=\"imageEndpoint\"></product-finder-preview>\n                            </template>\n\n                            <div class=\"cc-product-finder-configurator__step-actions\">\n                                <component-actions>\n                                    <template slot=\"cc-component-actions__buttons\">\n                                        <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_default cc-action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--up | cc-product-finder-configurator__item-action-button\" @click=\"moveStepUp($index)\" :class=\"[ isFirstStep($index) ? 'cc-action-button--look_disabled' : '' ]\" :disabled=\"isFirstStep($index)\">\n                                            <svg class=\"cc-action-button__icon cc-action-button__icon--size_100\">\n                                                <use xlink:href=\"#icon_arrow-up\"></use>\n                                            </svg>\n                                        </button>\n                                        <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_default cc-action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--down | cc-product-finder-configurator__item-action-button\" @click=\"moveStepDown( $index )\" :class=\"[ isLastStep($index) ? 'cc-action-button--look_disabled' : '' ]\" :disabled=\"isLastStep($index)\">\n                                            <svg class=\"cc-action-button__icon cc-action-button__icon--size_100\">\n                                                <use xlink:href=\"#icon_arrow-down\"></use>\n                                            </svg>\n                                        </button>\n                                        <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_default cc-action-button--type_icon-only | cc-component-actions__button cc-component-actions__button--delete | cc-product-finder-configurator__item-action-button\" @click=\"deleteStep($index)\">\n                                            <svg class=\"cc-action-button__icon\">\n                                                <use xlink:href=\"#icon_trash-can\"></use>\n                                            </svg>\n                                        </button>\n                                    </template>\n                                </component-actions>\n                            </div>\n                        </div>\n\n                        <div class=\"cc-input | cc-product-finder-configurator__source\">\n                            <div class=\"buttons-set\">\n                                <button type=\"button\" class=\"scalable action-add-image plugin\" @click=\"getImageUploader($index)\">{{ 'Insert Image' | translate }}...</button>\n                            </div>\n                            <textarea class=\"cc-input__textarea | cc-product-finder-configurator__editor\" id=\"cfg-pf-step{{ $index }}-sourcefield\" @keydown=\"saveCaretPosition($event)\" @click=\"saveCaretPosition($event)\" v-model=\"step | prettify $index\"></textarea>\n                            <input type=\"hidden\" class=\"cc-product-finder-configurator__imgholder\" data-step-index=\"{{$index}}\" id=\"pf-imgholder-{{$index}}\" />\n                        </div>\n                    </div>\n\n                    <component-adder class=\"cc-component-adder cc-component-adder--last\" v-if=\"configuration.steps.length\">\n                        <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_important cc-action-button--type_icon-only | cc-product-finder-configurator__item-action-button\" @click=\"createStep( $index + 1 )\">\n                            <svg class=\"cc-action-button__icon cc-action-button__icon--size_300\">\n                                <use xlink:href=\"#icon_plus\"></use>\n                            </svg>\n                        </button>\n                    </component-adder>\n                </div>\n            </template>\n        </section>\n    </div>`,\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'component-configurator__save'(): void {\n            this.configuration.isError = false;\n\n            for (let entry of this.componentConfigurationErrors) {\n                if (entry.length) {\n                    this.configuration.isError = true;\n                }\n            }\n\n            this.onSave();\n        },\n    },\n    props: {\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    optionsPerRow: {\n                        mobile: 1,\n                        tablet: 3,\n                        desktop: 6,\n                    },\n                    steps: [JSON.parse(JSON.stringify(IStep))],\n                    isError: false,\n                };\n            },\n        },\n        /* Obtain base-url for the image uploader */\n        uploaderBaseUrl: {\n            type: String,\n            default: '',\n        },\n        /* Obtain image endpoint to place permanent url for uploaded images */\n        imageEndpoint: {\n            type: String,\n            default: '',\n        },\n    },\n    data(): Object {\n        return {\n            componentConfigurationErrors: this.prepareComponentErrorsArray(),\n            caretPosition: 1,\n        };\n    },\n    filters: {\n        /** \n          * Two-way filter for step content displaing in textarea and keeping in configuration.\n         */\n        prettify: {\n            /** Displays stringified JSON in textarea if not step is not stringified yet. \n             *  If step is already stringified because it couldn't be saved, just return back what came in.\n             * @param stepContent {string} - content of textarea\n             * @param stepIndex {number} - index of a single step\n             * @return {String} - Stringified JSON of given step\n             */\n            read(stepContent: string, stepIndex: number): string {\n                if (this.componentConfigurationErrors[stepIndex].length) {\n                    return stepContent;\n                }\n\n                return JSON.stringify(stepContent, null, 2);\n            },\n            /** Tests if step content provided in textarea can be JSON.parsed.\n             *  If yes - saves in component's configuration and removes step error if there was any.\n             *  If not - obtains error message and passes it to setError method. Returns what came in.\n             * @param newStepContent {string} - current content of textarea\n             * @param oldStepContent {string} - content of textarea in state it was before change was made\n             * @param stepIndex {number} - index of a single step\n             * @return {JSON, String} - if string can be parsed to JSON, returns JSON, otherwise String  \n             */\n            write(newStepContent: string, oldStepContent: string, stepIndex: number): any {\n                let result: any;\n\n                try {\n                    result = JSON.parse(newStepContent);\n                } catch (err) {\n                    if (err.hasOwnProperty('message')) {\n                        this.setError(stepIndex, err.message);\n                    } else {\n                        this.setError(stepIndex, JSON.stringify(err));\n                    }\n                };\n\n                if (result) {\n                    this.clearError(stepIndex);\n                    return result;\n                }\n\n                return newStepContent;\n            },\n        },\n        /** Translates given string\n         * @param txt {string} - original, english string to be translated\n         * @return {string} - translated string\n         */\n        translate(txt: string): string {\n            return $.mage.__(txt);\n        },\n    },\n    methods: {\n        /** Pushes error message to the componentConfigurationErrors Array on given index\n         * @param stepIndex {number} - index of a single step\n         */\n        setError(stepIndex: number, err: any): void {\n            this.componentConfigurationErrors.$set(stepIndex, err);\n        },\n        /** Clears error message from the given index of componentConfigurationErrors Array\n         * @param stepIndex {number} - index of a single step\n         */\n        clearError(stepIndex: number): void {\n            this.componentConfigurationErrors.$set(stepIndex, '');\n        },\n        /** Creates new step on given position\n         * @param stepIndex {number} - index of a new step to be created in\n         */\n        createStep(stepIndex: number): void {\n            this.configuration.steps.splice(stepIndex, 0, JSON.parse(JSON.stringify(IStep)));\n            this.componentConfigurationErrors.splice(stepIndex, 0, '');\n        },\n        /** Removes given step after \"Delete\" button is clicked\n         * @param stepIndex {number} - index of step to remove\n         */\n        deleteStep(stepIndex: number): void {\n            const component: any = this;\n\n            confirm({\n                content: $.mage.__('Are you sure you want to delete this step?'),\n                actions: {\n                    confirm(): void {\n                        component.configuration.steps.splice(stepIndex, 1);\n                        component.componentConfigurationErrors.splice(stepIndex, 1);\n                    }\n                },\n            });\n        },\n        /** Prepares errors array for every step on each component render.\n         *  It's not saved in configuration so must be called on every open\n         * @return {Array} - array with as many empty entires as steps provided\n         */\n        prepareComponentErrorsArray(): Array<any> {\n            let errorsArray: Array<any> = [];\n\n            for (let step of this.configuration.steps) {\n                errorsArray.push('');\n            }\n\n            return errorsArray;\n        },\n        /** Opens Magento's built-in image uploader/chooser modal\n         * @param stepIndex {number} - index of a step for which image is inserted\n         */\n        getImageUploader(stepIndex: number): void {\n            MediabrowserUtility.openDialog(`${this.uploaderBaseUrl}target_element_id/pf-imgholder-${stepIndex}`,\n                'auto',\n                'auto',\n                $.mage.__('Insert File...'),\n                {\n                    closed: true,\n                },\n            );\n        },\n        /* Listener for image uploader\n         * Since Magento does not provide any callback after image has been chosen\n         * we have to watch for target where decoded url is placed\n         */\n        imageUploadListener(): void {\n            const component: any = this;\n            let isAlreadyCalled: boolean = false;\n\n            // jQuery has to be used, for some reason native addEventListener doesn't catch change of input's value\n            $(document).on('change', '.cc-product-finder-configurator__imgholder', (event: Event): void => {\n                if ( !isAlreadyCalled ) {\n                    isAlreadyCalled = true;\n                    component.setImageUrl(event);\n                    setTimeout((): void => {\n                        isAlreadyCalled = false;\n                    }, 100);\n                }\n            } );\n        },\n        /** Action after image was uploaded\n         * URL is encoded.\n         * - strips it and decode Base64 to get {{ media url=\"...\"}} format which will go to the step.image and will be used to display image on front end.\n         * - escapes all double-quotes inside this new url format\n         * - puts newly created string into proper place (where cursor was last time)\n         * - trigger change event so that vue knows step content has changed\n         * @param event {Event} - event passed from upload action\n         */\n        setImageUrl(event: Event): void {\n            const input: any = event.target;\n            const encodedImage: any = input.value.match('___directive\\/([a-zA-Z0-9]*)')[1];\n            const imageUrl: string = window.atob(encodedImage);\n            const stepEl: HTMLInputElement = input.previousElementSibling;\n            const stepText: string = stepEl.value;\n            const finalImageUrl: string = imageUrl.replace(/\\\"/g,'\\\\\"');\n\n            stepEl.value = stepText.substr(0, this.caretPosition) + finalImageUrl + stepText.substr(this.caretPosition);\n            $(stepEl).trigger('change');\n        },\n\n        /** Saves caret position in step's textarea on every click and keydown\n         * @param event {Event} - click/keyup event\n         */\n        saveCaretPosition(event: Event): void {\n            const el = <HTMLInputElement>event.target;\n            this.caretPosition = el.selectionStart || 0;\n        },\n        /**\n         * Moves step under given index up by swaping it with previous element.\n         * @param {number} stepIndex step's index in array.\n         */\n        moveStepUp(stepIndex: number): void {\n            if (stepIndex > 0) {\n                const $thisItem: any = $(`#cc-product-finder-step-${ stepIndex }`);\n                const $prevItem: any = $(`#cc-product-finder-step-${ stepIndex - 1 }`);\n\n                $thisItem.addClass('cc-product-finder-configurator__step--animating' ).css('transform', `translateY(${ -Math.abs($prevItem.outerHeight(true)) }px)`);\n                $prevItem.addClass('cc-product-finder-configurator__step--animating').css('transform', `translateY(${ $thisItem.outerHeight(true) }px)`);\n\n                setTimeout((): void => {\n                    this.configuration.steps.splice(stepIndex - 1, 0, this.configuration.steps.splice(stepIndex, 1)[0]);\n                    $thisItem.removeClass('cc-product-finder-configurator__step--animating').css('transform', '');\n                    $prevItem.removeClass('cc-product-finder-configurator__step--animating').css('transform', '');\n                }, 400);\n            }\n        },\n        /**\n         * Moves step under given index down by swaping it with next element.\n         * @param {number} stepIndex step's index in array.\n         */\n        moveStepDown(stepIndex: number): void {\n            if (stepIndex < this.configuration.steps.length - 1) {\n                const $thisItem: any = $(`#cc-product-finder-step-${ stepIndex }`);\n                const $nextItem: any = $(`#cc-product-finder-step-${ stepIndex + 1 }`);\n\n                $thisItem.addClass('cc-product-finder-configurator__step--animating').css('transform', `translateY(${ $nextItem.outerHeight(true) }px)`);\n                $nextItem.addClass('cc-product-finder-configurator__step--animating').css('transform', `translateY(${ -Math.abs($thisItem.outerHeight(true)) }px)`);\n\n                setTimeout((): void => {\n                    this.configuration.steps.splice(stepIndex + 1, 0, this.configuration.steps.splice(stepIndex, 1)[0]);\n                    $thisItem.removeClass('cc-product-finder-configurator__step--animating').css('transform', '');\n                    $nextItem.removeClass('cc-product-finder-configurator__step--animating').css('transform', '');\n                }, 400);\n            }\n        },\n        /**\n         * Tells if step with given index is the first step.\n         * @param  {number}  stepIndex Index of the step.\n         * @return {boolean} If step is first in array.\n         */\n        isFirstStep(stepIndex: number): boolean {\n            return stepIndex === 0;\n        },\n        /**\n         * Tells if step with given index is the last step.\n         * @param  {number}  stepIndex Index of the step.\n         * @return {boolean} If step is last in array.\n         */\n        isLastStep(stepIndex: number): boolean {\n            return stepIndex === this.configuration.steps.length - 1;\n        },\n    },\n    ready(): void {\n        this.imageUploadListener();\n    },\n}\n\nexport default ccProductFinderConfigurator;\n","import $ from 'jquery';\nimport $t from 'mage/translate';\n\nimport categoryPicker from '../../../utils/category-picker/category-picker';\nimport actionButton from '../../../utils/action-button/action-button';\nimport componentActions from '../../../utils/component-actions/component-actions';\n\nimport componentConfigurator from '../../_component-configurator/component-configurator';\n\n/**\n * Product grid configurator component.\n * This component is responsible for displaying products grid  configuration form\n * @type {vuejs.ComponentOption} Vue component object.\n */\nconst productsGridConfigurator: vuejs.ComponentOption = {\n    mixins: [\n        componentConfigurator,\n    ],\n    template: `<div class=\"cc-products-grid-configurator {{ classes }} | {{ mix }}\" {{ attributes }}>\n        <section class=\"cc-products-grid-configurator__section\">\n            <h3 class=\"cc-products-grid-configurator__subtitle\">${$t( 'Data source' )}:</h3>\n            <div class=\"cc-products-grid-configurator__scenario-options cc-products-grid-configurator__scenario-options--inputs\">\n                <div class=\"cc-input cc-input--type-inline | cc-products-grid-configurator__section-option\">\n                    <label for=\"cfg-pg-category\" class=\"cc-input__label | cc-products-grid-configurator__section-option-label\">${$t( 'Category ID' )}:</label>\n                    <select class=\"cc-input__select tmp-select\" style=\"width:25em\">\n                        <option>${$t( 'Select...' )}</option>\n                    </select>\n                    <input type=\"hidden\" name=\"cfg-pg-category-select\" class=\"cc-input__input | cc-products-grid-configurator__form-input\" id=\"cfg-pg-category\" v-model=\"configuration.category_id\" @change=\"onChange\">\n                </div>\n                <div class=\"cc-input cc-input--type-inline | cc-products-grid-configurator__section-option\">\n                    <label for=\"cfg-pg-filter\" class=\"cc-input__label | cc-products-grid-configurator__section-option-label\">${$t( 'Filter' )}:</label>\n                    <select name=\"cfg-pg-filter\" class=\"cc-input__select\" id=\"cfg-pg-filter\" v-model=\"configuration.filter\" @change=\"onChange\">\n                        <option value=\"\">${$t( 'No filter' )}</option>\n                        <template v-for=\"filter in productCollectionsFilters\">\n                            <option value=\"{{ filter.value }}\" :selected=\"filter.value === configuration.filter\">{{ filter.label }}</option>\n                        </template>\n                    </select>\n                </div>\n                <div class=\"cc-input | cc-products-grid-configurator__section-option\">\n                    <label for=\"cfg-pg-skus\" class=\"cc-input__label\">${$t( 'SKUs' )}:</label>\n                    <input type=\"text\" name=\"cfg-pg-skus\" class=\"cc-input__input\" id=\"cfg-pg-skus\" v-model=\"configuration.skus\" @change=\"onChange\">\n                    <div class=\"cc-input__hint\">${$t( 'Multiple, comma-separated' )}</div>\n                </div>\n                <div class=\"cc-input cc-input--type-inline | cc-products-grid-configurator__section-option\">\n                    <label for=\"cfg-pg-order-by\" class=\"cc-input__label | cc-products-grid-configurator__section-option-label\">${$t( 'Order by' )}:</label>\n                    <select name=\"cfg-pg-order-by\" class=\"cc-input__select\" id=\"cfg-pg-order-by\" v-model=\"configuration.order_by\" @change=\"onChange\">\n                        <option value=\"\">${$t( 'Not specified' )}</option>\n                        <template v-for=\"sorter in productCollectionsSorters\">\n                            <option value=\"{{ sorter.value }}\" :selected=\"sorter.value === configuration.order_by\">{{ sorter.label }}</option>\n                        </template>\n                    </select>\n                    <select name=\"cfg-pg-order-type\" class=\"cc-input__select\" v-model=\"configuration.order_type\" @change=\"onChange\">\n                        <option value=\"ASC\">${$t( 'Ascending' )}</option>\n                        <option value=\"DESC\">${$t( 'Descending' )}</option>\n                    </select>\n                </div>\n                <div class=\"cc-input | cc-products-grid-configurator__section-option\">\n                    <label for=\"cfg-pg-dataprovider\" class=\"cc-input__label\">${$t( 'Custom Data Provider' )}:</label>\n                    <input type=\"text\" name=\"cfg-pg-dataprovider\" class=\"cc-input__input\" id=\"cfg-pg-dataprovider\" v-model=\"configuration.class_overrides.dataProvider\" @change=\"onChange\">\n                </div>\n                <div class=\"cc-input__hint cc-input__hint--info-mark\" v-if=\"configuration.skus.length\">\n                    ${$t( 'Providing list of comma separated SKUs will disable any filtering and sorting configured for that component.  Category (if specified) will also not be taken into account. Only products with specified SKUs will be displayed in exactly the same order as they are provided in SKUs field.' )}\n                </div>\n            </div>\n        </section>\n\n        <section class=\"cc-products-grid-configurator__section\">\n            <h3 class=\"cc-products-grid-configurator__subtitle\">${$t( 'Mobile Layout' )}:</h3>\n            <div class=\"cc-products-grid-configurator__scenario-options\">\n                <ul class=\"cc-products-grid-configurator__scenario-options-list\">\n                    <li\n                        :class=\"{\n                            'cc-products-grid-configurator__option--selected': isOptionSelected('rows_mobile', optionId),\n                        }\"\n                        class=\"cc-products-grid-configurator__option\"\n                        v-for=\"(optionId, option) in scenarioOptions.rows_mobile\"\n                        @click=\"setOption('rows_mobile', optionId)\">\n                        <div class=\"cc-products-grid-configurator__option-wrapper\">\n                            <svg class=\"cc-products-grid-configurator__option-icon\">\n                                <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                            </svg>\n                        </div>\n                        <p class=\"cc-products-grid-configurator__option-name\">\n                            <input v-if=\"optionId === '1000'\" type=\"text\" name=\"cfg-ml-custom\" class=\"cc-input__input cc-input__input--type-tiny\" id=\"cfg-ml-custom\" maxlength=\"3\" v-model=\"tmpConfiguration.rows_mobile\" @change=\"setOption('rows_mobile', tmpConfiguration.rows_mobile)\">\n                            {{ option.name }}\n                        </p>\n                    </li>\n                </ul>\n            </div>\n        </section>\n\n        <section class=\"cc-products-grid-configurator__section\">\n            <h3 class=\"cc-products-grid-configurator__subtitle\">${$t( 'Tablet Layout' )}:</h3>\n            <div class=\"cc-products-grid-configurator__scenario-options\">\n                <ul class=\"cc-products-grid-configurator__scenario-options-list\">\n                    <li\n                        :class=\"{\n                            'cc-products-grid-configurator__option--selected': isOptionSelected('rows_tablet', optionId),\n                        }\"\n                        class=\"cc-products-grid-configurator__option\"\n                        v-for=\"(optionId, option) in scenarioOptions.rows_tablet\"\n                        @click=\"setOption('rows_tablet', optionId)\">\n                        <div class=\"cc-products-grid-configurator__option-wrapper\">\n                            <svg class=\"cc-products-grid-configurator__option-icon\">\n                                <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                            </svg>\n                        </div>\n                        <p class=\"cc-products-grid-configurator__option-name\">\n                            <input v-if=\"optionId === '1000'\" type=\"text\" name=\"cfg-tl-custom\" class=\"cc-input__input cc-input__input--type-tiny\" id=\"cfg-tl-custom\" maxlength=\"3\" v-model=\"tmpConfiguration.rows_tablet\" @change=\"setOption('rows_tablet', tmpConfiguration.rows_tablet)\">\n                            {{ option.name }}\n                        </p>\n                    </li>\n                </ul>\n            </div>\n        </section>\n\n        <section class=\"cc-products-grid-configurator__section\">\n            <h3 class=\"cc-products-grid-configurator__subtitle\">${$t( 'Desktop Layout' )}:</h3>\n            <div class=\"cc-products-grid-configurator__scenario-options\">\n                <ul class=\"cc-products-grid-configurator__scenario-options-list\">\n                    <li\n                        :class=\"{\n                            'cc-products-grid-configurator__option--selected': isOptionSelected('rows_desktop', optionId),\n                        }\"\n                        class=\"cc-products-grid-configurator__option\"\n                        v-for=\"(optionId, option) in scenarioOptions.rows_desktop\"\n                        @click=\"setOption('rows_desktop', optionId)\">\n                        <div class=\"cc-products-grid-configurator__option-wrapper\">\n                            <svg class=\"cc-products-grid-configurator__option-icon\">\n                                <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                            </svg>\n                        </div>\n                        <p class=\"cc-products-grid-configurator__option-name\">\n                            <input v-if=\"optionId === '1000'\" type=\"text\" name=\"cfg-dl-custom\" class=\"cc-input__input cc-input__input--type-tiny\" id=\"cfg-dl-custom\" maxlength=\"3\" v-model=\"tmpConfiguration.rows_desktop\" @change=\"setOption('rows_desktop', tmpConfiguration.rows_desktop)\">\n                            {{ option.name }}\n                        </p>\n                    </li>\n                </ul>\n            </div>\n        </section>\n\n        <section class=\"cc-products-grid-configurator__section\">\n            <h3 class=\"cc-products-grid-configurator__subtitle\">${$t( 'Hero Teaser' )}:</h3>\n            <div class=\"cc-products-grid-configurator__scenario-options\">\n                <ul class=\"cc-products-grid-configurator__scenario-options-list\">\n                    <li\n                        :class=\"{\n                            'cc-products-grid-configurator__option--selected': configuration.hero.position == optionId,\n                        }\"\n                        class=\"cc-products-grid-configurator__option\"\n                        v-for=\"(optionId, option) in scenarioOptions.hero.position\"\n                        @click=\"setOption('hero', optionId, 'position')\">\n                        <div class=\"cc-products-grid-configurator__option-wrapper\">\n                            <svg class=\"cc-products-grid-configurator__option-icon\">\n                                <use v-bind=\"{ 'xlink:href': '#' + option.iconId }\"></use>\n                            </svg>\n                        </div>\n                        <p class=\"cc-products-grid-configurator__option-name\">\n                            {{ option.name }}\n                        </p>\n                    </li>\n                </ul>\n            </div>\n        </section>\n\n        <div class=\"cc-products-grid-configurator__item\" v-show=\"configuration.hero.position\">\n            <div class=\"cc-hero-carousel-configurator__item-content\">\n                <div v-bind:class=\"[ 'cc-products-grid-configurator__item-col-left', configuration.hero.image ? 'cc-products-grid-configurator__item-col-left--look-image-uploaded' : '' ]\">\n                    <div class=\"cc-products-grid-configurator__item-image-wrapper\">\n                        <img :src=\"configuration.hero.image\" class=\"cc-image-teaser-configurator__item-image\" v-show=\"configuration.hero.image\">\n                        <input type=\"hidden\" v-model=\"configuration.hero.image\">\n                        <input type=\"hidden\" class=\"cc-products-grid-configurator__image-url\" id=\"products-grid-img\">\n                        <svg class=\"cc-products-grid-configurator__item-image-placeholder\" v-show=\"!configuration.hero.image\">\n                            <use xlink:href=\"#icon_image-placeholder\"></use>\n                        </svg>\n\n                        <div class=\"cc-products-grid-configurator__item-actions\">\n                            <component-actions>\n                                <template slot=\"cc-component-actions__buttons\">\n                                    <button is=\"action-button\" class=\"cc-action-button cc-action-button--look_default cc-action-button--type_icon | cc-component-actions__button cc-component-actions__button--upload-image | cc-products-grid-configurator__item-action-button\" @click=\"getImageUploader()\">\n                                            <svg class=\"cc-action-button__icon cc-action-button__icon--size_100\">\n                                                <use xlink:href=\"#icon_upload-image\"></use>\n                                            </svg>\n                                            {{ configuration.hero.image ? imageUploadedText : noImageUploadedText }}\n                                    </button>\n                                </template>\n                            </component-actions>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"cc-products-grid-configurator__item-col-right\">\n                    <div class=\"cc-input cc-input--group\">\n                        <div class=\"cc-input | cc-image-teaser-configurator__item-form-element\">\n                            <label for=\"cfg-pg-hero_content-position-variant\" class=\"cc-input__label\">${$t( 'Display variant' )}:</label>\n                            <select name=\"cfg-pg-hero_content-position-variant\" class=\"cc-input__select\" id=\"cfg-pg-hero_content-position-variant\" v-model=\"configuration.hero.displayVariant\">\n                                <template v-for=\"(idx, scenario) in imageTeasersContentPositions\">\n                                    <option value=\"{{ idx + 1 }}\">${$t( '{{ scenario }}' )}</option>\n                                </template>\n                            </select>\n                        </div>\n                        <div class=\"cc-input | cc-image-teaser-configurator__item-form-element\">\n                            <label for=\"cfg-pg-hero_color-scheme\" class=\"cc-input__label\">${$t( 'Text color scheme' )}:</label>\n                            <select name=\"cfg-pg-hero_color-scheme\" class=\"cc-input__select\" id=\"cfg-pg-hero_color-scheme\" v-model=\"configuration.hero.colorScheme\">\n                                <option value=\"light\">${$t( 'Light' )}</option>\n                                <option value=\"dark\">${$t( 'Dark' )}</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"cc-input | cc-products-grid-configurator__item-form-element\">\n                        <label for=\"cfg-pg-hero_headline\" class=\"cc-input__label\">${$t( 'Headline' )}:</label>\n                        <input type=\"text\" name=\"cfg-pg-hero_headline\" class=\"cc-input__input\" id=\"cfg-pg-hero_headline\" v-model=\"configuration.hero.headline\" @change=\"onChange\">\n                    </div>\n                    <div class=\"cc-input | cc-products-grid-configurator__item-form-element\">\n                        <label for=\"cfg-pg-hero_subheadline\" class=\"cc-input__label\">${$t( 'Subheadline' )}:</label>\n                        <input type=\"text\" name=\"cfg-pg-hero_subheadline\" class=\"cc-input__input\" id=\"cfg-pg-hero_subheadline\" v-model=\"configuration.hero.subheadline\" @change=\"onChange\">\n                    </div>\n                    <div class=\"cc-input | cc-products-grid-configurator__item-form-element\">\n                        <label for=\"cfg-pg-hero_paragraph\" class=\"cc-input__label | cc-products-grid-configurator__form-label--textarea\">${$t( 'Paragraph' )}:</label>\n                        <textarea type=\"text\" name=\"cfg-pg-hero_paragraph\" class=\"cc-input__textarea\" id=\"cfg-pg-hero_paragraph\" v-model=\"configuration.hero.paragraph\"></textarea>\n                    </div>\n                    <div class=\"cc-input cc-input--group\">\n                        <div class=\"cc-input | cc-products-grid-configurator__item-form-element\">\n                            <label for=\"cfg-pg-hero_button_label\" class=\"cc-input__label\">${$t( 'Button label' )}:</label>\n                            <input type=\"text\" name=\"cfg-pg-hero_button_label\" class=\"cc-input__input\" id=\"cfg-pg-hero_button_label\" v-model=\"configuration.hero.button.label\" @change=\"onChange\">\n                        </div>\n                        <div class=\"cc-input cc-input--type-addon | cc-products-grid-configurator__item-form-element\">\n                            <label for=\"cfg-pg-hero_url\" class=\"cc-input__label\">${$t( 'Url' )}:</label>\n                            <input type=\"text\" name=\"cfg-pg-hero_url\" class=\"cc-input__input | cc-products-grid__hero-url\" id=\"cfg-pg-hero_url\" v-model=\"configuration.hero.href\">\n                            <span class=\"cc-input__addon | cc-products-grid-configurator__widget-chooser-trigger\" @click=\"openCtaTargetModal()\">\n                                <svg class=\"cc-input__addon-icon\">\n                                    <use xlink:href=\"#icon_link\"></use>\n                                </svg>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>`,\n    /**\n     * Get dependencies\n     */\n    components: {\n        'action-button': actionButton,\n        'component-actions': componentActions,\n    },\n    props: {\n        configuration: {\n            type: Object,\n            default(): Object {\n                return {\n                    category_id: '',\n                    filter: '',\n                    order_by: 'creation_date',\n                    order_type: 'ASC',\n                    rows_desktop: 1,\n                    rows_tablet: 1,\n                    rows_mobile: 1,\n                    skus: '',\n                    limit: '',\n                    class_overrides: {\n                        dataProvider: '',\n                    },\n                    hero: {\n                        position: '',\n                        image: '',\n                        displayVariant: '1',\n                        colorScheme: 'light',\n                        headline: '',\n                        subheadline: '',\n                        paragraph: '',\n                        href: '',\n                        button: {\n                            label: '',\n                        },\n                        decoded_image: '',\n                    },\n                };\n            },\n        },\n        /* get assets for displaying component images */\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n        /* Obtain base-url for the image uploader */\n        uploaderBaseUrl: {\n            type: String,\n            default: '',\n        },\n        /* Obtain image endpoint to place permanent url for uploaded images */\n        imageEndpoint: {\n            type: String,\n            default: '',\n        },\n        /* Obtain endpoint for getting categories data for category picker */\n        categoriesDataUrl: {\n            type: String,\n            default: '',\n        },\n        /* Obtain admin url */\n        adminPrefix: {\n            type: String,\n            default: 'admin',\n        },\n        /* Obtain content-constructor's config file */\n        ccConfig: {\n            type: Object,\n            default(): any {\n                return {};\n            },\n        },\n        /* Obtain content of etc/view.json of the current theme */\n        viewXml: {\n            type: Object,\n            default(): any {\n                return {};\n            },\n        },\n        productCollectionsSorters: {\n            type: [String, Array],\n            default: '',\n        },\n        productCollectionsFilters: {\n            type: [String, Array],\n            default: '',\n        },\n    },\n    computed: {\n        imageTeasersContentPositions: function(): object {\n            const data: object = this.ccConfig.image_teasers_content_positions;\n            return Object.keys(data).map(key => (<any>data)[key]);\n        },\n    },\n    data(): Object {\n        return {\n            imageUploadedText: $t('Change'),\n            noImageUploadedText: $t('Upload'),\n            categoryPicker: undefined,\n            tmpConfiguration: {\n                rows_mobile: this.getRowsSetup('rows_mobile'),\n                rows_tablet: this.getRowsSetup('rows_tablet'),\n                rows_desktop: this.getRowsSetup('rows_desktop'),\n            },\n            scenarioOptions: {\n                rows_mobile: {\n                    1: {\n                        name:  $t('1 row of products'),\n                        iconId: 'pr_1',\n                    },\n                    2: {\n                        name:  $t('2 rows of products'),\n                        iconId: 'pr_2',\n                    },\n                    3: {\n                        name:  $t('3 rows of products'),\n                        iconId: 'pr_3',\n                    },\n                    4: {\n                        name:  $t('4 rows of products'),\n                        iconId: 'pr_4',\n                    },\n                    1000: {\n                        name: $t(' rows of products'),\n                        iconId: 'pr_custom',\n                    },\n                },\n                rows_tablet: {\n                    1: {\n                        name:  $t('1 row of products'),\n                        iconId: 'pr_1',\n                    },\n                    2: {\n                        name:  $t('2 rows of products'),\n                        iconId: 'pr_2',\n                    },\n                    3: {\n                        name:  $t('3 rows of products'),\n                        iconId: 'pr_3',\n                    },\n                    4: {\n                        name:  $t('4 rows of products'),\n                        iconId: 'pr_4',\n                    },\n                    1000: {\n                        name: $t(' rows of products'),\n                        iconId: 'pr_custom',\n                    },\n                },\n                rows_desktop: {\n                    1: {\n                        name:  $t('1 row of products'),\n                        iconId: 'pr_1',\n                    },\n                    2: {\n                        name:  $t('2 rows of products'),\n                        iconId: 'pr_2',\n                    },\n                    3: {\n                        name:  $t('3 rows of products'),\n                        iconId: 'pr_3',\n                    },\n                    4: {\n                        name:  $t('4 rows of products'),\n                        iconId: 'pr_4',\n                    },\n                    1000: {\n                        name: $t(' rows of products'),\n                        iconId: 'pr_custom',\n                    },\n                },\n                hero: {\n                    position: {\n                        '': {\n                            name:  $t('No Hero Teaser'),\n                            iconId: 'no_teaser',\n                        },\n                        'left': {\n                            name:  $t('Hero Teaser on the left'),\n                            iconId: 'teaser_left',\n                        },\n                        'right': {\n                            name:  $t('Hero Teaser on the right'),\n                            iconId: 'teaser_right',\n                        }\n                    }\n                },\n            },\n        };\n    },\n    events: {\n        /**\n         * Listen on save event from Content Configurator component.\n         */\n        'component-configurator__save'(): void {\n            if (this.configuration.class_overrides.dataProvider === '') {\n                delete this.configuration.class_overrides;\n            }\n\n            this.onSave();\n        },\n    },\n    methods: {\n        setOption(optionCategory: string, optionId: string, key?: string): void {\n            if (key) {\n                this.configuration[optionCategory][key] = optionId;\n            } else {\n                this.configuration[optionCategory] = optionId === '1000' ? this.tmpConfiguration[optionCategory] : optionId;\n            }\n\n            this.setProductsLimit();\n        },\n        /* Opens M2's built-in image manager modal.\n         * Manages all images: image upload from hdd, select image that was already uploaded to server.\n         * @param index {number} - index of image of image teaser.\n         */\n        getImageUploader( index: number ): void {\n            MediabrowserUtility.openDialog(`${this.uploaderBaseUrl}target_element_id/products-grid-img/`,\n                'auto',\n                'auto',\n                $t('Insert File...'),\n                {\n                    closed: true,\n                },\n            );\n        },\n\n        /* Listener for image uploader\n         * Since Magento does not provide any callback after image has been chosen\n         * we have to watch for target where decoded url is placed\n         */\n        imageUploadListener(): void {\n            const component: any = this;\n            let isAlreadyCalled: boolean = false;\n\n            // jQuery has to be used, for some reason native addEventListener doesn't catch change of input's value\n            $(document).on('change', '.cc-products-grid-configurator__image-url', (event: Event): void => {\n                if (!isAlreadyCalled) {\n                    isAlreadyCalled = true;\n                    component.onImageUploaded(event.target);\n                    setTimeout((): void => {\n                        isAlreadyCalled = false;\n                    }, 100);\n                }\n            });\n        },\n\n        /* Action after image was uploaded\n         * URL is encoded, so strip it and decode Base64 to get {{ media url=\"...\"}} format\n         * which will go to the items.image and will be used to display image on front end\n         * @param input { object } - input with raw image path which is used in admin panel\n         */\n        onImageUploaded(input: any): void {\n            const _this: any = this;\n            // const itemIndex: any = input.id.substr( input.id.length - 1 );\n            const encodedImage: any = input.value.match('___directive\\/([a-zA-Z0-9]*)')[1];\n            const imgEndpoint: string = this.imageEndpoint.replace('{/encoded_image}', encodedImage);\n\n            this.configuration.hero.decoded_image = Base64 ? Base64.decode(encodedImage) : window.atob(encodedImage);\n\n            const img: any = new Image();\n            img.onload = function(): void {\n                _this.configuration.hero.image = img.getAttribute('src');\n                _this.onChange();\n            };\n            img.src = imgEndpoint;\n        },\n\n        /*\n         * Opens modal with M2 built-in widget chooser\n         */\n        openCtaTargetModal(): void {\n            widgetTools.openDialog(`${window.location.origin}/${this.adminPrefix}/admin/widget/index/widget_target_id/cfg-pg-hero_url`);\n\n            this.wWidgetListener();\n        },\n\n        /* Sets listener for widget chooser\n         * It triggers component.onChange to update component's configuration\n         * after value of item.ctaTarget is changed\n         */\n        widgetSetListener(): void {\n            $('.cc-products-grid__hero-url').on('change', (): void => {\n                this.onChange();\n            });\n        },\n\n        /*\n         * Check if widget chooser is loaded. If not, wait for it, if yes:\n         * Override default onClick for \"Insert Widget\" button in widget's modal window\n         * to clear input's value before inserting new one\n         */\n        wWidgetListener(): void {\n            if (typeof wWidget !== 'undefined' && widgetTools.dialogWindow[0].innerHTML !== '') {\n                const button: any = widgetTools.dialogWindow[0].querySelector('#insert_button');\n\n                button.onclick = null;\n                button.addEventListener( 'click', (): void => {\n                    this.configuration.hero.href = '';\n                    wWidget.insertWidget();\n                } );\n            } else {\n                setTimeout(this.wWidgetListener, 300);\n            }\n        },\n        /**\n         * Checks if given option is currently selected\n         * @param  optionCategory {string} - section of the option\n         * @param  optionId {string} - value of the option\n         * @return {boolean}\n         */\n        isOptionSelected(optionCategory: string, optionId: string): boolean {\n            return this.configuration[optionCategory] == optionId || (optionId === '1000' && this.configuration[optionCategory] > 4);\n        },\n\n        /**\n         * This method is searching through ccConfig configuration\n         * to find the highest value for columns across whole project\n         * @return {number} the highest possible columns per row value\n         */\n        getMaxPossibleColumns(): number {\n            const maxColumns: object = this.ccConfig.columns['one-column'];\n            return Math.max.apply(Math, Object.keys(maxColumns).map(key => (<any>maxColumns)[key]));\n        },\n\n        /**\n         * Calculate how many products should be returned by BE, \n         * then saves result to component's configuration\n         */\n        setProductsLimit(): void {\n            const heroWidth: number = parseInt(this.viewXml.vars.MageSuite_ContentConstructorFrontend.product_grid.teasers_configuration.size.x, 10);\n            const heroHeight: number = parseInt(this.viewXml.vars.MageSuite_ContentConstructorFrontend.product_grid.teasers_configuration.size.y, 10);\n            const maxRowsSet: number = Math.max(this.configuration.rows_mobile, this.configuration.rows_tablet, this.configuration.rows_desktop);\n            const isHeroEnabled: boolean = this.configuration.hero.position !== '';\n            let heroSize: number = isHeroEnabled ? heroWidth * heroHeight : 0;\n\n            if (heroSize >= 1 && maxRowsSet < heroHeight) {\n                heroSize = heroWidth;\n            }\n\n            this.configuration.limit = (maxRowsSet * this.getMaxPossibleColumns()) - heroSize;\n        },\n\n        /**\n         * This returns number that is visible in the input of custom rows limit.\n         * If value is less than 5 it wil return one of hardcoded scenarios (1-4 rows)\n         * @param  layoutOption {string} - rows_mobile / rows_tablet / rows_desktop\n         * @return {number} rows limit for custom input\n         */\n        getRowsSetup(layoutOption: string): number {\n            return this.configuration[layoutOption] > 5 ? this.configuration[layoutOption] : 5;\n        },\n    },\n    ready(): void {\n        this.productCollectionsSorters = this.productCollectionsSorters !== '' ? JSON.parse(this.productCollectionsSorters) : [];\n        this.productCollectionsFilters = this.productCollectionsFilters !== '' ? JSON.parse(this.productCollectionsFilters) : [];\n\n        if (!this.configuration.class_overrides) {\n            this.configuration.class_overrides = {\n                dataProvider: '',\n            };\n        }\n\n        this.setProductsLimit();\n\n        // Show loader\n        $('body').trigger('showLoadingPopup');\n\n        // Get categories JSON with AJAX\n        this.$http.get(this.categoriesDataUrl).then((response: any): void => {\n            this.categoryPicker = new categoryPicker($('#cfg-pg-category'), JSON.parse(response.body), {\n                multiple: false,\n            });\n\n            // Hide loader\n            $('body').trigger('hideLoadingPopup');\n            $('.tmp-select').remove();\n        });\n\n        this.imageUploadListener();\n        this.widgetSetListener();\n    },\n}\n\nexport default productsGridConfigurator;\n","import $ from 'jquery';\r\nimport $t from 'mage/translate';\r\n\r\nimport componentConfigurator from '../../_component-configurator/component-configurator';\r\n\r\n/**\r\n * Static block configurator component.\r\n * This component is responsible for displaying static block's configuration form\r\n * @type {vuejs.ComponentOption} Vue component object.\r\n */\r\nconst staticBlockConfigurator: vuejs.ComponentOption = {\r\n    mixins: [\r\n        componentConfigurator,\r\n    ],\r\n    template: '#cc-static-block-template',\r\n    props: {\r\n        configuration: {\r\n            type: Object,\r\n            default(): Object {\r\n                return {\r\n                    identifier: '',\r\n                    title: '',\r\n                    resetstyles: false,\r\n                };\r\n            },\r\n        },\r\n    },\r\n    events: {\r\n        /**\r\n         * Listen on save event from Content Configurator component.\r\n         */\r\n        'component-configurator__save'(): void {\r\n            const selectedOption: any = this.$els.cmsBlocksSelect.options[this.$els.cmsBlocksSelect.selectedIndex];\r\n\r\n            if (this.configuration.identifier === selectedOption.value && this.configuration.identifier !== '') {\r\n                this.configuration.title = selectedOption.text;\r\n                this.onSave();\r\n            }\r\n        },\r\n    },\r\n};\r\n\r\nexport default staticBlockConfigurator;\r\n","/* tslint:disable:no-console */\n\n// Vue & jQuery\nimport $ from 'jquery';\nimport Vue from 'Vue';\nimport vr from 'VueResource';\n\n// Magento modules\nimport 'loadingPopup';\nimport $t from 'mage/translate';\nimport modal from 'Magento_Ui/js/modal/modal';\nimport alert from 'Magento_Ui/js/modal/alert';\nimport uiRegistry from 'uiRegistry';\n\n// CC essentials\nimport componentPicker from './components/_component-picker/component-picker';\nimport { IComponentInformation, layoutBuilder } from './components/_layout-builder/layout-builder';\n\n// CC components\nimport buttonConfigurator from './components/button/configurator/button';\nimport categoryLinksConfigurator from './components/category-links/configurator/category-links';\nimport cmsPagesTeaserConfigurator from './components/cms-pages-teaser/configurator/cms-pages-teaser';\nimport customHtmlConfigurator from './components/custom-html/configurator/custom-html';\nimport dailyDealTeaserConfigurator from './components/daily-deal-teaser/configurator/daily-deal-teaser';\nimport headlineConfigurator from './components/headline/configurator/headline';\nimport heroCarouselConfigurator from './components/hero-carousel/configurator/hero-carousel';\nimport imageTeaserConfigurator from './components/image-teaser/configurator/image-teaser';\nimport magentoProductGridTeasersConfigurator from './components/magento-product-grid-teasers/configurator/magento-product-grid-teasers';\nimport paragraphConfigurator from './components/paragraph/configurator/paragraph';\nimport productCarouselConfigurator from './components/product-carousel/configurator/product-carousel';\nimport productFinderConfigurator from './components/product-finder/configurator/product-finder';\nimport productsGridConfigurator from './components/products-grid/configurator/products-grid';\nimport staticBlockConfigurator from './components/static-block/configurator/static-block';\n\n// Use Vue resource\nVue.use(vr);\n\n// Set Vue's $http headers Accept to text/html\nVue.http.headers.custom.Accept = 'text/html';\n\n// Picker modal options\nconst pickerModalOptions: any = {\n    type: 'slide',\n    responsive: true,\n    innerScroll: true,\n    autoOpen: true,\n    title: $t('Please select type of component'),\n    buttons: [\n        {\n            text: $.mage.__('Cancel'),\n            class: '',\n            click(): void {\n                this.closeModal();\n            },\n        },\n    ],\n};\nlet $pickerModal: any;\n\nconst configuratorModalOptions: any = {\n    type: 'slide',\n    responsive: true,\n    innerScroll: true,\n    autoOpen: true,\n    title: $t('Configure your component'),\n    buttons: [\n        {\n            text: $.mage.__('Cancel'),\n            class: '',\n            click(): void {\n                this.closeModal();\n            },\n        },\n        {\n            text: $.mage.__('Save'),\n            class: 'action-primary',\n        },\n    ],\n};\nlet $configuratorModal: any;\n\n/**\n * M2C Content Constructor component.\n * This is the final layer that is responsible for collecting and tying up all\n * of the M2C admin panel logic.\n */\nconst contentConstructor: vuejs.ComponentOption = {\n    template: `<div class=\"content-constructor\">\n        <layout-builder\n            v-ref:layout-builder\n            :assets-src=\"assetsSrc\"\n            :cc-config=\"ccConfig\"\n            :image-endpoint=\"imageEndpoint\"\n            :cc-project-configuration=\"ccProjectConfiguration\"\n            :page-type=\"pageType\"\n            :add-component=\"getComponentPicker\"\n            :edit-component=\"editComponent\"\n            :components-configuration=\"configuration\">\n        </layout-builder>\n        <div class=\"content-constructor__modal content-constructor__modal--picker\" v-el:picker-modal></div>\n        <div class=\"content-constructor__modal content-constructor__modal--configurator\" v-el:configurator-modal></div>\n    </div>`,\n    components: {\n        // Essentials\n        'layout-builder': layoutBuilder,\n        'component-picker': componentPicker,\n        // CC components\n        'button-configurator': buttonConfigurator,\n        'category-links-configurator': categoryLinksConfigurator,\n        'custom-html-configurator': customHtmlConfigurator,\n        'cms-pages-teaser-configurator': cmsPagesTeaserConfigurator,\n        'daily-deal-teaser-configurator': dailyDealTeaserConfigurator,\n        'headline-configurator': headlineConfigurator,\n        'hero-carousel-configurator': heroCarouselConfigurator,\n        'image-teaser-configurator': imageTeaserConfigurator,\n        'magento-product-grid-teasers-configurator': magentoProductGridTeasersConfigurator,\n        'paragraph-configurator': paragraphConfigurator,\n        'product-carousel-configurator': productCarouselConfigurator,\n        'product-finder-configurator': productFinderConfigurator,\n        'products-grid-configurator': productsGridConfigurator,\n        'static-block-configurator': staticBlockConfigurator,\n        \n    },\n    props: {\n        configuration: {\n            type: String,\n            default: '',\n        },\n        adminPrefix: {\n            type: String,\n            default: 'admin',\n        },\n        assetsSrc: {\n            type: String,\n            default: '',\n        },\n        configuratorEndpoint: {\n            type: String,\n            default: '',\n        },\n        uploaderUrl: {\n            type: String,\n            default: '',\n        },\n        restTokenEndpoint: {\n            type: String,\n            default: '',\n        },\n        imageEndpoint: {\n            type: String,\n            default: '',\n        },\n        categoryDataProviderEndpoint: {\n            type: String,\n            default: '',\n        },\n        pageType: {\n            type: String,\n            default: 'cms_page_form.cms_page_form',\n        },\n        productsPerPage: {\n            type: String,\n            default: '30',\n        },\n        ccProjectConfig: {\n            type: String,\n            default: '',\n        },\n        sorters: {\n            type: [String, Array],\n            default: '',\n        },\n        filters: {\n            type: [String, Array],\n            default: '',\n        },\n    },\n    data(): object {\n        return {\n            ccConfig: this.getCCconfig(),\n            viewXml: JSON.parse(this.ccProjectConfig),\n            initialComponentConfiguration: undefined,\n            restToken: undefined,\n        };\n    },\n    ready(): void {\n        this.dumpConfiguration();\n        this._isPickerLoaded = false;\n        this._cleanupConfiguratorModal = '';\n        this._configuratorSaveCallback = (): undefined => undefined;\n        this.setRestToken();\n\n        // Initialize M2 loader for m2c modals\n        $('body').loadingPopup({\n            timeout: false,\n        }).trigger('hideLoadingPopup');\n    },\n    events: {\n        /**\n         * We update provided input with new components information each time leyout\n         * builder updates.\n         */\n        'layout-builder__update'(): void {\n            this.dumpConfiguration();\n        },\n        'component-configurator__saved'(data: any): void {\n            if (!data.hasOwnProperty('isError') || (data.hasOwnProperty('isError') && !data.isError)) {\n                this._configuratorSavedCallback(data);\n\n                if ($configuratorModal && $configuratorModal.closeModal) {\n                    $configuratorModal.closeModal();\n                }\n                if ($pickerModal && $pickerModal.closeModal) {\n                    $pickerModal.closeModal();\n                }\n            } else {\n                alert({\n                    title: $t('Hey,'),\n                    content: $.mage.__('Something is wrong with configuration of your component. Please fix all errors before saving.'),\n                });\n            }\n        },\n        'layout-builder__cmsblock-delete-request'(cmsBlockId: string): void {\n            this.deleteStaticBlock(cmsBlockId);\n        },\n    },\n    methods: {\n        getCCconfig(): JSON {\n            const ccConfig: any = this.ccProjectConfig ? JSON.parse(this.ccProjectConfig) : {};\n            return !$.isEmptyObject(ccConfig) ? ccConfig.vars.MageSuite_ContentConstructor : ccConfig;\n        },\n\n        /**\n         * Callback that will be invoked when user clicks plus button.\n         * This method should open magento modal with component picker.\n         * @param  {IComponentInformation} addComponentInformation Callback that let's us add component asynchronously.\n         */\n        getComponentPicker(addComponentInformation: (componentInfo: IComponentInformation) => void): void {\n            const component: any = this;\n\n            // Save adding callback for async use.\n            this._addComponentInformation = addComponentInformation;\n\n            pickerModalOptions.opened = function(): void {\n                if (!component._isPickerLoaded) {\n                    // Show ajax loader\n                    $('body').trigger('showLoadingPopup');\n\n                    // Get picker via AJAX\n                    component.$http.get(`${component.configuratorEndpoint}picker`).then((response: any): void => {\n                        component.$els.pickerModal.innerHTML = response.body;\n                        component.$compile(component.$els.pickerModal);\n                        component._isPickerLoaded = true;\n                        // Hide loader\n                        $('body').trigger('hideLoadingPopup');\n                    });\n                }\n            };\n            // Create or Show picker modal depending if exists\n            if ($pickerModal) {\n                $pickerModal.openModal();\n            } else {\n                $pickerModal = modal(pickerModalOptions, $(this.$els.pickerModal));\n            }\n        },\n\n        /**\n         * Callback that will be invoked when user choses component in picker.\n         * This method should open magento modal with component configurator.\n         * @param {componentType} String - type of component chosen\n         */\n        getComponentConfigurator(componentType: string): void {\n            const newComponentId: string = 'component' + Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n            const section: string = this.ccConfig.sections.defaults[this.pageType] ? this.ccConfig.sections.defaults[this.pageType] : this.ccConfig.sections[this.pageType][0];\n\n            this._configuratorSavedCallback = (componentData: any): void => {\n                this._addComponentInformation({\n                    type: componentType,\n                    id: newComponentId,\n                    section: section,\n                    data: componentData,\n                });\n            };\n\n            if (componentType === 'brand-carousel' || componentType === 'separator') {\n                this.$emit('component-configurator__saved', {\n                    componentVisibility: {\n                        mobile: true,\n                        desktop: true,\n                    },\n                });\n            } else {\n                this.initConfiguratorModal({\n                    type: componentType,\n                    id: newComponentId,\n                    section: section,\n                    data: undefined,\n                });\n            }\n        },\n        /**\n         * Callback that will be invoked when user clicks edit button.\n         * This method should open magento modal with component editor.\n         * @param  {IComponentInformation} setComponentInformation Callback that let's us add component asynchronously.\n         */\n        editComponent(\n            prevComponentData: IComponentInformation,\n            setComponentInformation: (componentInfo: IComponentInformation) => void,\n        ): void {\n            this._configuratorSavedCallback = (componentData: any): void => {\n                setComponentInformation({\n                    type: prevComponentData.type,\n                    id: prevComponentData.id,\n                    section: prevComponentData.section,\n                    data: componentData,\n                });\n            };\n\n            this.initConfiguratorModal(prevComponentData);\n        },\n\n        initConfiguratorModal(componentInformation: IComponentInformation): void {\n            const component: any = this;\n            let cleanupConfiguratorModal = (): undefined => undefined;\n\n            configuratorModalOptions.buttons[1].click = function(): void {\n                component.$broadcast('component-configurator__save');\n            };\n            configuratorModalOptions.title = `${$t('Configure your component')}<span class=\"m2c-content-constructor__modal-subheadline\">${this.transformComponentTypeToText(componentInformation.type)}</span>`;\n\n            // Configurator modal opened callback\n            configuratorModalOptions.opened = function(): void {\n                // Show ajax loader\n                $('body').trigger('showLoadingPopup');\n\n                // Get twig component\n                component.$http.get(component.configuratorEndpoint + componentInformation.type).then((response: any): void => {\n                    component.$els.configuratorModal.innerHTML = response.body;\n\n                    // Set current component configuration data\n                    component.initialComponentConfiguration = componentInformation.data;\n\n                    // compile fetched component\n                    cleanupConfiguratorModal = component.$compile(component.$els.configuratorModal);\n\n                    // Hide loader\n                    $('body').trigger('hideLoadingPopup');\n                });\n            };\n\n            configuratorModalOptions.closed = function(): void {\n                // Cleanup configurator component and then remove modal\n                cleanupConfiguratorModal();\n                component.$els.configuratorModal.innerHTML = '';\n                $configuratorModal.modal[0].parentNode.removeChild($configuratorModal.modal[0]);\n                component.initialComponentConfiguration = undefined;\n            };\n            // Create & Show $configuratorModal\n            $configuratorModal = modal(configuratorModalOptions, $(this.$els.configuratorModal));\n        },\n\n        dumpConfiguration(): void {\n            uiRegistry.get(this.pageType).source.set(\n                'data.components',\n                JSON.stringify(\n                    this.$refs.layoutBuilder.getComponentInformation(),\n                ),\n            );\n        },\n\n        setRestToken(): void {\n            const component: any = this;\n\n            // send request for token\n            this.$http.get(this.restTokenEndpoint).then((response: any): void => {\n                component.restToken = `Bearer ${response.body}`;\n            });\n        },\n\n        deleteStaticBlock(cmsBlockId: string): void {\n            const component: any = this;\n\n            // Send request to REST API\n            this.$http({\n                headers: {\n                    Accept: 'application/json',\n                    Authorization: component.restToken,\n                },\n                method: 'delete',\n                url: `${window.location.origin}/rest/V1/cmsBlock/${cmsBlockId}`,\n            }).then((response: any): void => {\n                if (response.body !== 'true') {\n                    console.warn(`Something went wrong, CMS block wasn\\'t removed, please check if block with ID: ${cmsBlockId} exists in database`);\n                }\n            });\n        },\n\n        transformComponentTypeToText(componentType: string): string {\n            const txt: string = componentType.replace('-', ' ');\n            return txt.charAt(0).toUpperCase() + txt.slice(1);\n        },\n    },\n};\n\nexport default contentConstructor;\n"],"names":["productFinderConfigurator"],"mappings":"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"}
